import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'
apply plugin: 'applovin-quality-service'
apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'  // Add the Crashlytics Gradle plugin

applovin {
    // NOTE: DO NOT CHANGE - this is NOT your AppLovin MAX SDK key - this is a derived key.
    apiKey 'XgV21gKO8KUBo7iAFD2X-eAau8t1Zf9o15VMEJUXbkNhk_M-qQCMgTgni9Q04yOd20XwGvQMwmWb2BGb49yooI'
}

android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion '30.0.2'

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

//    configurations.all{
//        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
//            def requested = details.requested
//            if (requested.group == 'com.squareup.okhttp3:okhttp') {
//                if (!requested.name.startsWith("multidex")) {
//                    details.useVersion '4.4.0'
//                }
//            }
//        }
//    }

    defaultConfig {
        applicationId "com.riceball.gpknives"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 10037
        versionName "1.0.37"
        multiDexEnabled true
//        androidXCore = "1.6.0"
        //ab_Test字段
        // buildConfigField "String", "ab_test", "\"1.0.36_A\""
        packagingOptions {
            exclude 'META-INF/proguard/okhttp3.pro'
        }
        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'
                    
                    def module_paths = [project.file("E:/CocosCreator_2.2.0/resources/cocos2d-x"),
                                        project.file("E:/CocosCreator_2.2.0/resources/cocos2d-x/cocos"),
                                        project.file("E:/CocosCreator_2.2.0/resources/cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
                }
            }
        }
        ndk {
            abiFilters 'armeabi-v7a','arm64-v8a' //'arm64-v8a'//,  //, 'x86'//, 'armeabi-v7a', 'x86_64', mips, mips64...������Ҫ���ɵ��ļ���
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
//        jniLibs.srcDir "libs"
        jniLibs.srcDirs = ['libs']
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
    ndkVersion = "21.4.7075529"
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

//    variant.mergeAssets.doLast { 修改 报警错误 API 'variant.getMergeAssets()' is obsolete
    variant.mergeAssetsProvider.get().doLast{
        def sourceDir = "${buildDir}/../../../../.."

        copy {
            from "${sourceDir}/res"
            into "${outputDir}/res"
            into outputDir.dir("res")
        }

        copy {
            from "${sourceDir}/subpackages"
            into "${outputDir}/subpackages"
            into outputDir.dir("subpackages")
        }

        copy {
            from "${sourceDir}/src"
            into "${outputDir}/src"
            into outputDir.dir("src")
        }

        copy {
            from "${sourceDir}/jsb-adapter"
            into "${outputDir}/jsb-adapter"
            into outputDir.dir("jsb-adapter")
        }

        copy {
            from "${sourceDir}/main.js"
            from "${sourceDir}/project.json"
            into outputDir
        }
    }
}

repositories {
    google()
    mavenCentral()
    jcenter()
    maven { url "https://dl-maven-android.mintegral.com/repository/mbridge_android_sdk_oversea" }
    maven { url "https://artifact.bytedance.com/repository/pangle" }
    maven { url "https://sdk.tapjoy.com" }
    maven { url "https://verve.jfrog.io/artifactory/verve-gradle-release" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    def billing_version = "4.1.0"

    implementation "com.android.billingclient:billing:$billing_version"

    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: '../libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: "E:/CocosCreator_2.2.0/resources/cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')

//    implementation (project(':libcocos2dx')){
//        exclude group: 'com.squareup.okhttp3',module:'okhttp'
//        exclude group: 'com.squareup.okio'
//    }
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.1.1')
    // Declare the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    //appsflyer
//     implementation 'com.appsflyer:af-android-sdk:4.9.0'
    implementation 'com.appsflyer:af-android-sdk:6.9.0' //2023/2/16 升级到最新
    implementation "com.android.installreferrer:installreferrer:2.2"
    // compile(name:'encryptor-0.0.9-rc.2-private',ext:'aar')

    //文档粘贴
    implementation 'com.applovin:applovin-sdk:11.6.1'
    implementation 'com.applovin.mediation:adcolony-adapter:4.8.0.3'
    implementation 'com.applovin.mediation:google-ad-manager-adapter:21.4.0.1'
    implementation 'com.applovin.mediation:google-adapter:21.4.0.1'

    implementation 'com.applovin.mediation:facebook-adapter:6.12.0.2'
    implementation 'com.applovin.mediation:mintegral-adapter:16.3.41.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.applovin.mediation:bytedance-adapter:4.9.0.7.0'
    implementation 'com.applovin.mediation:tapjoy-adapter:12.11.1.1'
    implementation 'com.applovin.mediation:verve-adapter:2.17.0.0'
    implementation ('com.applovin.mediation:vungle-adapter:6.12.1.0'){
        exclude group: 'com.squareup.okhttp3'
        exclude group: 'com.squareup.okio'
    }

    implementation ('com.android.volley:volley:1.1.1'){
        exclude group: 'com.squareup.okhttp3'
        exclude group: 'com.squareup.okio'
    }

    implementation("androidx.lifecycle:lifecycle-process:2.2.0")

    implementation 'com.github.bitbeen:BitverseConnectKotlin:1.0.0'

//    implementation ('com.github.bitbeen:BitverseConnectKotlin:1.0.0'){
//        exclude group: 'com.squareup.okhttp3'
//        exclude group: 'com.squareup.okio'
//    }
//    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    //其他中介广告源
    //Admob
//    implementation 'com.applovin.mediation:google-adapter:21.4.0.1'

    //FB
//    implementation 'com.applovin.mediation:facebook-adapter:6.12.0.2'
//    unity
//    implementation 'com.applovin.mediation:unityads-adapter:4.5.0.1'
    //vungle
//    implementation 'com.applovin.mediation:vungle-adapter:6.12.0.5'

//    //mintegral
//    implementation 'com.applovin.mediation:mintegral-adapter:16.3.41.1'
//    implementation 'androidx.recyclerview:recyclerview:1.1.0'
}
