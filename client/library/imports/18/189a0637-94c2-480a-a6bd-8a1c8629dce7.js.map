{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\player/assets\\scripts\\battle\\component\\player\\PlayerKnivesComponent.js"],"names":["Tools","require","KnifeState","FlitInterval","FrenzyAddType","PlayerKnivesComponent","cc","Class","extends","Component","properties","knives","flags","isDirty","emitTime","index","player","isSage","init","ownerPlayer","node","on","isGuide","startGame","concat","addKnife","reduceKnife","resetDirty","heroStartMove","heroStopMove","wallCollision","collCircleWall","detail","isCollisionWall","emitAttackState","isCollCircleWall","isMove","isDefence","length","interval","getIntervalByCount","stopMoveTime","flitIndex","limitTime","danceTime","danceKnifeArr","i","knife","emit","updateLogic","dt","curFlitKnife","splice","time","nextLimitTime","isNoMoreKnife","getComponent","reLand","arrContains","push","addKnifeNum","pick","indexOf","arrRemove","throw","emitAllKnivesCountChange","emitAllKnivesRelease","allKnives","slice","emitAllKnivesChangeSkin","skinNode","getKnifeNum","setSage","value","changeColliderState","state"],"mappings":"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","file":"PlayerKnivesComponent.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\player","sourcesContent":["const Tools = require('Tools');\nconst KnifeState = require('Types').KnifeState;\nconst FlitInterval = [4, 6, 8, 9, 10, 11];\nconst FrenzyAddType = require('Types').FrenzyAddType;\n/**\n * @fileoverview 刀在玩家身上时的index与刀数量\n * @author jinhaitao@gameley.cn (金海涛)\n */\nconst PlayerKnivesComponent = cc.Class({\n    extends: cc.Component,\n    properties: {\n        knives: [], //Node 数组\n        flags: [], //是否发送过状态的标志位\n        isDirty: false,\n        emitTime: 0,\n        index: 0,\n        player: null,\n        /** 初复活阶段 贤者模式 不杀人 半透明 */\n        isSage: false,\n    },\n\n    init: function (ownerPlayer) {\n        this.player = ownerPlayer;\n        this.node.on('startGame', (isGuide) => {\n            this.isGuide = isGuide;\n            this.startGame = true;\n            this.knives = this.knives.concat();\n        }, this);\n        this.node.on('addKnife', this.addKnife, this);\n        this.node.on('reduceKnife', this.reduceKnife, this);\n        this.node.on('resetDirty', this.resetDirty, this);\n        this.node.on('heroStartMove', this.heroStartMove, this);\n        this.node.on('heroStopMove', this.heroStopMove, this);\n        this.node.on('wallCollision', this.wallCollision, this);\n        this.node.on('isCollCircleWall', this.collCircleWall, this);\n        // this.node.on('setSage', this.setSage, this);\n    },\n\n    wallCollision: function (detail) {\n        if (detail) {\n            if (!this.isCollisionWall) {\n                this.emitAttackState();\n            }\n        }\n        this.isCollisionWall = detail;\n\n    },\n\n    collCircleWall: function (detail) {\n        if (detail) {\n            if (!this.isCollCircleWall) {\n                this.emitAttackState();\n            }\n        }\n        this.isCollCircleWall = detail;\n    },\n\n    heroStartMove: function () {\n        this.isMove = true;\n        this.player.isDefence = false;\n        this.emitAttackState();\n    },\n\n    heroStopMove: function () {\n        this.isMove = false;\n        this.index = 0;\n        var length = this.knives.length;\n        this.interval = Tools.getIntervalByCount(length);\n        this.player.isDefence = true;\n        this.stopMoveTime = 0;\n        this.flitIndex = 0;\n        this.limitTime = FlitInterval[this.flitIndex] ? FlitInterval[this.flitIndex] : FlitInterval[FlitInterval.length - 1] + (this.flitIndex - FlitInterval.length + 1) * 0.5;\n        this.danceTime = this.limitTime / 2;\n        this.danceKnifeArr = [];\n    },\n\n\n    emitAttackState() {\n        for (let i = 0; i < this.knives.length; i++) {\n            if (this.flags[i] !== 1) {\n                let knife = this.knives[i];\n                if (knife) {\n                    knife.emit('startChangeToAttack');\n                    this.flags[i] = 1;\n                }\n            }\n        }\n    },\n\n    updateLogic: function (dt) {\n        if (this.isMove === false && !this.isCollisionWall && !this.isCollCircleWall) {\n            if (this.index >= this.knives.length) {\n                this.index = 0;\n                return\n            }\n            this.emitTime += dt;\n            if (this.emitTime >= this.interval / 1000) {\n                if (this.flags[this.index] !== 2) {\n                    var knife = this.knives[this.index]\n                    if (knife) {\n                        knife.emit('startChangeToDefence');\n                        this.flags[this.index] = 2;\n                    }\n                }\n                this.index++;\n                this.emitTime = 0;\n            }\n\n            if (!this.startGame) return;\n            if (this.isGuide) return;\n            if (this.knives.length < 3) return;\n            this.stopMoveTime += dt;\n\n\n            if (this.stopMoveTime > this.limitTime) {\n                // console.log('this.limitTime:'+this.limitTime)\n                var curFlitKnife = this.knives[0];\n                if (curFlitKnife) {\n                    curFlitKnife.emit('throwKnife', true);\n                    this.danceKnifeArr.splice(0, 1);\n                }\n                this.flitIndex++;\n                this.limitTime = FlitInterval[this.flitIndex] ? FlitInterval[this.flitIndex] : FlitInterval[FlitInterval.length - 1] + (this.flitIndex - FlitInterval.length + 1) * 0.5;\n            }\n\n            if (this.stopMoveTime > this.danceTime) {\n                // console.log('this.danceTime:'+this.danceTime)\n                var curFlitKnife = this.knives[0];\n                if (curFlitKnife) {\n                    var time = this.limitTime - this.danceTime;\n                    curFlitKnife.emit('dance', time);\n                    var nextLimitTime = FlitInterval[this.flitIndex + 1] ? FlitInterval[this.flitIndex + 1] : FlitInterval[FlitInterval.length - 1] + (this.flitIndex + 1 - FlitInterval.length + 1) * 0.5;\n                    this.danceTime = (nextLimitTime - this.limitTime) / 2 + this.limitTime;\n                }\n            }\n\n        }\n\n        // flitKnife\n    },\n\n    addKnife: function (detail) {\n        if (this.player.isNoMoreKnife()) {\n            detail.getComponent('EntityKnife').reLand();\n        } else {\n            if (!Tools.arrContains(this.knives, detail)) {\n                this.knives.push(detail);\n                this.player.addKnifeNum(this.knives.length);\n\n                if (this.isMove === true || this.isCollisionWall || this.isCollCircleWall) {\n                    detail.emit('startChangeToAttack');\n                    this.flags[this.knives.length - 1] = 1;\n                } else {\n                    detail.emit('startChangeToDefence');\n                    this.flags[this.knives.length - 1] = 2;\n                }\n                // detail.getComponent('EntityKnife').setSage(this.isSage);\n                detail.emit('updateOwner', this.node);\n                this.isDirty = true;\n                this.player.node.emit('onFrenzyAdd', FrenzyAddType.pick);\n            }\n        }\n    },\n\n    reduceKnife: function (detail) {\n        this.flags.splice(this.knives.indexOf(detail), 1)\n        Tools.arrRemove(this.knives, detail);\n        this.isDirty = true;\n        detail.emit('changeColliderState', true);\n        this.player.node.emit('onFrenzyAdd', FrenzyAddType.throw);\n    },\n\n    resetDirty: function () {\n        this.isDirty = false;\n    },\n\n    emitAllKnivesCountChange: function () {\n        var length = this.knives.length;\n        for (var i = 0; i < length; i++) {\n            this.knives[i].emit('updateCount', [i, length]);\n        }\n    },\n\n    emitAllKnivesRelease: function () {\n        var allKnives = this.knives.slice();\n\n        var length = allKnives.length;\n        for (var i = 0; i < length; i++) {\n            if (allKnives[i]) allKnives[i].emit('throwKnife');\n        }\n\n        allKnives = [];\n        this.knives = [];\n    },\n\n    emitAllKnivesChangeSkin: function () {\n        var length = this.knives.length;\n        for (var i = 0; i < length; i++) {\n            if (this.knives[i]) this.knives[i].getComponent('EntityKnife').skinNode.emit('changeSkin');\n        }\n    },\n\n    getKnifeNum: function () {\n        return this.knives.length;\n    },\n\n    setSage: function (value) {\n        // this.isSage = value;\n        // this.node.opacity = value ? 128 : 255;\n\n        // var length = this.knives.length;\n        // for (var i = 0; i < length; i++) {\n        //     if (this.knives[i]) this.knives[i].getComponent('EntityKnife').setSage(value);\n        // }\n    },\n    changeColliderState(state) {\n        var allKnives = this.knives.slice();\n        var length = allKnives.length;\n        for (var i = 0; i < length; i++) {\n            if (allKnives[i]) allKnives[i].emit('changeColliderState', state);\n        }\n    },\n})"]}