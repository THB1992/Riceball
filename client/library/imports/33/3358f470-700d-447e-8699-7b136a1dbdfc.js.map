{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\common/assets\\scripts\\common\\UpdateMgr.js"],"names":["GameData","require","PlatformMgr","Tools","UpdateMgr","cc","Class","statics","checkNewClient","callback","isPlatformUseWxApi","isDevTool","window","undefined","wxDownloader","wxFsUtils","instance","isEnvironmentCheckUpdate","console","log","wx","getFileSystemManager","fs","unzipFlag","srcVersion","unzipFlagFilePath","cacheDir","access","path","success","fail","storageFlag","getItem","relativePath","url","REMOTE_SERVER_ROOT","zipFilePath","zipDirPath","exists","makeDirSync","downloadFile","error","downloadFilePath","targetPath","unzip","cachedFiles","getCachedFileList","files","readdirSync","length","index","file","writeFile","cachedFileName","JSON","stringify","setItem","filePath","data","errMsg"],"mappings":"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","file":"UpdateMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\common","sourcesContent":["/**\n * @fileoverview UpdateMgr\n * @author <meifan@gameley.cn> (梅凡)\n */\n\nconst GameData = require('GameData');\nconst PlatformMgr = require('PlatformMgr');\nconst Tools = require('Tools');\n\n /**\n * UpdateMgr 更新管理器\n */\nconst UpdateMgr = cc.Class({\n    statics: {\n\n        /**\n         * 检查是否是新安装，若是则需要清空本地下载资源\n         * @param {function} callback 成功回调\n         */\n        checkNewClient: function (callback) {\n            // QQ小游戏由于拉取json太慢，需要把部分json压缩打包，首次进入游戏进行解压缩\n            if (PlatformMgr.isPlatformUseWxApi() &&\n                // PlatformMgr.platformType === PlatformType.QQMINIAPP &&\n                !PlatformMgr.isDevTool &&\n                window !== undefined &&\n                window.wxDownloader !== undefined &&\n                window.wxFsUtils !== undefined &&\n                GameData.instance.isEnvironmentCheckUpdate()) {\n                console.log('UNZIP_TAG 开始检查解压缩');\n                const wxDownloader = window.wxDownloader;\n                const wxFsUtils = window.wxFsUtils;\n                if (wx.getFileSystemManager) {\n                    const fs = wx.getFileSystemManager();\n                    const unzipFlag = 'res_unzip_flag_' + GameData.instance.srcVersion;\n                    const unzipFlagFilePath = wxDownloader.cacheDir + '/' + unzipFlag;\n                    console.log('UNZIP_TAG 开始检查res压缩包 flagFile:' + unzipFlagFilePath);\n                    fs.access({\n                        path: unzipFlagFilePath,\n                        success: function () {\n                            console.log('UNZIP_TAG ' + unzipFlagFilePath + ' 存在，已经解压过了~');\n                            if (callback) callback();\n                        },\n                        fail: function () {\n                            const storageFlag = Tools.getItem(unzipFlag);\n                            if (storageFlag === '1') {\n                                console.log('UNZIP_TAG ' + unzipFlag + ' 存在，已经解压过了~');\n                                if (callback) callback();\n                            } else {\n                                const relativePath = '/res/res.' + GameData.instance.srcVersion + '.zip';\n                                const url = wxDownloader.REMOTE_SERVER_ROOT + relativePath;\n                                const zipFilePath = wxDownloader.cacheDir + relativePath;\n                                const zipDirPath = wxDownloader.cacheDir + '/res';\n                                console.log('UNZIP_TAG ' + unzipFlag + ' 不存在，需要进行下载和解压 url:' + url);\n                                wxFsUtils.exists(zipDirPath, function (exists) {\n                                    console.log('UNZIP_TAG 下载目录是否存在:' + exists);\n                                    if (!exists) {\n                                        wxFsUtils.makeDirSync(zipDirPath, true);\n                                    }\n\n                                    wxFsUtils.downloadFile(url, zipFilePath, function (error, downloadFilePath) {\n                                        if (error) {\n                                            console.error('UNZIP_TAG 下载失败，error:', error);\n                                            if (callback) callback();\n                                        } else {\n                                            console.log('UNZIP_TAG 下载成功，开始解压缩');\n                                            const targetPath = wxDownloader.cacheDir;\n                                            fs.unzip({\n                                                zipFilePath: zipFilePath,\n                                                targetPath: targetPath,\n                                                success: function () {\n                                                    console.log('UNZIP_TAG 解压缩成功，写入缓存文件~');\n                                                    const cachedFiles = wxDownloader.getCachedFileList();\n                                                    if (cachedFiles) {\n                                                        const files = fs.readdirSync(targetPath);\n                                                        console.log('UNZIP_TAG 缓存文件夹中的文件数量:' + files.length);\n                                                        for (let index = 0; index < files.length; index++) {\n                                                            const file = files[index];\n                                                            // console.log('UNZIP_TAG 缓存文件索引:' + index + ' file:' + file);\n                                                            cachedFiles[file] = 1;\n                                                        }\n                                                        wxFsUtils.writeFile(wxDownloader.cacheDir + '/' + wxDownloader.cachedFileName, JSON.stringify(cachedFiles), 'utf8');\n            \n                                                        console.log('UNZIP_TAG 创建flag文件~');\n                                                        Tools.setItem(unzipFlag, '1');\n                                                        fs.writeFile({\n                                                            filePath: unzipFlagFilePath,\n                                                            data: '1',\n                                                            success: function () {\n                                                                console.log('UNZIP_TAG 创建flag文件成功~');\n                                                                if (callback) callback();\n                                                            },\n                                                            fail: function (errMsg) {\n                                                                console.log('UNZIP_TAG 创建flag文件失败！errMsg:', errMsg);\n                                                                if (callback) callback();\n                                                            }\n                                                        });\n                                                    } else {\n                                                        console.log('UNZIP_TAG 缓存信息文件不存在');\n                                                        if (callback) callback();\n                                                    }\n                                                },\n                                                fail: function (errMsg) {\n                                                    console.log('UNZIP_TAG 解压缩失败！errMsg:', errMsg);\n                                                    if (callback) callback();\n                                                }\n                                            });\n                                        }\n                                    });\n                                });\n                            }\n                        },\n                    });\n                            \n                    \n                } else {\n                    console.log('UNZIP_TAG wx.getFileSystemManager is undefined');\n                    if (callback) callback();\n                }\n            // } else if (cc.sys.isNative &&\n            //     PlatformMgr.platformType !== PlatformType.OPPO && \n            //     PlatformMgr.platformType !== PlatformType.VIVO &&\n            //     GameData.instance.isEnvironmentCheckUpdate()) {\n            //     UpdateMgr.initNativeAssetsManager();\n                \n            //     // apk包的version大于js代码里的version,说明js代码是老版本资源,需要清除本地资源并重启游戏\n            //     if (GameData.instance.getVersionCode() > GameData.instance.appVersion) {\n            //         console.log('versionCode greater than appVersion, need cleanup and restart!');\n            //         if (UpdateMgr.cleanupLocalNativeRes(false)) {\n            //             // 重启js引擎\n            //             return;\n            //         }\n            //     }\n            //     if (callback) callback();\n            } else {\n                if (callback) callback();\n            }\n        },\n\n    }\n});"]}