{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\common/assets\\scripts\\common\\BagItem.js"],"names":["Tools","require","ItemType","ConfigData","BagItem","cc","Class","statics","createItemsWithString","rewardStr","splitChar","items","rewards","split","reward","nums","splitToNumList","bagItem","length","createItem","push","createItemWithString","itemStr","type","id","num","data","instance","getItemData","item","itemData","properties","KNIFE_SKIN"],"mappings":";;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,WAAWD,QAAQ,OAAR,EAAiBC,QAAlC;AACA,IAAMC,aAAaF,QAAQ,YAAR,CAAnB;;AAEA,IAAMG,UAAUC,GAAGC,KAAH,CAAS;AACrBC,aAAS;AACL;AACAC,+BAAuB,+BAAUC,SAAV,EAAsC;AAAA,gBAAjBC,SAAiB,uEAAL,GAAK;;AACzD,gBAAMC,QAAQ,EAAd;AACA,gBAAI,CAACF,SAAL,EAAgB;AACZ,uBAAOE,KAAP;AACH;AACD,gBAAMC,UAAUH,UAAUI,KAAV,CAAgBH,SAAhB,CAAhB;AALyD;AAAA;AAAA;;AAAA;AAMzD,qCAAqBE,OAArB,8HAA8B;AAAA,wBAAnBE,MAAmB;;AAC1B,wBAAIA,MAAJ,EAAY;AACR,4BAAIC,OAAOf,MAAMgB,cAAN,CAAqBF,MAArB,EAA6B,GAA7B,CAAX;AACA,4BAAIG,UAAU,IAAd;AACA,4BAAIF,KAAKG,MAAL,IAAe,CAAnB,EAAsB;AAClBD,sCAAUb,QAAQe,UAAR,CAAmBJ,KAAK,CAAL,CAAnB,EAA4BA,KAAK,CAAL,CAA5B,EAAqCA,KAAK,CAAL,CAArC,CAAV;AACAJ,kCAAMS,IAAN,CAAWH,OAAX;AACH;AACJ;AAEJ;AAhBwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBzD,mBAAON,KAAP;AACH,SApBI;AAqBL;AACAU,8BAAsB,8BAAUC,OAAV,EAAmB;AACrC,gBAAMP,OAAOf,MAAMgB,cAAN,CAAqBM,OAArB,EAA8B,GAA9B,CAAb;AACA,mBAAOlB,QAAQe,UAAR,CAAmBJ,KAAK,CAAL,CAAnB,EAA4BA,KAAK,CAAL,CAA5B,EAAqCA,KAAK,CAAL,CAArC,CAAP;AACH,SAzBI;;AA2BLI,oBAAY,oBAAUI,IAAV,EAAgBC,EAAhB,EAAoBC,GAApB,EAAyB;AACjC,gBAAIC,OAAOvB,WAAWwB,QAAX,CAAoBC,WAApB,CAAgCL,IAAhC,EAAsCC,EAAtC,CAAX;AACA,gBAAIK,OAAO,IAAIzB,OAAJ,EAAX;AACAyB,iBAAKN,IAAL,GAAYA,IAAZ;AACAM,iBAAKL,EAAL,GAAUA,EAAV;AACAK,iBAAKC,QAAL,GAAgBJ,IAAhB;AACAG,iBAAKJ,GAAL,GAAWA,GAAX;AACA,mBAAOI,IAAP;AACH;AAnCI,KADY;;AAyCrBE,gBAAY;AACRR,cAAMrB,SAAS8B,UADP;AAERR,YAAI,CAFI;AAGRC,aAAK,CAHG;AAIRK,kBAAU;AAJF;AAzCS,CAAT,CAAhB","file":"BagItem.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\common","sourcesContent":["const Tools = require('Tools');\r\nconst ItemType = require('Types').ItemType;\r\nconst ConfigData = require('ConfigData');\r\n\r\nconst BagItem = cc.Class({\r\n    statics: {\r\n        //创建一组bagItem\r\n        createItemsWithString: function (rewardStr, splitChar = ';') {\r\n            const items = [];\r\n            if (!rewardStr) {\r\n                return items;\r\n            }\r\n            const rewards = rewardStr.split(splitChar);\r\n            for (const reward of rewards) {\r\n                if (reward) {\r\n                    let nums = Tools.splitToNumList(reward, ',');\r\n                    let bagItem = null;\r\n                    if (nums.length >= 3) {\r\n                        bagItem = BagItem.createItem(nums[0], nums[1], nums[2]);\r\n                        items.push(bagItem);\r\n                    }\r\n                }\r\n\r\n            }\r\n            return items;\r\n        },\r\n        //创建一个bagItem\r\n        createItemWithString: function (itemStr) {\r\n            const nums = Tools.splitToNumList(itemStr, ',');\r\n            return BagItem.createItem(nums[0], nums[1], nums[2]);\r\n        },\r\n\r\n        createItem: function (type, id, num) {\r\n            var data = ConfigData.instance.getItemData(type, id);\r\n            var item = new BagItem();\r\n            item.type = type;\r\n            item.id = id;\r\n            item.itemData = data;\r\n            item.num = num;\r\n            return item;\r\n        },\r\n    },\r\n\r\n\r\n\r\n    properties: {\r\n        type: ItemType.KNIFE_SKIN,\r\n        id: 0,\r\n        num: 0,\r\n        itemData: null,\r\n    },\r\n});"]}