{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui/assets\\scripts\\battle\\ui\\PanelTop.js"],"names":["UIUtil","require","GameData","PanelTop","cc","Class","extends","Component","properties","rankGrid","Node","playerRankItemPrebfab","Prefab","rankNameGrid","timeLabel","Label","_time","killNode","killNameNode","killMyName","killOtherName","killNoticeNode","Sprite","onLoad","killMsg","getComponent","init","killIconNode","killMyIcon","killOtherIcon","startLoadPrefab","loadUIPrefab","resource","parent","node","y","instance","isPad","logUseTime","cleanUp","destroyAllChildren","active","addPlayerRankItem","entityPlayer","rank","instantiate","rankItem","playerName","startCountDown","time","update","dt","second","Math","floor","str","string","showKillMsg","hero","otherHero","closeReviveNotice","showKillNotice","killNum","showReviveNotice","isOpen","reviveNoticeNode","reviveNotice","close","anyPanelOpen"],"mappings":"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","file":"PanelTop.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["/**\n * @fileoverview PanelRank\n * @author meifan@gameley.cn (梅凡)\n */\nconst UIUtil = require('UIUtil');\nconst GameData = require('GameData');\n\nconst PanelTop = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        rankGrid: cc.Node,\n        playerRankItemPrebfab: cc.Prefab,\n        // playerRankItems: [],\n        rankNameGrid: cc.Node,\n        timeLabel: cc.Label,\n        _time: -1,\n        killNode: cc.Node,\n        killNameNode: cc.Node,\n        killMyName: cc.Label,\n        killOtherName: cc.Label,\n        killNoticeNode: cc.Node,\n        killMyName: cc.Label,\n\n        killIconNode: cc.Node,\n        killMyIcon: cc.Sprite,\n        killOtherIcon: cc.Sprite,\n        // frenzyBar: cc.Sprite,\n        // _localPlayer: null,\n        reviveNoticeNode: cc.Node,\n    },\n\n    onLoad: function () {\n        const killMsg = this.killNode.getComponent('KillMsg');\n        killMsg.init(this.killNameNode, this.killMyName, this.killOtherName,\n            this.killIconNode, this.killMyIcon, this.killOtherIcon);\n    },\n\n    startLoadPrefab: function() {\n        if(!this.killNoticeNode) {\n            UIUtil.loadUIPrefab('prefab/ui/gsgame/PanelKillNotice', (resource)=>{\n                if(resource) {\n                    this.killNoticeNode = resource;\n                    this.killNoticeNode.parent = this.node.parent;\n                    this.killNoticeNode.y = GameData.instance.isPad() ? 280 : 239;\n                    GameData.instance.logUseTime('killNoticeNode prefab loaded');\n                }\n            });\n        }\n    },\n\n    cleanUp: function () {\n        this.rankGrid.destroyAllChildren();\n        this.rankNameGrid.destroyAllChildren();\n        if(this.killNoticeNode) {\n            this.killNoticeNode.active = true;\n            this.killNoticeNode.getComponent('KillNotice').cleanUp();\n        }\n        this.killNode.getComponent('KillMsg').cleanUp();\n    },\n\n    /**\n     * 创建玩家rankItem\n     */\n    addPlayerRankItem: function (entityPlayer) {\n        const rank = cc.instantiate(this.playerRankItemPrebfab);\n        const rankItem = rank.getComponent('PlayerRankItem');\n        rank.parent = this.rankGrid;\n        rankItem.init(entityPlayer);\n        // this.playerRankItems.push(rankItem);\n\n        rankItem.playerName.node.parent = this.rankNameGrid;\n    },\n\n    startCountDown: function (time) {\n        this._time = time;\n    },\n\n    update: function (dt) {\n        if (this._time > 0) {\n            this._time -= dt;\n\n            var time = this._time;\n            var second = Math.floor(time % 60);\n\n            var str = '0' + Math.floor(time / 60) + ':' + (second > 9 ? second : ('0' + second));\n            if (time < 0) {\n                str = '00:00'\n            }\n            if (this.timeLabel.string !== str) this.timeLabel.string = str;\n        }\n\n        // if( this.frenzyComp && this.frenzyBar) {\n        //     this.frenzyBar.fillRange = this.frenzyComp.getFrenzyRate();\n        // }\n    },\n\n    showKillMsg: function (hero, otherHero) {\n        this.closeReviveNotice();\n        this.killNode.getComponent('KillMsg').showKillMsg(hero, otherHero);\n    },\n\n    showKillNotice: function (killNum) {\n        if(this.killNoticeNode) {\n            this.killNoticeNode.getComponent('KillNotice').showKillNotice(killNum);\n        }\n    },\n\n    // setFrenzyComp: function (player) {\n    //     this.frenzyComp = player.node.getComponent('PlayerFrenzyComponent');\n    // }\n\n    showReviveNotice: function (hero) {\n        if(!this.killNode.getComponent('KillMsg').isOpen) {\n            this.reviveNoticeNode.getComponent('PanelReviveNotice').showReviveNotice(hero);\n        }\n    },\n    \n    closeReviveNotice: function () {\n        var reviveNotice = this.reviveNoticeNode.getComponent('PanelReviveNotice');\n        if (reviveNotice.isOpen) {\n            reviveNotice.close();\n        }\n    },\n\n    anyPanelOpen: function () {\n        return this.killNode.getComponent('KillMsg').isOpen || this.reviveNoticeNode.getComponent('PanelReviveNotice').isOpen;\n    }\n\n});"]}