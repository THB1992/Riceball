{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\data\\singleton/assets\\scripts\\data\\singleton\\PlayerData.js"],"names":["Tools","require","ConfigData","PlatformMgr","PlatformType","GameData","TaskType","DailyTaskType","GrowType","PlayerData","cc","Class","statics","instance","init","cleanUp","properties","name","gold","showGold","getGoldCount","knifeSkinId","heroSkinId","ownKnifeSkins","ownHeroSkins","completeTaskIds","showTaskInGameIds","completeRankRewardIds","needCheckTaskIds","taskProcess","knifeSkin","extraKnifeCount","isExtraKnife","allShareCount","bornTime","saveTime","getOfflineGoldTime","offlineGoldCount","lastChangeGoldMultipTime","playCount","winCount","dayKillCount","dayTotalPickKnifeCount","dayMaxPickKnifeCount","dayKillKnifeCount","dayPlayCount","dayWinCount","dayRefreshTaskCount","dayRefreshShareScore","dayTotalAdsRevenue","dayCanReportTotalAdsRevenue","bitverseWallet","dayGetPrizeCount","dayWin","dayLoseCount","dayProtectCount","dailyShowTask","dailyOldTask","dayMultAgainCDCount","dayMultAgainCloseCount","dayGetGoldCount","killCount","oldKillCount","luckyRewardCount","level","rankScore","rankId","rankStar","hideScore","iconUrl","signCount","daySign","initSignCount","adverCountDatas","continuityLoseCount","totalAdverCount","changeAdverCount","hasCheckNewSkin","receiveRound","needUpdateUserData","growLevel","randomCount","hasRepay","hawkeyeFunnelIDs","completeGuideDailyTask","zongZi","cheatOffset","zongZiToDaoBi","shareScore","inviteDatas","checkInviteLength","extendOldRank","dayShowTop","holidayWorldRankData","updatePKRankTime","dayRefreshPKReward","dayRefreshWorldReward","dayFirstEnterPKTop20","timeOffset","perPlayCount","subscribeTime","daySubscribeReward","country","refuseBuyPool","refuseAdverPool","keyCount","treasureTurn","showKeyCount","hasGetKey","evaulateCount","vipWithoutInterstitial","lastFreeDiamondTime","isShowOpenAdCold","getCurTime","updateSaveTime","loadUserCidData","setPlayerData","qureyBalance","checkUserNFT","initUserData","callback","getUserData","saveUserCidData","console","log","updateWorldRewardDetail","getHolidayPKRank","getCountry","initConfigData","isOwnKnifeSkin","isOwnHeroSkin","getKnifeSkinById","heroSkin","getHeroSkinById","rankData","getRankDataByStar","id","offlineGoldInterval","clientData","offlineGoldNormalCount","getLevelByHideScore","length","updateDailyShowTask","protectLevel","isGuide","isShowLog","extendOldData","hawkeye_level","remainPKDay","getTimeCount","getTimeStampByTimeStr","holidayDatas","startDate","day","needSave","starId","convertScoreIdToStarId","getRankDataById","star","dayCount","getRealDayTimeCount","saveUserData","convertZongZi","setData","data","self","getRandomInt","Date","loadComplete","hawkeye_registerTime","setUserCloudStorage","addHawkeyeFunnelIDs","arrContains","push","hawkeyeFunnelcontains","randomRankStar","updateUserData","k6_downloadData","userData","JSON","parse","loaclData","getItem","getOsStr","str","stringify","setItem","k6_uploadData","platformType","WECHAT","localData","localDataStr","serverData","isIOS","resetDataToDefault","defaultData","clearTempData","isSubscribe","isOwnSuit","getSuitData","addKnifeSkin","addHeroSkin","addCompleteTask","addShowTask","addCompleteRankReward","updateKnifeSkin","skin","isDirtyKnifeSkin","updateHeroSkin","isDirtyHeroSkin","setExtraKnife","count","addExtraKnife","setTrySkinData","trySkinCount","lastTryPlayCount","getTrySkinData","lastTrySkinType","setLuckyRewardData","getLuckyRewardData","Number","updateGold","num","getGoldParam","isDelay","delaySaveDataTime","updateName","updateShareCount","updateLuckyRewardCount","isFristGame","isSecGame","canShowPanelSign","canShowPanelAddTop","isApp","hasPlayOnceGame","hasGetAddTopReward","isFirstDay","canShowBtnAddTop","canShowBtnHoliday","isDuringHolidayRankBtnShowTime","canShowPanelHolidayRank","checkHourSpan","myPKRankData","rank","updateDayFirstEnterPKTop20","myOldPKRankData","onGameOver","player","killNum","pickKnifeCount","Math","max","maxPickKnifeCount","killKnifeCount","updateDayMultAgainCDCount","updateShowKeyCount","updateEvaulateCount","timestamp","getMilliTime","time","floor","_startGameTimestamp","hawkeye_report_game","task","type","KILL_COUNT","process","TOTAL_PICK_KNIFE_COUNT","MAX_PICK_KNIFE_COUNT","KILL_KNIFE_COUNT","PLAY_COUNT","WIN_COUNT","setHolidayScore","onStartGame","refreshUnlockGrow","growLimit","showUnlockGrow","getTime","timeDefence","getCurWeekDay","getDay","getOfflineTime","curTime","offset","getFinalOfflineGold","newCount","getGrowLevelDataByType","Gold","rate","realOfflineParam","finalGold","getReceiveOfflineGoldTime","getTaskProcess","LOGIN","PLAYCOUNT","KILLCOUNT","RANK","ADVERCOUNT","getDailyTaskProcess","cids","oldVisitCids","checkDaySpan","isDaySpan","onDaySpan","refreshWorldTime","isHourSpan","isDuringDailyTaskGuide","updateDayMultAgainCDCountFlag","ret","defaultLevel","clampLevel","clearNeedCheckTaskIds","updateDayProtectCount","updateSignCount","updateDayShowTop","updateDayRefreshPKReward","updateDayRefreshWorldReward","updateIconUrl","updateAdverCountData","lastCount","updateTotalAdverCount","isSecondDay","bornDay","updateContinuityLoseCount","updateNewKnifeSkinCheck","newCheck","knifeSkinDatas","isNew","newDate","isBeforeOtherTime","updateNewHeroSkinCheck","heroSkinDatas","updateGrowLevel","checkDelayUpdateData","dt","getGrowLevel","getGrowLevelData","updateGetOfflineGoldTime","updateRepay","updateZongZiToDaoBi","updateDayGetPrizeCount","way","getDailyShowTask","goldMultiRate","updateDailyOldTask","indexOf","updateCompleteGuideDailyTask","updateZongZi","updateDayRefreshTaskCount","updateDayRefreshShareScore","score","canShowMultAgain","dayMultAgainMinPlayCount","resetDayMultAgainCDCount","updateDayMultAgainCloseCount","updateShareScore","updateCheckInviteLength","hasGetInviteReward","canGetAddTopReward","isCurEquipHeroSkin","isCurEquipKnifeSkin","canShowPanelDailyTask","isComplete","param","isGet","hasShow","needUpdatePKRank","holidayPKRankInterval","hasData","holidayPKRankData","rankInfo","handleHolidayRankData","pkSurplusTime","surplusTime","needUpdateWorldRank","getHolidayWorldRank","round","isHourSpanRefresh","myWorldRankData","mineData","key","isLocal","copyObj","maxWorldRound","worldSurplusTime","mine","sort","a","b","i","l","uid","myOldWorldRankData","updateReceiveRound","isPK","hasReceivePKRound","hasReceiveWorldRound","clearHolidayData","getHolidayWorldRewardInfo","playerWorldRewardDetail","updateSubscribeTime","updateDaySubscribeReward","languageCode","getLanguageCode","canShowPanelBuySkin","showPanelBuySkinFlag","finalGetSkin","getWay","priceType","price","isRefuseBuyTwice","isGetByAdver","continuityCanNotBuyCount","updateContinuityCanNotBuyCount","isRefuseAdverTwice","updateRefuseBuyPool","updateRefuseAdverPool","getOwnKnifeSkinCount","getOwnHeroSkinCount","canBuyItem","updateKeyCount","keyDirty","clearKeyCount","updateTreasureTurn","canShowPanelTreasureBox","canShowKeyInAI","canShowPanelEvaulate","endEvaulateCount","updateVipWithoutInterstitial","getVipWithoutInterstitial","getLastFreeDiamondTime","updateLastFreeDiamondTime","getCanGetFreeDiamond"],"mappings":"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","file":"PlayerData.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\data\\singleton","sourcesContent":["const Tools = require('Tools');\r\nconst ConfigData = require('ConfigData');\r\nconst PlatformMgr = require('PlatformMgr');\r\nconst PlatformType = require('Types').PlatformType;\r\nconst GameData = require('GameData');\r\nconst TaskType = require('Types').TaskType;\r\nconst DailyTaskType = require('Types').DailyTaskType;\r\nconst GrowType = require('Types').GrowType;\r\n\r\nvar PlayerData = cc.Class({\r\n    statics: {\r\n        instance: null,\r\n\r\n        init: function () {\r\n            if (PlayerData.instance === null) {\r\n                PlayerData.instance = new PlayerData();\r\n                PlayerData.instance.init();\r\n            }\r\n        },\r\n\r\n        cleanUp: function () {\r\n            if (PlayerData.instance) {\r\n                Tools.cleanUp(PlayerData.instance);\r\n            }\r\n            PlayerData.instance = null;\r\n        }\r\n    },\r\n\r\n    properties: {\r\n        name: 'player',\r\n        gold: 200,\r\n        showGold: 200,\r\n        getGoldCount: 0,\r\n        knifeSkinId: 1,\r\n        heroSkinId: 1,\r\n        ownKnifeSkins: [],\r\n        ownHeroSkins: [],\r\n        completeTaskIds: [], //已完成任务的id\r\n        showTaskInGameIds: [], //已完成并在游戏中展示解锁的任务id\r\n        completeRankRewardIds: [], //已获取段位奖励的任务id\r\n        needCheckTaskIds: [], //新获得标识\r\n        taskProcess: [],\r\n        knifeSkin: null,\r\n        extraKnifeCount: 0, //每次游戏开始前看广告额外得到的刀\r\n        isExtraKnife: false,\r\n        allShareCount: 0, //生涯累计分享次数\r\n        //建号时间\r\n        bornTime: 0,\r\n        //上次保存数据的时间戳\r\n        saveTime: 0,\r\n        //上次领取离线金币的时间戳\r\n        getOfflineGoldTime: 0,\r\n        offlineGoldCount: 0,\r\n        lastChangeGoldMultipTime: 0,\r\n        //游戏场次\r\n        playCount: 0,\r\n        //游戏总获胜场次\r\n        winCount : 0,\r\n        //日统计\r\n        dayKillCount: 0,\r\n        dayTotalPickKnifeCount: 0,\r\n        dayMaxPickKnifeCount: 0,\r\n        dayKillKnifeCount: 0,\r\n        dayPlayCount: 0,\r\n        dayWinCount: 0,\r\n        dayRefreshTaskCount: 0,\r\n        dayRefreshShareScore: false,\r\n\r\n        dayTotalAdsRevenue: 0,\r\n        dayCanReportTotalAdsRevenue: true,\r\n\r\n        bitverseWallet: \"\",\r\n\r\n        //每日通过分享或广告成功获得奖励的次数\r\n        dayGetPrizeCount: 0,\r\n        dayWin: false,\r\n        dayLoseCount: 0,\r\n        dayProtectCount: 0,\r\n        dailyShowTask: [],\r\n        dailyOldTask: [], //已经出现过的任务\r\n\r\n        dayMultAgainCDCount: 0,\r\n        dayMultAgainCloseCount: 0,\r\n        //升级时金币不足看视频得金币的次数\r\n        dayGetGoldCount: 0,\r\n        //击杀人数\r\n        killCount: 0,\r\n        oldKillCount: 0,\r\n        //幸运大奖次数\r\n        luckyRewardCount: 0,\r\n\r\n        level: 0,\r\n        rankScore: 0,\r\n        rankId: 0,\r\n        rankStar: 0,\r\n        hideScore: 0,\r\n\r\n        iconUrl: 1,\r\n\r\n        //签到天数\r\n        signCount: 0,\r\n        //当天是否签过到\r\n        daySign: false,\r\n        //是否初始化签到天数\r\n        initSignCount: false,\r\n        //皮肤对应的广告观看次数\r\n        adverCountDatas: [],\r\n        //连输次数\r\n        continuityLoseCount: 0,\r\n        //累计看广告次数\r\n        totalAdverCount: 0,\r\n        //上次进主页到这次进主页间看的广告\r\n        changeAdverCount: 0,\r\n        //已经查看过的皮肤\r\n        hasCheckNewSkin: [],\r\n        //领取过的排行轮次日期\r\n        receiveRound: [],\r\n\r\n        // 需要上行玩家数据\r\n        needUpdateUserData: false,\r\n\r\n        //成长属性 依次是攻击，防御，速度，离线收益，金币加成\r\n        growLevel: [],\r\n        randomCount: 0,\r\n\r\n        //是否已经领取过赔偿\r\n        hasRepay: false,\r\n        hawkeyeFunnelIDs: [],\r\n\r\n        //新手任务完成情况\r\n        completeGuideDailyTask: [],\r\n\r\n        zongZi: 0,\r\n\r\n        //作弊时间偏移，可在作弊按钮中修改\r\n        cheatOffset: 0,\r\n\r\n        //是否提示过粽子转钻石\r\n        zongZiToDaoBi: false,\r\n\r\n        //分享分数，根据这个来决定每天前几次是分享\r\n        shareScore: 0,\r\n\r\n        inviteDatas: [],\r\n\r\n        checkInviteLength: 0,\r\n\r\n        //是否继承了老段位数据\r\n        extendOldRank: false,\r\n\r\n        //每日展示置顶\r\n        dayShowTop: false,\r\n\r\n        //世界排行数据\r\n        holidayWorldRankData: [],\r\n        updatePKRankTime: 0,\r\n        dayRefreshPKReward: false,\r\n        dayRefreshWorldReward: false,\r\n        dayFirstEnterPKTop20: false,\r\n        //客户端时间偏移\r\n        timeOffset: 0,\r\n        //每轮登录游戏后游戏的场次\r\n        perPlayCount: 0,\r\n\r\n        //订阅到期时间戳\r\n        subscribeTime: 0,\r\n        daySubscribeReward: false,\r\n        country: 'US',\r\n\r\n        refuseBuyPool: null,\r\n        refuseAdverPool: null,\r\n\r\n        keyCount: 0,\r\n        treasureTurn: 0, //宝箱轮数\r\n        showKeyCount: 2, //出现钥匙的局数，当大于等于2局时可以出现钥匙\r\n        hasGetKey: false,\r\n\r\n        evaulateCount: 0,\r\n\r\n        vipWithoutInterstitial: 0, //充值用户屏蔽插屏广告\r\n        lastFreeDiamondTime: 0,\r\n\r\n        isShowOpenAdCold: false,\r\n\r\n        //nft按钮解锁\r\n        \r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    init: function () {\r\n        this.randomCount = 0;\r\n        this.ownKnifeSkins = [1];\r\n        this.ownHeroSkins = [1];\r\n        this.growLevel = [0, 0, 0, 0, 0];\r\n        this.needUpdateUserData = false;\r\n        this.bornTime = this.getCurTime();\r\n        this.updateSaveTime();\r\n        this.getOfflineGoldTime = this.getCurTime();\r\n        this.lastChangeGoldMultipTime = this.getCurTime();\r\n        this.loadUserCidData();\r\n        this.refuseBuyPool = {};\r\n        this.refuseAdverPool = {};\r\n        PlatformMgr.setPlayerData(this);\r\n\r\n\r\n        //-----NFT测试------------\r\n        PlatformMgr.qureyBalance()\r\n        PlatformMgr.checkUserNFT()\r\n        //------------------------\r\n\r\n    },\r\n\r\n    initUserData: function (callback) {\r\n        this.getUserData(callback);\r\n        this.saveUserCidData();\r\n        console.log('---------------------------初始化实物获奖信息');\r\n        this.updateWorldRewardDetail();\r\n        console.log('---------------------------初始化小组PK榜数据')\r\n        this.getHolidayPKRank(() => {})\r\n        this.getCountry();\r\n    },\r\n\r\n    initConfigData: function () {\r\n        if (!this.isOwnKnifeSkin(this.knifeSkinId)) {\r\n            this.knifeSkinId = 1;\r\n        }\r\n        if (!this.isOwnHeroSkin(this.heroSkinId)) {\r\n            this.heroSkinId = 1;\r\n        }\r\n        this.knifeSkin = ConfigData.instance.getKnifeSkinById(this.knifeSkinId);\r\n        this.heroSkin = ConfigData.instance.getHeroSkinById(this.heroSkinId);\r\n        this.rankData = ConfigData.instance.getRankDataByStar(this.rankStar);\r\n        this.rankId = this.rankData.id;\r\n        this.offlineGoldInterval = ConfigData.instance.clientData.offlineGoldInterval * 1000;\r\n        this.offlineGoldNormalCount = ConfigData.instance.clientData.offlineGoldNormalCount;\r\n        this.level = ConfigData.instance.getLevelByHideScore(this.hideScore);\r\n\r\n        if (this.dailyShowTask.length === 0) {\r\n            this.updateDailyShowTask();\r\n        }\r\n\r\n\r\n        this.level = this.protectLevel(this.level);\r\n\r\n        this.isGuide = false; //this.playCount === 0 ? true : false;\r\n\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log('playerdata.initConfigData level: ' + this.level);\r\n        }\r\n        this.extendOldData();\r\n\r\n        PlatformMgr.hawkeye_level = this.rankId + 1;\r\n\r\n        this.remainPKDay = Tools.getTimeCount(this.getCurTime(), Tools.getTimeStampByTimeStr(ConfigData.instance.holidayDatas.startDate)).day + 1;\r\n    },\r\n\r\n    //继承老数据\r\n    extendOldData: function () {\r\n        var needSave = false;\r\n        if (this.rankScore !== -1) {\r\n            var starId = ConfigData.instance.convertScoreIdToStarId(this.rankScore)\r\n            this.rankData = ConfigData.instance.getRankDataById(starId);\r\n            this.rankStar = this.rankData.star;\r\n            this.rankId = this.rankData.id;\r\n            this.rankScore = -1;\r\n            needSave = true;\r\n        }\r\n\r\n        if (!this.initSignCount) {\r\n            this.initSignCount = true;\r\n            var dayCount = Tools.getRealDayTimeCount(this.bornTime, this.getCurTime()) - 1;\r\n            dayCount = dayCount < 0 ? 0 : dayCount;\r\n            this.signCount += dayCount;\r\n            if (this.signCount >= 7) {\r\n                this.signCount = 6;\r\n                this.daySign = true;\r\n            }\r\n            needSave = true;\r\n        }\r\n\r\n\r\n        if (!this.extendOldRank) {\r\n            this.extendOldRank = true;\r\n            if (this.rankStar >= 103) {\r\n                this.rankStar += 60;\r\n                this.rankData = ConfigData.instance.getRankDataByStar(this.rankStar)\r\n                this.rankId = this.rankData.id;\r\n            }\r\n            needSave = true;\r\n        }\r\n\r\n        if (needSave) this.saveUserData('老用户数据继承');\r\n    },\r\n\r\n    convertZongZi: function () {\r\n        if (this.zongZi > 0) {\r\n            this.gold += this.zongZi * 10;\r\n            this.zongZi = 0;\r\n            this.saveUserData('转化粽子')\r\n        }\r\n    },\r\n\r\n\r\n    setData: function (data) {\r\n        const self = this;\r\n        if (data) {\r\n            self.name = data.name ? data.name : 'player';\r\n            self.gold = data.gold ? data.gold : 0;\r\n            self.knifeSkinId = data.knifeSkinId ? data.knifeSkinId : 1;\r\n            self.ownKnifeSkins = data.ownKnifeSkins ? data.ownKnifeSkins : [1];\r\n            self.ownHeroSkins = data.ownHeroSkins ? data.ownHeroSkins : [1];\r\n            self.heroSkinId = data.heroSkinId ? data.heroSkinId : 1;\r\n            self.completeTaskIds = data.completeTaskIds ? data.completeTaskIds : [];\r\n            self.showTaskInGameIds = data.showTaskInGameIds ? data.showTaskInGameIds : [];\r\n            self.needCheckTaskIds = data.needCheckTaskIds ? data.needCheckTaskIds : [];\r\n            self.completeRankRewardIds = data.completeRankRewardIds ? data.completeRankRewardIds : [];\r\n            self.adverCountDatas = data.adverCountDatas ? data.adverCountDatas : [];\r\n            self.totalAdverCount = data.totalAdverCount ? data.totalAdverCount : 0;\r\n            self.hasCheckNewSkin = data.hasCheckNewSkin ? data.hasCheckNewSkin : [];\r\n            self.receiveRound = data.receiveRound ? data.receiveRound : [];\r\n\r\n            self.bornTime = data.bornTime ? data.bornTime : this.getCurTime();\r\n            self.saveTime = data.saveTime ? data.saveTime : this.getCurTime();\r\n            self.getOfflineGoldTime = data.getOfflineGoldTime ? data.getOfflineGoldTime : this.getCurTime();\r\n            self.lastChangeGoldMultipTime = data.lastChangeGoldMultipTime ? data.lastChangeGoldMultipTime : this.getCurTime();\r\n            self.offlineGoldCount = data.offlineGoldCount ? data.offlineGoldCount : 0;\r\n\r\n            self.playCount = data.playCount ? data.playCount : 0;\r\n            self.winCount = data.winCount ? data.winCount : 0;\r\n\r\n            self.dayPlayCount = data.dayPlayCount ? data.dayPlayCount : 0;\r\n            self.dayGetPrizeCount = data.dayGetPrizeCount ? data.dayGetPrizeCount : 0;\r\n            self.dayWin = data.dayWin ? data.dayWin : 0;\r\n            self.dayLoseCount = data.dayLoseCount ? data.dayLoseCount : 0;\r\n            self.dayProtectCount = data.dayProtectCount ? data.dayProtectCount : 0;\r\n            self.dayGetGoldCount = data.dayGetGoldCount ? data.dayGetGoldCount : 0;\r\n            self.dayKillCount = data.dayKillCount ? data.dayKillCount : 0;\r\n            self.dayTotalPickKnifeCount = data.dayTotalPickKnifeCount ? data.dayTotalPickKnifeCount : 0;\r\n            self.dayMaxPickKnifeCount = data.dayMaxPickKnifeCount ? data.dayMaxPickKnifeCount : 0;\r\n            self.dayKillKnifeCount = data.dayKillKnifeCount ? data.dayKillKnifeCount : 0;\r\n            self.dayWinCount = data.dayWinCount ? data.dayWinCount : 0;\r\n            self.dayRefreshTaskCount = data.dayRefreshTaskCount ? data.dayRefreshTaskCount : 0;\r\n            self.dayRefreshShareScore = data.dayRefreshShareScore ? data.dayRefreshShareScore : false;\r\n\r\n            self.dayTotalAdsRevenue = data.dayTotalAdsRevenue ? data.dayTotalAdsRevenue : 0;\r\n\r\n            self.bitverseWallet = data.bitverseWallet ? data.bitverseWallet : \"\";\r\n\r\n            self.dailyShowTask = data.dailyShowTask ? data.dailyShowTask : [];\r\n            self.dailyOldTask = data.dailyOldTask ? data.dailyOldTask : [];\r\n\r\n            self.dayMultAgainCDCount = data.dayMultAgainCDCount ? data.dayMultAgainCDCount : 0;\r\n            self.dayMultAgainCloseCount = data.dayMultAgainCloseCount ? data.dayMultAgainCloseCount : 0;\r\n\r\n            self.killCount = data.killCount ? data.killCount : 0;\r\n            self.allShareCount = data.allShareCount ? data.allShareCount : 0;\r\n            self.luckyRewardCount = data.luckyRewardCount ? data.luckyRewardCount : 0;\r\n            // self.level = data.level ? data.level : 0;\r\n\r\n            self.rankStar = data.rankStar ? data.rankStar : 0;\r\n            self.rankId = data.rankId ? data.rankId : 0;\r\n            self.rankScore = data.rankScore ? data.rankScore : 0;\r\n            self.hideScore = data.hideScore ? data.hideScore : 0;\r\n\r\n            self.signCount = data.signCount ? data.signCount : 0;\r\n            self.daySign = data.daySign ? data.daySign : false;\r\n            self.initSignCount = data.initSignCount ? data.initSignCount : false;\r\n\r\n            self.iconUrl = data.iconUrl ? data.iconUrl : Tools.getRandomInt(1, 7);\r\n            self.continuityLoseCount = data.continuityLoseCount ? data.continuityLoseCount : 0;\r\n\r\n            self.growLevel = data.growLevel ? data.growLevel : [0, 0, 0, 0, 0];\r\n\r\n            self.hasRepay = data.hasRepay ? data.hasRepay : false;\r\n            self.hawkeyeFunnelIDs = data.hawkeyeFunnelIDs ? data.hawkeyeFunnelIDs : self.hawkeyeFunnelIDs;\r\n            self.completeGuideDailyTask = data.completeGuideDailyTask ? data.completeGuideDailyTask : [];\r\n\r\n            self.zongZi = data.zongZi ? data.zongZi : 0;\r\n            self.zongZiToDaoBi = data.zongZiToDaoBi ? data.zongZiToDaoBi : false;\r\n\r\n            self.checkInviteLength = data.checkInviteLength ? data.checkInviteLength : 0;\r\n\r\n            self.shareScore = data.shareScore ? data.shareScore : 0;\r\n            self.extendOldRank = data.extendOldRank ? data.extendOldRank : false;\r\n            self.dayShowTop = data.dayShowTop ? data.dayShowTop : false;\r\n            self.dayRefreshPKReward = data.dayRefreshPKReward ? data.dayRefreshPKReward : false;\r\n            self.dayRefreshWorldReward = data.dayRefreshWorldReward ? data.dayRefreshWorldReward : false;\r\n            self.dayFirstEnterPKTop20 = data.dayFirstEnterPKTop20 ? data.dayFirstEnterPKTop20 : false;\r\n\r\n\r\n            self.subscribeTime = data.subscribeTime ? data.subscribeTime : 0.;\r\n            self.daySubscribeReward = data.daySubscribeReward ? data.daySubscribeReward : false;\r\n\r\n            self.refuseBuyPool = data.refuseBuyPool ? data.refuseBuyPool : {};\r\n            self.refuseAdverPool = data.refuseAdverPool ? data.refuseAdverPool : {};\r\n\r\n            self.keyCount = data.keyCount ? data.keyCount : 0;\r\n            self.treasureTurn = data.treasureTurn ? data.treasureTurn : 0;\r\n\r\n            self.showKeyCount = (data.showKeyCount || data.showKeyCount === 0) ? data.showKeyCount : 2;\r\n            self.hasGetKey = data.hasGetKey ? data.hasGetKey : false;\r\n\r\n\r\n            self.evaulateCount = data.evaulateCount ? data.evaulateCount : 0;\r\n            self.vipWithoutInterstitial = data.vipWithoutInterstitial ? data.vipWithoutInterstitial : 0;\r\n            self.lastFreeDiamondTime = data.lastFreeDiamondTime ? data.lastFreeDiamondTime : 0;\r\n\r\n        } else {\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('数据设置为空，使用脚本初始化的数据')\r\n            }\r\n        }\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log(data);\r\n            console.log(new Date(self.saveTime), new Date(this.getCurTime()))\r\n        }\r\n\r\n        this.loadComplete = true;\r\n        this.showGold = this.gold;\r\n\r\n\r\n        PlatformMgr.hawkeye_registerTime = self.bornTime;\r\n        PlatformMgr.hawkeye_level = self.rankId + 1;\r\n\r\n        PlatformMgr.setUserCloudStorage(this.rankStar);\r\n    },\r\n\r\n    addHawkeyeFunnelIDs: function (id) {\r\n        if (this.hawkeyeFunnelIDs) {\r\n            if (!Tools.arrContains(this.hawkeyeFunnelIDs, id)) {\r\n                this.hawkeyeFunnelIDs.push(id);\r\n            }\r\n        }\r\n    },\r\n\r\n    hawkeyeFunnelcontains: function (id) {\r\n        if (this.hawkeyeFunnelIDs) {\r\n            return Tools.arrContains(this.hawkeyeFunnelIDs, id);\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * 测试redis的方法，游戏切勿调用\r\n     */\r\n    randomRankStar: function () {\r\n        this.randomCount++;\r\n        this.rankStar = Tools.getRandomInt(0, 103);\r\n        this.saveUserData('随机星星数');\r\n        this.updateUserData(() => {\r\n            // 上传数据成功 准备下载数据\r\n            PlatformMgr.k6_downloadData((data) => {\r\n                var userData = null;\r\n                if (data) {\r\n                    userData = JSON.parse(data);\r\n                    if (userData.rankStar && userData.rankStar === this.rankStar) {\r\n                        console.log('download suc and data is right count: ' + this.randomCount);\r\n                        if (this.randomCount > 100) {\r\n                            this.randomCount = 0;\r\n                        } else {\r\n                            this.randomRankStar();\r\n                        }\r\n                    } else {\r\n                        console.log('download suc but data is wrong count: ' + this.randomCount);\r\n                    }\r\n\r\n                } else {\r\n                    var loaclData = Tools.getItem('userData' + this.getOsStr());\r\n                    if (loaclData) {\r\n                        userData = JSON.parse(loaclData);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    saveUserData: function (str) {\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log('saveUserData------', str);\r\n        }\r\n        this.needUpdateUserData = true;\r\n    },\r\n\r\n    updateUserData: function (callback) {\r\n        if (this.needUpdateUserData) {\r\n            this.needUpdateUserData = false;\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('updateUserData------');\r\n            }\r\n            var userData = {\r\n                name: this.name,\r\n                gold: this.gold,\r\n                ownKnifeSkins: this.ownKnifeSkins,\r\n                ownHeroSkins: this.ownHeroSkins,\r\n                completeTaskIds: this.completeTaskIds,\r\n                showTaskInGameIds: this.showTaskInGameIds,\r\n                needCheckTaskIds: this.needCheckTaskIds,\r\n                completeRankRewardIds: this.completeRankRewardIds,\r\n                adverCountDatas: this.adverCountDatas,\r\n                knifeSkinId: this.knifeSkinId,\r\n                heroSkinId: this.heroSkinId,\r\n                bornTime: this.bornTime,\r\n                saveTime: this.getCurTime(),\r\n                getOfflineGoldTime: this.getOfflineGoldTime,\r\n                lastChangeGoldMultipTime: this.lastChangeGoldMultipTime,\r\n                offlineGoldCount: this.offlineGoldCount,\r\n                allShareCount: this.allShareCount,\r\n                luckyRewardCount: this.luckyRewardCount,\r\n                playCount: this.playCount,\r\n                winCount: this.winCount,\r\n                dayPlayCount: this.dayPlayCount,\r\n                dayGetPrizeCount: this.dayGetPrizeCount,\r\n                dayWin: this.dayWin,\r\n                dayLoseCount: this.dayLoseCount,\r\n                dayProtectCount: this.dayProtectCount,\r\n                dayGetGoldCount: this.dayGetGoldCount,\r\n                dayKillCount: this.dayKillCount,\r\n                dayTotalPickKnifeCount: this.dayTotalPickKnifeCount,\r\n                dayMaxPickKnifeCount: this.dayMaxPickKnifeCount,\r\n                dayKillKnifeCount: this.dayKillKnifeCount,\r\n                dayWinCount: this.dayWinCount,\r\n                dayRefreshTaskCount: this.dayRefreshTaskCount,\r\n                dayRefreshShareScore: this.dayRefreshShareScore,\r\n                dailyShowTask: this.dailyShowTask,\r\n                dailyOldTask: this.dailyOldTask,\r\n                dayMultAgainCDCount: this.dayMultAgainCDCount,\r\n                dayMultAgainCloseCount: this.dayMultAgainCloseCount,\r\n\r\n                dayTotalAdsRevenue: this.dayTotalAdsRevenue,\r\n\r\n                bitverseWallet: this.bitverseWallet,\r\n\r\n                killCount: this.killCount,\r\n                // level: this.level,\r\n                rankStar: this.rankStar,\r\n                rankId: this.rankId,\r\n                rankScore: this.rankScore,\r\n                hideScore: this.hideScore,\r\n\r\n                signCount: this.signCount,\r\n                daySign: this.daySign,\r\n                initSignCount: this.initSignCount,\r\n                iconUrl: this.iconUrl,\r\n                continuityLoseCount: this.continuityLoseCount,\r\n                totalAdverCount: this.totalAdverCount,\r\n                hasCheckNewSkin: this.hasCheckNewSkin,\r\n                receiveRound: this.receiveRound,\r\n                growLevel: this.growLevel,\r\n                hasRepay: this.hasRepay,\r\n                hawkeyeFunnelIDs: this.hawkeyeFunnelIDs,\r\n                completeGuideDailyTask: this.completeGuideDailyTask,\r\n                zongZi: this.zongZi,\r\n                zongZiToDaoBi: this.zongZiToDaoBi,\r\n                shareScore: this.shareScore,\r\n                checkInviteLength: this.checkInviteLength,\r\n                extendOldRank: this.extendOldRank,\r\n                dayShowTop: this.dayShowTop,\r\n                dayRefreshPKReward: this.dayRefreshPKReward,\r\n                dayRefreshWorldReward: this.dayRefreshWorldReward,\r\n                dayFirstEnterPKTop20: this.dayFirstEnterPKTop20,\r\n                subscribeTime: this.subscribeTime,\r\n                daySubscribeReward: this.daySubscribeReward,\r\n                refuseBuyPool: this.refuseBuyPool,\r\n                refuseAdverPool: this.refuseAdverPool,\r\n                keyCount: this.keyCount,\r\n                treasureTurn: this.treasureTurn,\r\n                showKeyCount: this.showKeyCount,\r\n                hasGetKey: this.hasGetKey,\r\n                evaulateCount: this.evaulateCount,\r\n                vipWithoutInterstitial: this.vipWithoutInterstitial,\r\n                lastFreeDiamondTime: this.lastFreeDiamondTime,\r\n            }\r\n            var str = JSON.stringify(userData);\r\n            Tools.setItem('userData' + this.getOsStr(), str);\r\n\r\n\r\n            PlatformMgr.k6_uploadData(str, callback);\r\n\r\n\r\n        }\r\n\r\n\r\n    },\r\n\r\n    getUserData: function (callback) {\r\n        const self = this;\r\n        switch (PlatformMgr.platformType) {\r\n            case PlatformType.WECHAT: {\r\n                PlatformMgr.k6_downloadData((data) => {\r\n                        var userData = null;\r\n                        var localData = null;\r\n                        var localDataStr = Tools.getItem('userData' + this.getOsStr());\r\n                        if (localDataStr) localData = JSON.parse(localDataStr);\r\n\r\n                        var serverData = null;\r\n                        if (data) serverData = JSON.parse(data);\r\n\r\n                        if (serverData && localData) {\r\n                            //获取本地数据比较数据哪个更新，就用哪一个\r\n                            if (serverData.saveTime >= localData.saveTime) {\r\n                                if (GameData.instance.isShowLog()) {\r\n                                    console.log('数据正常，使用服务端数据,服务器时间：', new Date(serverData.saveTime), '本地时间：', new Date(localData.saveTime))\r\n                                }\r\n                                userData = serverData;\r\n                            } else {\r\n                                if (GameData.instance.isShowLog()) {\r\n                                    console.log('服务端数据过老，使用本地数据,服务器时间：', new Date(serverData.saveTime), '本地时间：', new Date(localData.saveTime))\r\n                                }\r\n                                userData = localData;\r\n                            }\r\n                        } else if (serverData) {\r\n                            if (GameData.instance.isShowLog()) {\r\n                                console.log('本地数据为空，使用服务端数据')\r\n                            }\r\n                            userData = serverData;\r\n                        } else {\r\n                            if (GameData.instance.isShowLog()) {\r\n                                console.log('服务端数据为空，使用本地数据')\r\n                            }\r\n                            userData = localData;\r\n                        }\r\n\r\n                        self.setData(userData);\r\n                        if (callback) callback();\r\n                    },\r\n                    () => {\r\n                        //发行sdk的数据获取失败情况处理\r\n                        var userData = null;\r\n                        var loaclData = Tools.getItem('userData' + this.getOsStr());\r\n                        if (loaclData) {\r\n                            if (GameData.instance.isShowLog()) {\r\n                                console.log('发行sdk获取数据失败，使用本地数据')\r\n                            }\r\n                            userData = JSON.parse(loaclData);\r\n                        }\r\n                        self.setData(userData);\r\n                        if (callback) callback();\r\n                    });\r\n\r\n                break;\r\n            }\r\n            default: {\r\n                var userData = null;\r\n                var loaclData = Tools.getItem('userData' + this.getOsStr());\r\n                if (loaclData) {\r\n                    userData = JSON.parse(loaclData);\r\n                }\r\n                self.setData(userData);\r\n                if (callback) callback();\r\n                break;\r\n            }\r\n        }\r\n    },\r\n\r\n    getOsStr: function () {\r\n        return PlatformMgr.isIOS() ? 'ios' : '';\r\n    },\r\n\r\n    resetDataToDefault: function () {\r\n        var defaultData = {\r\n\r\n            name: 'player',\r\n            gold: 200,\r\n            knifeSkinId: 1,\r\n            heroSkinId: 1,\r\n            ownKnifeSkins: [1],\r\n            ownHeroSkins: [1],\r\n            growLevel: [0, 0, 0, 0, 0],\r\n            //建号时间\r\n            bornTime: 0,\r\n            saveTime: 0,\r\n            //游戏场次\r\n            playCount: 0,\r\n            winCount : 0,\r\n            //每日任务参数\r\n            dayKillCount: 0,\r\n            dayTotalPickKnifeCount: 0,\r\n            dayMaxPickKnifeCount: 0,\r\n            dayKillKnifeCount: 0,\r\n            dayPlayCount: 0,\r\n            dayGetPrizeCount: 0,\r\n            dayWinCount: 0,\r\n            dayRefreshTaskCount: 0,\r\n            // 当日连输局数\r\n            dayLoseCount: 0,\r\n            // 当日是否赢\r\n            dayWin: false,\r\n            //当日保级/保星次数\r\n            dayProtectCount: 0,\r\n            //击杀人数\r\n            killCount: 0,\r\n            allShareCount: 0,\r\n            luckyRewardCount: 0,\r\n            // level: 0,\r\n            rankStar: 0,\r\n            rankId: 0,\r\n            rankScore: 0,\r\n            hideScore: 0,\r\n\r\n            signCount: 0,\r\n            daySign: false,\r\n            initSignCount: false,\r\n            iconUrl: Tools.getRandomInt(1, 7),\r\n\r\n            adverCountDatas: [],\r\n            continuityLoseCount: 0,\r\n            totalAdverCount: 0,\r\n            hawkeyeFunnelIDs: [],\r\n        };\r\n        this.setData(defaultData);\r\n        this.saveUserData('清号');\r\n        this.clearTempData();\r\n    },\r\n\r\n\r\n\r\n    isOwnKnifeSkin: function (id) {\r\n        return Tools.arrContains(this.ownKnifeSkins, id);\r\n    },\r\n\r\n    isOwnHeroSkin: function (id) {\r\n        return Tools.arrContains(this.ownHeroSkins, id) || (this.isSubscribe() && id === 8);\r\n    },\r\n\r\n    isOwnSuit: function (id) {\r\n        var data = ConfigData.instance.getSuitData(id);\r\n        return this.isOwnHeroSkin(data.heroSkin) && this.isOwnKnifeSkin(data.knifeSkin);\r\n    },\r\n\r\n    addKnifeSkin: function (id) {\r\n        this.ownKnifeSkins.push(id);\r\n        this.saveUserData('得刀皮肤');\r\n    },\r\n\r\n    addHeroSkin: function (id) {\r\n        this.ownHeroSkins.push(id);\r\n        this.saveUserData('得英雄皮肤');\r\n    },\r\n\r\n    addCompleteTask: function (id) {\r\n        this.completeTaskIds.push(id);\r\n        this.needCheckTaskIds.push(id);\r\n        this.saveUserData('任务完成');\r\n    },\r\n\r\n    addShowTask: function (id) {\r\n        this.showTaskInGameIds.push(id);\r\n        this.saveUserData('任务游戏内展示')\r\n    },\r\n\r\n    addCompleteRankReward: function (id) {\r\n        this.completeRankRewardIds.push(id);\r\n        this.saveUserData('段位任务完成');\r\n    },\r\n\r\n    //needSave是因为在商店关闭时才需要保存，不然频繁切换皮肤就会频繁触发数据上行\r\n    updateKnifeSkin: function (skin, needSave) {\r\n        if (this.knifeSkinId !== skin.id) {\r\n            this.knifeSkin = skin;\r\n            this.knifeSkinId = skin.id;\r\n            this.isDirtyKnifeSkin = true;\r\n        }\r\n        if (needSave && this.isDirtyKnifeSkin) {\r\n            this.saveUserData('更换刀皮肤');\r\n            this.isDirtyKnifeSkin = false;\r\n        }\r\n    },\r\n\r\n\r\n    updateHeroSkin: function (skin, needSave) {\r\n        if (this.heroSkinId !== skin.id) {\r\n            this.heroSkin = skin;\r\n            this.heroSkinId = skin.id;\r\n            this.isDirtyHeroSkin = true;\r\n        }\r\n\r\n        if (needSave && this.isDirtyHeroSkin) {\r\n            this.saveUserData('更换角色皮肤');\r\n            this.isDirtyHeroSkin = false;\r\n        }\r\n    },\r\n\r\n\r\n\r\n    setExtraKnife: function (count) {\r\n        this.extraKnifeCount = count;\r\n        this.isExtraKnife = count > 0;\r\n    },\r\n\r\n    addExtraKnife: function (count) {\r\n        this.extraKnifeCount += count;\r\n    },\r\n\r\n    clearTempData: function () {\r\n        Tools.setItem('fromMyApp', '');\r\n        Tools.setItem('trySkinData', '');\r\n        Tools.setItem('luckyRewardData', '');\r\n    },\r\n\r\n\r\n    setTrySkinData: function (data) {\r\n        data.trySkinCount++;\r\n        data.lastTryPlayCount = this.dayPlayCount;\r\n        var str = JSON.stringify(data);\r\n        Tools.setItem('trySkinData', str);\r\n    },\r\n\r\n    getTrySkinData: function () {\r\n        var data = {};\r\n        var str = Tools.getItem('trySkinData');\r\n        if (str) {\r\n            data = JSON.parse(str);\r\n        } else {\r\n            data.trySkinCount = 0;\r\n            data.lastTrySkinType = 0;\r\n            data.lastTryPlayCount = 0;\r\n        }\r\n        return data;\r\n    },\r\n\r\n    setLuckyRewardData: function (count) {\r\n        Tools.setItem('luckyRewardData', count);\r\n    },\r\n\r\n    getLuckyRewardData: function () {\r\n        var str = Tools.getItem('luckyRewardData');\r\n        return str ? Number(str) : 0;\r\n    },\r\n\r\n    updateGold: function (num, getGoldParam, isDelay = false) {\r\n        this.gold += num;\r\n        this.showGold += num;\r\n        if (getGoldParam) {\r\n            this.getGoldParam = getGoldParam;\r\n        }\r\n        if (isDelay) {\r\n            this.delaySaveDataTime = 3;\r\n        } else {\r\n            this.saveUserData('更新钱');\r\n        }\r\n    },\r\n\r\n    updateName: function (str) {\r\n        this.name = str;\r\n        this.saveUserData('更新名字');\r\n    },\r\n\r\n    updateShareCount: function () {\r\n        this.allShareCount++;\r\n        this.saveUserData('更新分享');\r\n    },\r\n\r\n    updateLuckyRewardCount: function () {\r\n        this.luckyRewardCount++;\r\n        this.saveUserData('更新幸运大奖次数');\r\n    },\r\n\r\n    isFristGame: function () {\r\n        return this.playCount === 0;\r\n    },\r\n\r\n    isSecGame: function () {\r\n        return this.playCount === 1;\r\n    },\r\n\r\n    canShowPanelSign: function () {\r\n        return this.playCount >= 5;\r\n    },\r\n\r\n    canShowPanelAddTop: function () {\r\n        if (PlatformMgr.isApp()) {\r\n            return false;\r\n        }\r\n        //玩过一次游戏（第二次进主而）\r\n        if (!this.hasPlayOnceGame) {\r\n            return false;\r\n        }\r\n        //奖励已领取）\r\n        if (this.hasGetAddTopReward()) {\r\n            return false;\r\n        }\r\n        //今日已经弹出过一次\r\n        if (this.dayShowTop) {\r\n            return false;\r\n        }\r\n        //大于四局\r\n        if (this.playCount >= 4) {\r\n            if (this.isFirstDay()) {\r\n                return true;\r\n            } else {\r\n                if (this.dayPlayCount >= 1) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    canShowBtnAddTop: function () {\r\n        return this.playCount >= 4 && !this.hasGetAddTopReward();\r\n    },\r\n\r\n    canShowBtnHoliday: function () {\r\n        return ConfigData.instance.isDuringHolidayRankBtnShowTime(this.getCurTime());\r\n    },\r\n\r\n    canShowPanelHolidayRank: function () {\r\n        console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>开始判定是否自动弹出暑期排行界面')\r\n\r\n        if (!this.canShowBtnHoliday()) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>不在活动期间，不弹出')\r\n            return false;\r\n        }\r\n\r\n        // if (!Tools.getItem('userinfoBtn')) {\r\n        //     console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>未授权，不弹出')\r\n        //     return false;\r\n        // }\r\n\r\n        if (this.playCount < 1) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>新手第一局，不弹出')\r\n            return false;\r\n        }\r\n\r\n        if (this.checkHourSpan()) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>跨特定时间，弹出')\r\n            return true;\r\n        }\r\n\r\n        if (this.perPlayCount === 1) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>每次登录游戏第一局出来，弹出')\r\n            return true;\r\n        }\r\n\r\n        if (!this.myPKRankData) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>没有获取到我的小组排名数据，不弹出')\r\n            return false;\r\n        }\r\n\r\n        if (this.myPKRankData.rank <= 20 && !this.dayFirstEnterPKTop20) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>每天第一次进前20，弹出')\r\n            this.updateDayFirstEnterPKTop20();\r\n            return true;\r\n        }\r\n\r\n        if (!this.myOldPKRankData) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>没有获取到我上次的小组排名数据，不弹出')\r\n            return false;\r\n        }\r\n\r\n        if (this.myPKRankData.rank <= 20) {\r\n            if (this.myPKRankData.rank < this.myOldPKRankData.rank) {\r\n                console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>前20并且排名提升，弹出')\r\n                return true;\r\n            }\r\n        } else {\r\n            if (this.myOldPKRankData.rank - this.myPKRankData.rank >= 10) {\r\n                console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>不在前20并且排名提升超过十位，弹出')\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.myOldPKRankData.rank === 1 && this.myPKRankData.rank > 1) {\r\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>之前是第一名并且掉落位置，弹出')\r\n            return true;\r\n        }\r\n        console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>以上条件均不满足，不弹出')\r\n        return false;\r\n    },\r\n\r\n    onGameOver: function (player) {\r\n\r\n\r\n        this.hasPlayOnceGame = true;\r\n\r\n        var rank = player.rank;\r\n\r\n\r\n        this.setExtraKnife(0);\r\n        this.playCount++;\r\n        // this.refreshUnlockGrow();\r\n        this.perPlayCount++;\r\n        this.dayPlayCount++;\r\n        this.dayKillCount += player.killNum;\r\n        this.dayTotalPickKnifeCount += player.pickKnifeCount;\r\n        this.dayMaxPickKnifeCount = Math.max(this.dayMaxPickKnifeCount, player.maxPickKnifeCount);\r\n        this.dayKillKnifeCount += player.killKnifeCount;\r\n        this.dayWinCount = rank === 1 ? this.dayWinCount + 1 : 0;\r\n        this.dayLoseCount = rank === 1 ? 0 : this.dayLoseCount + 1;\r\n        this.continuityLoseCount = rank === 1 ? 0 : this.continuityLoseCount + 1;\r\n        this.winCount = rank === 1 ? this.winCount + 1 : this.winCount\r\n\r\n        if (rank === 1 && !this.dayWin) {\r\n            this.dayWin = true;\r\n        }\r\n        this.updateDayMultAgainCDCount();\r\n        this.updateShowKeyCount();\r\n        this.updateEvaulateCount();\r\n        // if (this.isFirstDay()) {\r\n        //     PlatformMgr.enlinkerGameNumber();\r\n        // }\r\n\r\n        const timestamp = Tools.getMilliTime();\r\n        const time = Math.floor((timestamp - this._startGameTimestamp) / 1000);\r\n        PlatformMgr.hawkeye_report_game(time);\r\n\r\n\r\n        for (let task of this.dailyShowTask) {\r\n            // task.lastProcess = task.process;\r\n            switch (task.type) {\r\n                case DailyTaskType.KILL_COUNT:\r\n                    task.process += player.killNum;\r\n                    break;\r\n                case DailyTaskType.TOTAL_PICK_KNIFE_COUNT:\r\n                    task.process += player.pickKnifeCount;\r\n                    break;\r\n                case DailyTaskType.MAX_PICK_KNIFE_COUNT:\r\n                    task.process = Math.max(task.process, player.maxPickKnifeCount);\r\n                    break;\r\n                case DailyTaskType.KILL_KNIFE_COUNT:\r\n                    task.process += player.killKnifeCount;\r\n                    break;\r\n                case DailyTaskType.PLAY_COUNT:\r\n                    task.process++;\r\n                    break;\r\n                case DailyTaskType.WIN_COUNT:\r\n                    if (rank === 1) {\r\n                        task.process++;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n        this.setHolidayScore(player.killNum);\r\n        // this.setHolidayScore(20);\r\n        this.saveUserData('更新游戏结束');\r\n    },\r\n\r\n    onStartGame: function () {\r\n        this._startGameTimestamp = Tools.getMilliTime();\r\n    },\r\n\r\n    refreshUnlockGrow: function () {\r\n        var growLimit = ConfigData.instance.clientData.growLimit;\r\n        if (this.playCount === growLimit[0]) {\r\n            this.showUnlockGrow = 1;\r\n        } else if (this.playCount === growLimit[1]) {\r\n            this.showUnlockGrow = 2;\r\n        }\r\n    },\r\n\r\n    getCurTime: function () {\r\n        return Number(new Date().getTime()) - PlatformMgr.timeDefence + this.cheatOffset + this.timeOffset;\r\n    },\r\n\r\n    getCurWeekDay: function () {\r\n        return new Date(this.getCurTime()).getDay();\r\n    },\r\n\r\n    //返回上次存储离线金币点距离现在的时间，单位秒\r\n    getOfflineTime: function () {\r\n        var curTime = this.getCurTime();\r\n        if ((curTime - this.getOfflineGoldTime) > 86400000) {\r\n            curTime = this.getOfflineGoldTime + 86400000;\r\n        };\r\n        var offset = (this.lastChangeGoldMultipTime - this.getOfflineGoldTime) % this.offlineGoldInterval;\r\n        var time = curTime - (this.lastChangeGoldMultipTime - offset);\r\n        // console.log('getOfflineTime', new Date(curTime), 'phoneTime', new Date(), 'timeDeferent', PlatformMgr.timeDefence)\r\n        return time > 0 ? time : false;\r\n    },\r\n\r\n    getFinalOfflineGold: function () {\r\n        var newCount = Math.floor(this.getOfflineTime() / this.offlineGoldInterval)\r\n        var data = this.getGrowLevelDataByType(GrowType.Gold);\r\n        var rate = data.realOfflineParam / 100 + 1;\r\n        var finalGold = Math.floor((this.offlineGoldCount + newCount * this.offlineGoldNormalCount * rate) * 10) / 10;\r\n        // console.log('newCount', newCount, 'rate', rate, 'oldCount', this.offlineGoldCount, 'finalGold', finalGold);\r\n        return finalGold;\r\n    },\r\n\r\n    getReceiveOfflineGoldTime: function () {\r\n        var time = this.getCurTime() - this.getOfflineGoldTime\r\n        return time > 86400000 ? 86400000 : time;\r\n    },\r\n\r\n    getTaskProcess: function (type) {\r\n        var process = 0;\r\n        switch (type) {\r\n            case TaskType.LOGIN:\r\n                process = this.signCount + 1;\r\n                break;\r\n            case TaskType.PLAYCOUNT:\r\n                process = this.playCount;\r\n                break;\r\n            case TaskType.KILLCOUNT:\r\n                process = this.killCount;\r\n                break;\r\n            case TaskType.RANK:\r\n                process = this.rankData.id;\r\n                break;\r\n            case TaskType.ADVERCOUNT:\r\n                process = this.totalAdverCount;\r\n                break;\r\n        }\r\n        return process;\r\n    },\r\n\r\n    getDailyTaskProcess: function (type) {\r\n        var process = 0;\r\n        switch (type) {\r\n            case DailyTaskType.KILL_COUNT:\r\n                process = this.dayKillCount;\r\n                break;\r\n            case DailyTaskType.TOTAL_PICK_KNIFE_COUNT:\r\n                process = this.dayTotalPickKnifeCount;\r\n                break;\r\n            case DailyTaskType.MAX_PICK_KNIFE_COUNT:\r\n                process = this.dayMaxPickKnifeCount;\r\n                break;\r\n            case DailyTaskType.KILL_KNIFE_COUNT:\r\n                process = this.dayKillKnifeCount;\r\n                break;\r\n            case DailyTaskType.PLAY_COUNT:\r\n                process = this.dayPlayCount;\r\n                break;\r\n            case DailyTaskType.WIN_COUNT:\r\n                process = this.dayWinCount;\r\n                break;\r\n        }\r\n        return process;\r\n    },\r\n\r\n    saveUserCidData: function () {\r\n        var userData = {\r\n            saveTime: this.getCurTime(),\r\n            cids: PlatformMgr.oldVisitCids\r\n        }\r\n        var str = JSON.stringify(userData);\r\n        Tools.setItem('userCidData', str);\r\n    },\r\n\r\n    loadUserCidData: function () {\r\n        var loaclData = Tools.getItem('userCidData');\r\n        if (loaclData) {\r\n            const userData = JSON.parse(loaclData);\r\n\r\n            const count = userData.saveTime ? Tools.getRealDayTimeCount(userData.saveTime, this.getCurTime()) : 2;\r\n            if (count >= 2) {\r\n                PlatformMgr.oldVisitCids = [];\r\n            } else {\r\n                PlatformMgr.oldVisitCids = userData.cids ? userData.cids : [];\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    checkDaySpan: function () {\r\n        var curTime = this.getCurTime()\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log('---------------------------检查是否跨天');\r\n            console.log('---------------------------上次时间：', new Date(this.saveTime));\r\n            console.log('---------------------------现在时间：', new Date(curTime));\r\n        }\r\n        if (Tools.isDaySpan(this.saveTime, curTime)) {\r\n            this.updateSaveTime();\r\n            this.onDaySpan();\r\n            return true;\r\n        }\r\n        // return true;\r\n    },\r\n\r\n    //跨小时重新拉取世界排行榜\r\n    checkHourSpan: function () {\r\n        var curTime = this.getCurTime();\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log('---------------------------检查是否跨特定小时', JSON.stringify(ConfigData.instance.holidayDatas.refreshWorldTime));\r\n            console.log('---------------------------上次时间：', new Date(this.saveTime));\r\n            console.log('---------------------------现在时间：', new Date(curTime));\r\n        }\r\n        if (Tools.isHourSpan(this.saveTime, curTime, ConfigData.instance.holidayDatas.refreshWorldTime)) {\r\n            return true;\r\n        }\r\n    },\r\n\r\n\r\n    onDaySpan: function () {\r\n        this.dayTotalAdsRevenue = 0\r\n        this.dayCanReportTotalAdsRevenue = true\r\n\r\n        this.dayKillCount = 0;\r\n        this.dayTotalPickKnifeCount = 0;\r\n        this.dayMaxPickKnifeCount = 0;\r\n        this.dayKillKnifeCount = 0;\r\n        this.dayPlayCount = 0;\r\n        this.dayWinCount = 0;\r\n        this.dayRefreshTaskCount = 0;\r\n        this.dayGetPrizeCount = 0;\r\n        if (!PlayerData.instance.isDuringDailyTaskGuide()) {\r\n            for (let task of this.dailyShowTask) {\r\n                task.process = 0;\r\n            }\r\n            this.dailyShowTask = [];\r\n        }\r\n\r\n        this.dailyOldTask = [];\r\n\r\n        this.dayGetGoldCount = 0;\r\n        this.dayProtectCount = 0;\r\n        this.updateDayMultAgainCDCountFlag = true;\r\n        // this.dayMultAgainCDCount = ConfigData.instance.clientData.dayMultAgainCDCount;\r\n        this.dayMultAgainCloseCount = 0;\r\n\r\n        this.dayLoseCount = 0;\r\n        this.dayWin = false;\r\n        if (this.daySign) {\r\n            this.signCount++;\r\n        }\r\n        this.daySign = false;\r\n        this.dayShowTop = false;\r\n        this.dayRefreshPKReward = false;\r\n        this.dayRefreshWorldReward = false;\r\n        this.dayRefreshShareScore = false;\r\n        this.dayFirstEnterPKTop20 = false;\r\n\r\n        this.daySubscribeReward = false;\r\n        this.loadComplete = true;\r\n        Tools.setItem('trySkinData', '');\r\n        this.saveUserData('跨天');\r\n    },\r\n\r\n    protectLevel: function (level) {\r\n        var ret = level;\r\n\r\n        if (this.dayLoseCount >= 3) {\r\n            // 连输\r\n            ret = ret > ConfigData.instance.defaultLevel ? ConfigData.instance.defaultLevel : ret - 2;\r\n            ret = ConfigData.instance.clampLevel(ret);\r\n            return ret;\r\n        }\r\n\r\n        if (this.dayPlayCount === 0 || !this.dayWin) {\r\n            // 今天第一把 或者 今天还没有赢过\r\n            ret -= 2;\r\n            ret = ConfigData.instance.clampLevel(ret);\r\n            return ret;\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n\r\n    clearNeedCheckTaskIds: function () {\r\n        if (this.needCheckTaskIds && this.needCheckTaskIds.length > 0) {\r\n            this.needCheckTaskIds = [];\r\n            this.saveUserData('刷新可解锁的任务id');\r\n        }\r\n    },\r\n\r\n    updateDayProtectCount: function () {\r\n        this.dayProtectCount++;\r\n        this.saveUserData('更新保星保级次数');\r\n    },\r\n\r\n    updateSignCount: function () {\r\n        this.daySign = true;\r\n        this.saveUserData('更新签到');\r\n    },\r\n\r\n    updateDayShowTop: function () {\r\n        this.dayShowTop = true;\r\n        this.saveUserData('更新展示置顶');\r\n    },\r\n\r\n    updateDayRefreshPKReward: function () {\r\n        this.dayRefreshPKReward = true;\r\n        this.saveUserData('更新小组PK奖励领取');\r\n    },\r\n\r\n    updateDayRefreshWorldReward: function () {\r\n        this.dayRefreshWorldReward = true;\r\n        this.saveUserData('更新世界PK奖励领取');\r\n    },\r\n\r\n    updateDayFirstEnterPKTop20: function () {\r\n        this.dayFirstEnterPKTop20 = true;\r\n        this.saveUserData('更新小组PK每日首次进前20');\r\n    },\r\n\r\n\r\n    updateIconUrl: function (iconUrl) {\r\n        this.iconUrl = iconUrl;\r\n        this.saveUserData('更新头像');\r\n    },\r\n\r\n    updateAdverCountData: function (id) {\r\n        var lastCount = this.adverCountDatas[id] ? this.adverCountDatas[id] : 0;\r\n        this.adverCountDatas[id] = lastCount + 1;\r\n        this.saveUserData('更新累计看广告次数');\r\n    },\r\n\r\n    updateTotalAdverCount: function () {\r\n        this.totalAdverCount++;\r\n        this.changeAdverCount++;\r\n        this.saveUserData('更新累计看广告次数');\r\n    },\r\n\r\n    isFirstDay: function () {\r\n        return Tools.getRealDayTimeCount(this.bornTime, this.getCurTime()) === 1;\r\n    },\r\n\r\n    isSecondDay: function () {\r\n        return Tools.getRealDayTimeCount(this.bornTime, this.getCurTime()) === 2;\r\n    },\r\n\r\n    bornDay: function () {\r\n        return Tools.getRealDayTimeCount(this.bornTime, this.getCurTime());\r\n    },\r\n\r\n\r\n\r\n    updateContinuityLoseCount: function () {\r\n        this.continuityLoseCount = 0;\r\n        this.saveUserData('更新连败次数');\r\n    },\r\n\r\n    updateNewKnifeSkinCheck: function () {\r\n        var newCheck = false;\r\n        for (const data of ConfigData.instance.knifeSkinDatas) {\r\n            var isNew = data.newDate && Tools.isBeforeOtherTime(data.newDate, this.getCurTime());\r\n            var id = data.id;\r\n            if (isNew && !Tools.arrContains(this.hasCheckNewSkin, id)) {\r\n                this.hasCheckNewSkin.push(id)\r\n                newCheck = true;\r\n            }\r\n        }\r\n        if (newCheck) {\r\n            this.saveUserData('更新已经查看过的新武器皮肤');\r\n        }\r\n    },\r\n\r\n    updateNewHeroSkinCheck: function () {\r\n        var newCheck = false;\r\n        for (const data of ConfigData.instance.heroSkinDatas) {\r\n            var isNew = data.newDate && Tools.isBeforeOtherTime(data.newDate, this.getCurTime());\r\n            var id = 10000 + data.id;\r\n            if (isNew && !Tools.arrContains(this.hasCheckNewSkin, id)) {\r\n                this.hasCheckNewSkin.push(id);\r\n                newCheck = true;\r\n            }\r\n        }\r\n        if (newCheck) {\r\n            this.saveUserData('更新已经查看过的新角色皮肤');\r\n        }\r\n    },\r\n\r\n\r\n    updateGrowLevel: function (type) {\r\n        if (type === GrowType.Gold) {\r\n            this.offlineGoldCount = this.getFinalOfflineGold();\r\n            this.lastChangeGoldMultipTime = this.getCurTime();\r\n        }\r\n        this.growLevel[type] += 1;\r\n    },\r\n\r\n    checkDelayUpdateData: function (dt) {\r\n        if (this.delaySaveDataTime > 0) {\r\n            this.delaySaveDataTime -= dt;\r\n            // console.log('延迟更新', this.delaySaveDataTime);\r\n            if (this.delaySaveDataTime <= 0) {\r\n                this.delaySaveDataTime = 0;\r\n                this.needUpdateUserData = true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    getGrowLevel: function (type) {\r\n        return this.growLevel[type];\r\n    },\r\n\r\n    getGrowLevelDataByType: function (type) {\r\n        var level = this.growLevel[type];\r\n        var data = ConfigData.instance.getGrowLevelData(type, level);\r\n        return data;\r\n    },\r\n\r\n    updateGetOfflineGoldTime: function () {\r\n        var curTime = this.getCurTime();\r\n        this.getOfflineGoldTime = curTime - (curTime - this.getOfflineGoldTime) % this.offlineGoldInterval;\r\n        this.lastChangeGoldMultipTime = this.getOfflineGoldTime;\r\n        this.offlineGoldCount = 0;\r\n        this.saveUserData('更新领取离线收益时间');\r\n    },\r\n\r\n    // getLevelRealParamByType: function (type) {\r\n    //     var data = this.getGrowLevelDataByType(type)\r\n    //     return data ? data.realParam : false;\r\n    // },\r\n    updateRepay: function () {\r\n        this.hasRepay = true;\r\n        this.saveUserData('更新领取赔偿')\r\n    },\r\n    updateZongZiToDaoBi: function () {\r\n        this.zongZiToDaoBi = true;\r\n        this.saveUserData('更新粽子转换钻石')\r\n    },\r\n\r\n\r\n\r\n    updateDayGetPrizeCount: function (way) {\r\n        this.dayGetPrizeCount++\r\n        this.saveUserData('更新获取奖励次数通过 ' + way)\r\n    },\r\n\r\n    updateDailyShowTask: function () {\r\n        this.dailyShowTask = ConfigData.instance.getDailyShowTask(this);\r\n        for (let data of this.dailyShowTask) {\r\n            data.goldMultiRate = this.rankData.goldMultiRate;\r\n        }\r\n        this.saveUserData('更新展示任务')\r\n    },\r\n\r\n    updateDailyOldTask: function (id) {\r\n        if (this.dailyOldTask.indexOf(id) === -1) {\r\n            this.dailyOldTask.push(id);\r\n            this.saveUserData('更新已经展示过的任务')\r\n        }\r\n    },\r\n\r\n    updateCompleteGuideDailyTask: function (id) {\r\n        this.completeGuideDailyTask.push(id);;\r\n        if (this.completeGuideDailyTask.length === 3) {\r\n            this.updateDailyShowTask();\r\n        }\r\n        this.saveUserData('更新新手任务完成')\r\n    },\r\n\r\n    updateZongZi: function (num) {\r\n        this.zongZi += num;\r\n        this.saveUserData('更新种子数量')\r\n    },\r\n\r\n    updateDayRefreshTaskCount: function () {\r\n        this.dayRefreshTaskCount++;\r\n        this.saveUserData('更新每日刷新任务数量')\r\n    },\r\n\r\n    updateDayRefreshShareScore: function (score) {\r\n        this.shareScore = score;\r\n        this.dayRefreshShareScore = true;\r\n        this.saveUserData('更新每日刷新分享积分标志位')\r\n    },\r\n\r\n    isDuringDailyTaskGuide: function () {\r\n        return this.completeGuideDailyTask.length !== 3;\r\n    },\r\n\r\n    canShowMultAgain: function () {\r\n\r\n        var dayMultAgainMinPlayCount = ConfigData.instance.clientData.dayMultAgainMinPlayCount;\r\n        if (this.playCount < ConfigData.instance.clientData.dayMultAgainMinPlayCount) {\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('战斗未满' + dayMultAgainMinPlayCount + '场，不弹二次翻倍')\r\n            }\r\n            return false\r\n        }\r\n\r\n        if (this.dayMultAgainCDCount > 0) {\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('冷却中，不弹二次翻倍')\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (this.dayMultAgainCloseCount >= 2) {\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('累计两次手动关闭，不弹二次翻倍')\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return true\r\n    },\r\n\r\n    updateDayMultAgainCDCount: function () {\r\n        if (this.dayMultAgainCDCount > 0) {\r\n            this.dayMultAgainCDCount--;\r\n        }\r\n        this.saveUserData('更新每日 二次翻倍 冷却数')\r\n    },\r\n\r\n\r\n    resetDayMultAgainCDCount: function (count) {\r\n        this.dayMultAgainCDCount = count + 1;\r\n        this.saveUserData('重置每日 二次翻倍 冷却数')\r\n    },\r\n\r\n    updateDayMultAgainCloseCount: function () {\r\n        this.dayMultAgainCloseCount++;\r\n        this.saveUserData('更新每日 二次翻倍 关闭数')\r\n    },\r\n\r\n    updateShareScore: function () {\r\n        this.shareScore--;\r\n        this.saveUserData('更新每日分享分数 减一')\r\n    },\r\n\r\n    updateCheckInviteLength: function () {\r\n        if (this.checkInviteLength < PlayerData.instance.inviteDatas.length) {\r\n            this.checkInviteLength = PlayerData.instance.inviteDatas.length;\r\n            this.saveUserData('查看新邀请朋友')\r\n        }\r\n    },\r\n\r\n    hasGetInviteReward: function () {\r\n        return this.isOwnHeroSkin(11);\r\n    },\r\n\r\n    hasGetAddTopReward: function () {\r\n        return this.isOwnKnifeSkin(32);\r\n    },\r\n\r\n    canGetAddTopReward: function () {\r\n        return Tools.getItem('fromMyApp')\r\n    },\r\n\r\n    isCurEquipHeroSkin: function (id) {\r\n        return this.heroSkinId === id;\r\n    },\r\n\r\n    isCurEquipKnifeSkin: function (id) {\r\n        return this.knifeSkinId === id;\r\n    },\r\n\r\n    canShowPanelDailyTask: function () {\r\n        if (this.isDuringDailyTaskGuide()) {\r\n            for (let data of this.dailyShowTask) {\r\n                // var isComplete = PlayerData.instance.getDailyTaskProcess(data.type) >= data.param;\r\n                var isComplete = data.process >= data.param;\r\n                var isGet = Tools.arrContains(PlayerData.instance.dailyOldTask, data.id) || Tools.arrContains(PlayerData.instance.completeGuideDailyTask, data.id)\r\n                var hasShow = data.hasShow;\r\n\r\n                if (!isComplete) {\r\n                    return false;\r\n                }\r\n                if (hasShow) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            for (let data of this.dailyShowTask) {\r\n                // var isComplete = PlayerData.instance.getDailyTaskProcess(data.type) >= data.param;\r\n                var isComplete = data.process >= data.param;\r\n                var isGet = Tools.arrContains(PlayerData.instance.dailyOldTask, data.id) || Tools.arrContains(PlayerData.instance.completeGuideDailyTask, data.id)\r\n                var hasShow = data.hasShow;\r\n                if (isComplete && !isGet && !hasShow) {\r\n                    return true\r\n                }\r\n            }\r\n            return false;\r\n\r\n        }\r\n\r\n    },\r\n\r\n    needUpdatePKRank: function () {\r\n        // if (this.refreshWorldRankAtOnce) {\r\n        //     this.refreshWorldRankAtOnce = false;\r\n        //     if (GameData.instance.isShowLog()) {\r\n        //         console.log('---------------------------强制刷新小组榜')\r\n        //     }\r\n        //     return true;\r\n        // }\r\n\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log('---------------------------小组PK榜刷新间隔：' + ConfigData.instance.holidayDatas.holidayPKRankInterval)\r\n            console.log('---------------------------距离上次刷新小组PK榜的时间：' + this.updatePKRankTime)\r\n        }\r\n        if (this.updatePKRankTime > ConfigData.instance.holidayDatas.holidayPKRankInterval) {\r\n            this.updatePKRankTime = 0;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n\r\n    getHolidayPKRank: function (callback) {\r\n        console.log('---------------------------------------------------------------------------------')\r\n        var hasData = this.holidayPKRankData && this.holidayPKRankData.rankInfo && this.holidayPKRankData.rankInfo.length && this.myPKRankData;\r\n        if (hasData && !this.needUpdatePKRank()) {\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('---------------------------使用本地小组PK榜')\r\n            }\r\n            callback(this.holidayPKRankData, this.myPKRankData);\r\n        } else {\r\n            if (GameData.instance.isShowLog()) {\r\n                if (!hasData) {\r\n                    console.log('---------------------------本地小组PK榜为空')\r\n                } else {\r\n                    console.log('---------------------------需要刷新小组PK榜')\r\n                }\r\n                console.log('---------------------------拉取小组PK榜')\r\n            }\r\n            PlatformMgr.getHolidayPKRank((data) => {\r\n                this.myPKRankData = this.handleHolidayRankData(data);\r\n                this.holidayPKRankData = data;\r\n                this.pkSurplusTime = data.surplusTime;\r\n                if (GameData.instance.isShowLog()) {\r\n                    console.log('---------------------------我的小组PK信息')\r\n                    console.log(JSON.stringify(this.myPKRankData));\r\n                }\r\n                callback(data, this.myPKRankData);\r\n            })\r\n        }\r\n    },\r\n\r\n    needUpdateWorldRank: function () {\r\n        // if (this.refreshWorldRankAtOnce) {\r\n        //     this.refreshWorldRankAtOnce = false;\r\n        //     return true;\r\n        // }\r\n        if (this.checkHourSpan()) {\r\n            this.updateSaveTime();\r\n            return true;\r\n        }\r\n    },\r\n\r\n    getHolidayWorldRank: function (round, callback) {\r\n        console.log('---------------------------------------------------------------------------------')\r\n        var isHourSpanRefresh = this.needUpdateWorldRank(); //检查是否跨整点\r\n        var hasData = this.holidayWorldRankData[round] && this.myWorldRankData;\r\n        if (hasData && !isHourSpanRefresh) {\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('---------------------------使用本地世界PK榜：' + round + '轮')\r\n            }\r\n            callback(this.holidayWorldRankData[round], this.myWorldRankData, isHourSpanRefresh);\r\n        } else {\r\n            if (GameData.instance.isShowLog()) {\r\n                if (!hasData) {\r\n                    console.log('---------------------------本地世界PK榜：' + round + '轮为空')\r\n                }\r\n                if (isHourSpanRefresh) {\r\n                    console.log('---------------------------跨小时需要刷新世界PK榜')\r\n                }\r\n                console.log('---------------------------拉取世界PK榜：' + round + '轮')\r\n            }\r\n\r\n            PlatformMgr.getHolidayWorldRank(round, (data) => {\r\n                var mineData = this.handleHolidayRankData(data);\r\n                if (round === 0) {\r\n                    if (!mineData) {\r\n                        if (this.myPKRankData) {\r\n                            mineData = {};\r\n                            for (let key in this.myPKRankData) {\r\n                                mineData[key] = this.myPKRankData[key];\r\n                            }\r\n                            mineData.rank = -1;\r\n                            mineData.isLocal = true;\r\n                        }\r\n                        this.myWorldRankData = mineData;\r\n                    } else {\r\n                        this.myWorldRankData = Tools.copyObj(mineData);\r\n                    }\r\n                    this.maxWorldRound = data.round;\r\n                    this.worldSurplusTime = data.surplusTime;\r\n                }\r\n                this.holidayWorldRankData[round] = data;\r\n                callback(data, this.myWorldRankData, isHourSpanRefresh);\r\n            })\r\n        }\r\n    },\r\n\r\n    handleHolidayRankData: function (data) {\r\n        var mine = null;\r\n        var rankInfo = data.rankInfo;\r\n        rankInfo.sort((a, b) => {\r\n            return b.score - a.score;\r\n        });\r\n        for (let i = 0, l = rankInfo.length; i < l; i++) {\r\n            rankInfo[i].rank = i + 1;\r\n            if (rankInfo[i].id == PlatformMgr.uid) {\r\n                mine = rankInfo[i];\r\n                mine.isLocal = true;\r\n            }\r\n        }\r\n        return mine;\r\n    },\r\n\r\n    setHolidayScore: function (num) {\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log('---------------------------新增排行榜分数：' + num)\r\n        }\r\n        PlatformMgr.setHolidayScore(num);\r\n        if (this.myPKRankData) {\r\n            this.myPKRankData.score += num;\r\n            this.myOldPKRankData = Tools.copyObj(this.myPKRankData);\r\n        }\r\n        if (this.myWorldRankData) {\r\n            this.myWorldRankData.score += num;\r\n            this.myOldWorldRankData = Tools.copyObj(this.myWorldRankData);\r\n        }\r\n        if (this.holidayPKRankData) this.handleHolidayRankData(this.holidayPKRankData);\r\n    },\r\n\r\n\r\n    updateReceiveRound: function (round, isPK) {\r\n        var key = (isPK ? 'pk-' : 'world-') + round;\r\n        this.receiveRound.push(key);\r\n        this.saveUserData('更新轮次奖励领取')\r\n    },\r\n\r\n    hasReceivePKRound: function (round) {\r\n        return Tools.arrContains(this.receiveRound, 'pk-' + round);\r\n    },\r\n\r\n    hasReceiveWorldRound: function (round) {\r\n        return Tools.arrContains(this.receiveRound, 'world-' + round);\r\n    },\r\n\r\n    updateSaveTime: function () {\r\n        this.saveTime = this.getCurTime();\r\n        this.saveUserData('跨小时');\r\n    },\r\n\r\n    clearHolidayData: function () {\r\n        if (GameData.instance.isShowLog()) {\r\n            console.log('---------------------------清空排行数据，强制刷新')\r\n        }\r\n\r\n        this.holidayPKRankData = null;\r\n        this.holidayWorldRankData = [];\r\n        this.myPKRankData = null;\r\n        this.myWorldRankData = null;\r\n        this.myOldPKRankData = null;\r\n        this.myOldWorldRankData = null;\r\n    },\r\n\r\n    updateWorldRewardDetail: function () {\r\n        PlatformMgr.getHolidayWorldRewardInfo((data) => {\r\n            this.playerWorldRewardDetail = data;\r\n        });\r\n    },\r\n\r\n\r\n    updateSubscribeTime() {\r\n        //之后修改为通过接口获取订阅时间戳\r\n        this.subscribeTime = this.getCurTime() + 86400000 * 3;\r\n        this.saveUserData('更新订阅时间')\r\n    },\r\n\r\n    updateDaySubscribeReward: function () {\r\n        this.daySubscribeReward = true;\r\n        this.saveUserData('更新每日订阅奖励发放');\r\n    },\r\n\r\n    /**\r\n     * 是否订阅，调用此接口判断是否启用特殊功能\r\n     */\r\n    isSubscribe: function () {\r\n        // return true;\r\n        return this.subscribeTime > this.getCurTime();\r\n    },\r\n\r\n    getCountry: function () {\r\n        this.country = PlatformMgr.getCountry();\r\n        this.languageCode = PlatformMgr.getLanguageCode();\r\n    },\r\n\r\n\r\n\r\n    canShowPanelBuySkin: function () {\r\n\r\n        // return false;\r\n        if (!this.hasPlayOnceGame) {\r\n            // console.log('！！！！！！！！！！！！还没打过一局，不弹出购买皮肤面板')\r\n            return false;\r\n        } else {\r\n            this.hasPlayOnceGame = false;\r\n        }\r\n\r\n        if (!this.showPanelBuySkinFlag) {\r\n            // console.log('！！！！！！！！！！！！本次获得了其他皮肤，不弹出购买皮肤面板')\r\n            return false;\r\n        }\r\n\r\n        if (this.playCount < 4) {\r\n            // console.log('！！！！！！！！！！！！场次未满四局，不弹出购买皮肤面板,当前局数：' + this.playCount)\r\n            return false;\r\n        }\r\n        //获取我当前的金币可购买的，尚未拥有的皮肤,有多个取最便宜的那个\r\n        var knifeSkinDatas = ConfigData.instance.knifeSkinDatas;\r\n        var heroSkinDatas = ConfigData.instance.heroSkinDatas;\r\n\r\n        this.finalGetSkin = null;\r\n        var knifeSkin, heroSkin\r\n\r\n        for (let data of knifeSkinDatas) {\r\n            if (data.getWay === 0 && data.priceType === 0) {\r\n                if (data.price <= this.gold && !this.isOwnKnifeSkin(data.id) && !this.isRefuseBuyTwice(data.id + 1000)) {\r\n                    knifeSkin = data;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let data of heroSkinDatas) {\r\n            if (data.getWay === 0 && data.priceType === 0) {\r\n                if (data.price <= this.gold && !this.isOwnHeroSkin(data.id) && !this.isRefuseBuyTwice(data.id + 2000)) {\r\n                    heroSkin = data;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // if(!(knifeSkin||heroSkin)){\r\n        //     //如果发现没有可以\r\n        // }\r\n\r\n        if (!knifeSkin) {\r\n            this.finalGetSkin = heroSkin;\r\n        } else if (!heroSkin) {\r\n            this.finalGetSkin = knifeSkin;\r\n        } else {\r\n            this.finalGetSkin = knifeSkin.price <= heroSkin.price ? knifeSkin : heroSkin;\r\n        }\r\n\r\n\r\n\r\n        if (this.finalGetSkin) {\r\n            // console.log('！！！！！！！！！！！！可弹出金币获取皮肤面板')\r\n            this.finalGetSkin.isGetByAdver = false;\r\n            this.continuityCanNotBuyCount = 0;\r\n            return true;\r\n        } else {\r\n            this.updateContinuityCanNotBuyCount()\r\n        }\r\n\r\n\r\n        //此次没有可购买，判断连续是否超过三次\r\n        if (this.playCount < 10) {\r\n            // console.log('！！！！！！！！！！！！未满10局，不可弹出广告获取皮肤面板，当前局数：' + this.playCount)\r\n            return false;\r\n        }\r\n\r\n        if (this.continuityCanNotBuyCount < 3) {\r\n            // console.log('！！！！！！！！！！！！未连续三局没有达到购买条件，不可弹出广告获取皮肤面板,当前连续局数：' + this.continuityCanNotBuyCount)\r\n            return false;\r\n        } else {\r\n            this.continuityCanNotBuyCount = 0;\r\n        }\r\n\r\n\r\n        for (let data of knifeSkinDatas) {\r\n            if (data.getWay === 0 && data.priceType === 0) {\r\n                if (data.price >= this.gold && !this.isOwnKnifeSkin(data.id) && !this.isRefuseAdverTwice(data.id + 1000)) {\r\n                    knifeSkin = data;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let data of heroSkinDatas) {\r\n            if (data.getWay === 0 && data.priceType === 0) {\r\n                if (data.price >= this.gold && !this.isOwnHeroSkin(data.id) && !this.isRefuseAdverTwice(data.id + 2000)) {\r\n                    heroSkin = data;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!knifeSkin) {\r\n            this.finalGetSkin = heroSkin;\r\n        } else if (!heroSkin) {\r\n            this.finalGetSkin = knifeSkin;\r\n        } else {\r\n            this.finalGetSkin = knifeSkin.price <= heroSkin.price ? knifeSkin : heroSkin;\r\n        }\r\n\r\n\r\n        if (this.finalGetSkin) {\r\n            // console.log('！！！！！！！！！！！！可弹出广告获取皮肤面板')\r\n            this.finalGetSkin.isGetByAdver = true;\r\n            return true;\r\n        }\r\n\r\n        // console.log('！！！！！！！！！！！！没有可获取的皮肤')\r\n        return false;\r\n\r\n    },\r\n\r\n\r\n    isRefuseBuyTwice: function (id) {\r\n        return this.refuseBuyPool && this.refuseBuyPool[id] && this.refuseBuyPool[id] >= 2;\r\n    },\r\n\r\n    updateRefuseBuyPool: function (id) {\r\n        this.refuseBuyPool[id] = this.refuseBuyPool[id] ? this.refuseBuyPool[id] + 1 : 1;\r\n        this.saveUserData('更新拒绝购买皮肤次数')\r\n    },\r\n\r\n    isRefuseAdverTwice: function (id) {\r\n        return this.refuseAdverPool && this.refuseAdverPool[id] && this.refuseAdverPool[id] >= 2;\r\n    },\r\n\r\n    updateRefuseAdverPool: function (id) {\r\n        this.refuseAdverPool[id] = this.refuseAdverPool[id] ? this.refuseAdverPool[id] + 1 : 1;\r\n        this.saveUserData('更新拒绝购买皮肤次数')\r\n    },\r\n\r\n    updateContinuityCanNotBuyCount: function () {\r\n        this.continuityCanNotBuyCount++;\r\n        this.saveUserData('更新没有达到购买皮肤条件的次数')\r\n    },\r\n\r\n    getOwnKnifeSkinCount() {\r\n        return this.ownKnifeSkins.length;\r\n    },\r\n\r\n    getOwnHeroSkinCount() {\r\n        return this.ownHeroSkins.length;\r\n    },\r\n\r\n\r\n    canBuyItem: function (data) {\r\n        if (!data) return false;\r\n        if (data.getWay === 0) {\r\n            if (data.priceType === 0) {\r\n                return data.price <= this.gold;\r\n            } else {\r\n                return data.price <= this.zongZi;\r\n            }\r\n        }\r\n    },\r\n\r\n    updateKeyCount: function () {\r\n        this.keyCount++\r\n        if (this.keyCount > 3) {\r\n            this.keyCount = 3;\r\n        }\r\n        this.keyDirty = true;\r\n        this.hasGetKey = true;\r\n        this.showKeyCount = 0;\r\n        this.saveUserData('更新key数')\r\n    },\r\n\r\n    clearKeyCount: function () {\r\n        this.keyCount = 0;\r\n        this.saveUserData('清空key数')\r\n    },\r\n\r\n    updateTreasureTurn: function () {\r\n        this.treasureTurn++;\r\n        this.saveUserData('更新宝箱轮数')\r\n    },\r\n\r\n    updateShowKeyCount: function () {\r\n        this.showKeyCount++;\r\n        this.saveUserData('更新展示钥匙数')\r\n    },\r\n\r\n    canShowPanelTreasureBox: function () {\r\n        if (this.keyCount >= 3) {\r\n            this.clearKeyCount();\r\n            return true;\r\n        }\r\n    },\r\n\r\n    canShowKeyInAI: function () {\r\n        if ((this.playCount >= 0 && this.showKeyCount >= 2)) {\r\n            return true\r\n        }\r\n    },\r\n\r\n    canShowPanelEvaulate: function () {\r\n        if (this.evaulateCount !== -1) {\r\n            return this.evaulateCount === 3 || this.evaulateCount === 6;\r\n        }\r\n    },\r\n\r\n\r\n    endEvaulateCount: function () {\r\n        this.evaulateCount = -1;\r\n        this.saveUserData('结束评价')\r\n    },\r\n\r\n    updateEvaulateCount: function () {\r\n        if (this.evaulateCount !== -1) {\r\n            this.evaulateCount++;\r\n        }\r\n        this.saveUserData('更新评价次数')\r\n    },\r\n\r\n    updateVipWithoutInterstitial: function () {\r\n        this.vipWithoutInterstitial++;\r\n        this.saveUserData('更新vip用户屏蔽插屏')\r\n    },\r\n\r\n    getVipWithoutInterstitial: function () {\r\n        return this.vipWithoutInterstitial;\r\n    },\r\n\r\n    getLastFreeDiamondTime: function () {\r\n        return this.lastFreeDiamondTime;\r\n    },\r\n\r\n    updateLastFreeDiamondTime: function () {\r\n        this.lastFreeDiamondTime = this.getCurTime();\r\n        this.saveUserData('更新免费钻石领取时间')\r\n    },\r\n\r\n    getCanGetFreeDiamond: function () {\r\n        return this.getCurTime() - this.lastFreeDiamondTime >= 24 * 60 * 60 * 1000;\r\n    },\r\n});"]}