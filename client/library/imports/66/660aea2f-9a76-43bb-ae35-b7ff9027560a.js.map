{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui/assets\\scripts\\battle\\ui\\PanelGameOver.js"],"names":["UIUtil","require","ConfigData","PlayerData","ShareMgr","ShareType","AdvertMgr","AdverType","Tools","PlatformMgr","GrowType","StageType","GameData","RANK","cc","Class","extends","Component","properties","winNode","Node","loseNode","rankLabel","Label","infoLabel","goldLabel","shareNode","getNode","rankNameLabel","rankIconSprite","Sprite","resultNode","rankNode","time","bar","rankLabelNodes","rankGoldLabelNodes","playerRankLabel","playerNameLabel","playerGoldLabel","addScoreLabel","allGoldNode","normalGoldNode","multiplyGoldNode","multiplyGoldLabel","multiplyRateLabel","itemNode","goldNode","iconNode","flagNode","shareIcon","adverIcon","shareThreeIcon","adverThreeIcon","luckyRewardNode","luckyRewardBtn","luckyBarNode","luckyBar","multLabel","multNode","xNode","lotteryAnim","Animation","blockNode","starNodes","noStarNodes","protectNode","protectStarNode","protectLevelNode","protectRankLabel","protectRankSprite","protectStarNodes","noProtectRankLabel","noProtectRankSprite","noProtectStarNodes","protectKingNode","protectKingLabel","noProtectKingNode","noProtectKingLabel","protectShareIcon","protectAdverIcon","kingNode","kingStar","kingLabel","noTakeStarTips","noTakeStarLabel","animAddStar","animSubStar","animProtectStar","animChangeLevel","rankBgFor2or3","multipFreeIcon","multipShareIcon","multipAdverIcon","luckyFreeIcon","luckyShareIcon","luckyAdverIcon","panelMultAgain","multAgainShareIcon","multAgainAdverIcon","fiveMultIcon","tenMultIcon","multAgainGoldLabel","okLangLabel","getLangLabel","collectLangLabel","cleanUp","first","hasGet","addStarCallback","isLucky","isMore","multip","init","world","string","uiMgr","openPanelKeyCount","active","rank","localPlayer","win","rankData","instance","growGoldLevelData","getGrowLevelDataByType","Gold","isShowLog","console","log","growGoldParam","realGoldParam","fireBaseEvent","toString","startRefresh","players","concat","sort","a","b","i","length","str","player","getShowNickName","name","children","getComponent","goldCount","getGold","isLocal","Math","ceil","goldMultiRate","goldAddition","loadResSprite","url","loadResFlag","country","y","killer","gameRuleSystem","_countDownTime","getStringByFormat","getUITipStr","getWay","getMultipGoldWayByCount","dayPlayCount","isMult","oldHideScore","hideScore","getHideScore","winHideScore","loseHideScore","newHideScore","clampHideScore","count","getLuckyRewardData","limitCount","clientData","luckyRewardLimitCount","newCount","width","finalLuckyBarWidth","canShowLuckyBtn","getItemOrFinalItem","finalGoldCount","stage","getCurStageByPrizeCount","isFristGame","Free","Share","Adver","loadAdver","MultipGold","hasAdver","openAdver","level","getLevelByHideScore","setLuckyRewardData","oldStar","rankStar","curStar","wasKing","levelUpStar","star","refreshRankStar","self","stars","getStar","arrContains","addStarRanks","subStarRanks","newStar","newRankData","getRankDataByStar","isKing","isLevelChange","id","canLevelDown","refreshData","node","position","v2","play","setTimeout","refreshMultipGoldBtn","index","shineStar","once","shine","sequence","fadeOut","fadeIn","fadeTo","runAction","subRefreshCallback","protectCallback","protectWay","getProtectWayByCount","dayProtectCount","showPanelProtect","showPanelTreasureBox","isProtect","oldRankData","unlockMap","newMap","setUserCloudStorage","noStars","interval","xPos","isGet","isShow","x","restartGame","param","updateGold","showGold","showGetMoneyEffect","showInterstitial","showMultAgain","mult","multAgainCount","func","MultipAgain","onMultAgainBtnClick","multipCallback","success","resetDayMultAgainCDCount","dayMultAgainCDCount","showTips","showMultAgainShare","showMultAgainAdvert","onCLoseMultAgain","updateDayMultAgainCloseCount","share","errFunc","showAdver","onShareBtnClick","WIN","isSuccess","_GSGame","onMultiplyBtnClick","showShare","showAdvert","getAdvertUnitId","onContinueBtnClick","update","dt","updateLuckyBar","updateRankBar","addStar","onLuckyRewardBtnClick","onLuckyMultipBtnClick","closeFunc","luckyRewardMultips","getRandomInt","luckyRewardCount","updateLuckyRewardCount","xNodes","delay","delayTime","action","moveTo","easing","easeBounceOut","callFunc","showLuckyShare","showLuckyAdver","onCloseLuckyNodeBtnClick","onProtectBtnClick","updateDayProtectCount","showProtectShare","showProtectAdver","ProtectStar","onReduceProtectBtnClick","curData","nextData","isLevelDown","parent","refreshProtectRankStar","starNode","starCount","abs"],"mappings":"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","file":"PanelGameOver.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["const UIUtil = require('UIUtil');\r\nconst ConfigData = require('ConfigData');\r\nconst PlayerData = require('PlayerData');\r\nconst ShareMgr = require('ShareMgr');\r\nconst ShareType = require('Types').ShareType;\r\nconst AdvertMgr = require('AdvertMgr');\r\nconst AdverType = require('Types').AdverType;\r\nconst Tools = require('Tools');\r\nconst PlatformMgr = require('PlatformMgr');\r\nconst GrowType = require('Types').GrowType;\r\nconst StageType = require('Types').StageType;\r\nconst GameData = require('GameData');\r\nconst RANK = ['1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th'];\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n\r\n        winNode: cc.Node,\r\n        loseNode: cc.Node,\r\n        rankLabel: cc.Label,\r\n        infoLabel: cc.Label,\r\n        goldLabel: cc.Label,\r\n        shareNode: cc.Node,\r\n        getNode: cc.Node,\r\n        rankNameLabel: cc.Label,\r\n        rankIconSprite: cc.Sprite,\r\n\r\n        resultNode: cc.Node,\r\n        rankNode: cc.Node,\r\n\r\n        time: 0,\r\n        bar: cc.Node,\r\n\r\n        rankLabelNodes: cc.Node,\r\n        rankGoldLabelNodes: cc.Node,\r\n        playerRankLabel: cc.Label,\r\n        playerNameLabel: cc.Label,\r\n        playerGoldLabel: cc.Label,\r\n\r\n        addScoreLabel: cc.Label,\r\n        allGoldNode: cc.Node,\r\n        normalGoldNode: cc.Node,\r\n        multiplyGoldNode: cc.Node,\r\n        multiplyGoldLabel: cc.Label,\r\n        multiplyRateLabel: cc.Label,\r\n\r\n        itemNode: cc.Node,\r\n        goldNode: cc.Node,\r\n        iconNode: cc.Node,\r\n        flagNode: cc.Node,\r\n\r\n        shareIcon: cc.Node,\r\n        adverIcon: cc.Node,\r\n        shareThreeIcon: cc.Node,\r\n        adverThreeIcon: cc.Node,\r\n\r\n        luckyRewardNode: cc.Node,\r\n        luckyRewardBtn: cc.Node,\r\n        luckyBarNode: cc.Node,\r\n        luckyBar: cc.Node,\r\n\r\n        multLabel: cc.Label,\r\n        multNode: cc.Node,\r\n        xNode: cc.Node,\r\n        lotteryAnim: cc.Animation,\r\n\r\n        blockNode: cc.Node,\r\n        starNodes: [cc.Node],\r\n        noStarNodes: [cc.Node],\r\n\r\n        protectNode: cc.Node,\r\n        protectStarNode: cc.Node,\r\n        protectLevelNode: cc.Node,\r\n\r\n        protectRankLabel: cc.Label,\r\n        protectRankSprite: cc.Sprite,\r\n        protectStarNodes: [cc.Node],\r\n        noProtectRankLabel: cc.Label,\r\n        noProtectRankSprite: cc.Sprite,\r\n        noProtectStarNodes: [cc.Node],\r\n\r\n        protectKingNode: cc.Node,\r\n        protectKingLabel: cc.Label,\r\n        noProtectKingNode: cc.Node,\r\n        noProtectKingLabel: cc.Label,\r\n\r\n        protectShareIcon: cc.Node,\r\n        protectAdverIcon: cc.Node,\r\n\r\n\r\n        kingNode: cc.Node,\r\n        kingStar: cc.Node,\r\n        kingLabel: cc.Label,\r\n\r\n        noTakeStarTips: cc.Node,\r\n        noTakeStarLabel: cc.Label,\r\n\r\n\r\n        animAddStar: cc.Animation,\r\n        animSubStar: cc.Animation,\r\n        animProtectStar: cc.Animation,\r\n        animChangeLevel: cc.Animation,\r\n\r\n        rankBgFor2or3: cc.Node,\r\n\r\n\r\n        multipFreeIcon: cc.Node,\r\n        multipShareIcon: cc.Node,\r\n        multipAdverIcon: cc.Node,\r\n\r\n        luckyFreeIcon: cc.Node,\r\n        luckyShareIcon: cc.Node,\r\n        luckyAdverIcon: cc.Node,\r\n        // queeNode: cc.Node,\r\n\r\n        panelMultAgain: cc.Node,\r\n        multAgainShareIcon: cc.Node,\r\n        multAgainAdverIcon: cc.Node,\r\n        fiveMultIcon: cc.Node,\r\n        tenMultIcon: cc.Node,\r\n        multAgainGoldLabel: cc.Label,\r\n\r\n        //language\r\n        okLangLabel: cc.Label,\r\n        getLangLabel: cc.Label,\r\n        collectLangLabel: cc.Label,\r\n\r\n    },\r\n\r\n    cleanUp: function () {\r\n        this.first = false;\r\n        this.hasGet = false;\r\n        this.addStarCallback = null;\r\n        this.isLucky = false;\r\n        this.isMore = false;\r\n        this.multip = 1;\r\n    },\r\n\r\n\r\n    init: function (world) {\r\n        this.okLangLabel.string = 'OK';\r\n        this.getLangLabel.string = 'You got it.';\r\n        this.collectLangLabel.string = 'Collect';\r\n        this.world = world;\r\n        this.world.uiMgr.openPanelKeyCount(true);\r\n\r\n        if (!this.first) {\r\n            this.first = true;\r\n            this.panelMultAgain.active = false;\r\n            this.luckyRewardNode.active = false;\r\n\r\n\r\n            var rank = world.localPlayer.rank;\r\n            var win = rank === 1;\r\n            this.win = rank === 1;\r\n            var rankData = PlayerData.instance.rankData;\r\n            var growGoldLevelData = PlayerData.instance.getGrowLevelDataByType(GrowType.Gold);\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log(growGoldLevelData);\r\n            }\r\n            var growGoldParam = growGoldLevelData.realGoldParam / 100;\r\n\r\n            //结算页面展示\r\n            AdvertMgr.instance.fireBaseEvent(\"pege_show_settlement\",\"rankid\",toString(rank));\r\n\r\n            if (win) {\r\n                this.resultNode.active = false;\r\n                this.loseNode.active = false;\r\n                this.rankBgFor2or3.active = false;\r\n                this.startRefresh = false;\r\n\r\n                this.rankNode.active = true;\r\n                var players = world.players.concat();\r\n                players.sort((a, b) => {\r\n                    return a.rank - b.rank;\r\n                })\r\n                // var rankStr = ' ';\r\n                // var nameStr = ' ';\r\n                // var goldStr = ' ';\r\n                for (let i = 0; i < players.length; i++) {\r\n                    var str = '';\r\n                    var player = players[i];\r\n                    str += '' + RANK[i];\r\n                    str += '                ' + Tools.getShowNickName(player.name);\r\n                    this.rankLabelNodes.children[i].getComponent(cc.Label).string = str;\r\n                    var goldCount = rankData.getGold[player.rank - 1];\r\n                    if (player.isLocal) {\r\n                        goldCount = Math.ceil(goldCount * (player.rankData.goldMultiRate + growGoldParam + 1));\r\n                    } else {\r\n                        goldCount = Math.ceil(goldCount * (player.rankData.goldMultiRate + (player.goldAddition ? player.goldAddition : 0) + 1));\r\n                    }\r\n                    this.rankGoldLabelNodes.children[i].getComponent(cc.Label).string = goldCount;\r\n\r\n                    this.itemNode.children[i].active = true;\r\n                    this.goldNode.children[i].active = true;\r\n                    UIUtil.loadResSprite(this.iconNode.children[i].getComponent(cc.Sprite), player.rankData.url);\r\n                    UIUtil.loadResFlag(this.flagNode.children[i].getComponent(cc.Sprite), player.country);\r\n\r\n                    this.rankLabelNodes.children[i].y = -70 * i;\r\n                    this.rankGoldLabelNodes.children[i].y = -70 * i;\r\n                    this.itemNode.children[i].y = -70 * i;\r\n                    this.goldNode.children[i].y = -70 * i;\r\n                    this.iconNode.children[i].y = -70 * i;\r\n                    this.flagNode.children[i].y = -70 * i;\r\n\r\n\r\n\r\n                    // AddEntitySystem.instance.loadRankSprite(this.iconNode.children[i].getComponent(cc.Sprite), player.rankData.iconIndex);\r\n                }\r\n\r\n                // this.playerRankLabel.string = rankStr;\r\n                // this.playerNameLabel.string = nameStr;\r\n                // this.playerGoldLabel.string = goldStr;\r\n                this.infoLabel.string = 'Defeat all other players!';\r\n                this.winNode.active = true;\r\n            } else {\r\n                this.rankNode.active = false;\r\n                this.winNode.active = false;\r\n                this.rankBgFor2or3.active = true;\r\n\r\n                this.resultNode.active = true;\r\n                this.loseNode.active = true;\r\n                this.rankLabel.string = '' + RANK[rank - 1];\r\n                this.infoLabel.string = '';\r\n                if (rank === 2) {\r\n                    this.infoLabel.string = 'You are almost there!';\r\n                    // this.rankBgFor2or3.active = true;\r\n                    // this.rankLabel.node.y += 40;\r\n                } else if (rank === 3) {\r\n                    // this.rankLabel.node.y += 40;\r\n                    // this.rankBgFor2or3.active = true;\r\n                    this.infoLabel.string = 'Keep trying!You can do it!';\r\n                } else {\r\n                    var killer = world.localPlayer.killer;\r\n                    if (world.gameRuleSystem._countDownTime > 0) {\r\n                        if (killer) {\r\n                            // this.infoLabel.string = 'You were defeated by ' + killer.name + '.';\r\n                            this.infoLabel.string = Tools.getStringByFormat(ConfigData.instance.getUITipStr(14), killer.name);\r\n                        } else {\r\n                            this.infoLabel.string = 'You were defeated by wall.';\r\n                        }\r\n                    } else {\r\n                        this.infoLabel.string = 'Time is up.';\r\n                    }\r\n                }\r\n                this.startRefresh = true;\r\n            }\r\n\r\n\r\n            this.getWay = ConfigData.instance.getMultipGoldWayByCount(PlayerData.instance.dayPlayCount);\r\n            // if (!AdvertMgr.instance.canGetAdver) this.getWay = 0;\r\n            this.isMult = rank <= 8;\r\n            this.shareThreeIcon.active = this.getWay === 0 && this.isMult ? true : false;\r\n            this.adverThreeIcon.active = this.getWay === 1 && this.isMult ? true : false;\r\n            this.shareIcon.active = this.getWay === 0 && !this.isMult ? true : false;\r\n            this.adverIcon.active = this.getWay === 1 && !this.isMult ? true : false;\r\n\r\n\r\n            this.oldHideScore = PlayerData.instance.hideScore;\r\n            this.getHideScore = win ? rankData.winHideScore : rankData.loseHideScore;\r\n            this.newHideScore = this.oldHideScore + this.getHideScore;\r\n            this.newHideScore = ConfigData.instance.clampHideScore(this.newHideScore);\r\n\r\n\r\n            var count = PlayerData.instance.getLuckyRewardData();\r\n            var limitCount = ConfigData.instance.clientData.luckyRewardLimitCount;\r\n            var newCount = count + 1 < limitCount ? count + 1 : limitCount;\r\n            this.luckyBar.width = 265 * count / limitCount;\r\n            this.finalLuckyBarWidth = 265 * newCount / limitCount;\r\n            this.canShowLuckyBtn = limitCount === newCount;\r\n            this.luckyRewardBtn.active = limitCount === newCount ? true : false;\r\n\r\n            this.goldCount = Math.ceil(Tools.getItemOrFinalItem(rankData.getGold, rank - 1) * (rankData.goldMultiRate + growGoldParam + 1)); //\r\n            if (GameData.instance.isShowLog()) {\r\n                console.log('基础金币', Tools.getItemOrFinalItem(rankData.getGold, rank - 1),\r\n                    '段位加成', rankData.goldMultiRate, '成长加成', growGoldParam);\r\n            }\r\n            this.goldLabel.string = this.goldCount;\r\n            this.finalGoldCount = this.isMult ? this.goldCount * 3 : 120;\r\n            this.multiplyGoldLabel.string = this.finalGoldCount;\r\n            // this.multiplyRateLabel.string = 'coins x' + Math.ceil((rankData.goldMultiRate * 100 + 100)) + '%';\r\n            this.multiplyRateLabel.string = Tools.getStringByFormat(ConfigData.instance.getUITipStr(11), Math.ceil((rankData.goldMultiRate * 100 + 100)))\r\n            this.multiplyGoldNode.active = !this.luckyRewardBtn.active;\r\n\r\n\r\n            if (rank > 3) {\r\n                //低于前三名不显示翻倍\r\n                this.multiplyGoldNode.active = false;\r\n                this.luckyRewardBtn.active = false;\r\n                this.luckyBarNode.active = false;\r\n            } else {\r\n                this.luckyBarNode.active = true;\r\n            }\r\n\r\n            // this.stage = ConfigData.instance.getCurStage(PlayerData.instance.playCount, ConfigData.instance.clientData.adverReviveLimit);\r\n            if (this.multiplyGoldNode.active) {\r\n                this.stage = ConfigData.instance.getCurStageByPrizeCount(PlayerData.instance);\r\n\r\n                if (PlayerData.instance.isFristGame()) this.stage = StageType.Free;\r\n                this.multipFreeIcon.active = this.stage === StageType.Free;\r\n                this.multipShareIcon.active = this.stage === StageType.Share;\r\n                this.multipAdverIcon.active = this.stage === StageType.Adver;\r\n\r\n\r\n                // this.stage = ConfigData.instance.getCurStage(PlayerData.instance.playCount, ConfigData.instance.clientData.adverReviveLimit);\r\n                // this.luckyFreeIcon.x = this.stage === StageType.Free ? 0 : 29;\r\n                // this.luckyShareIcon.active = this.stage === StageType.Share;\r\n                // this.luckyAdverIcon.active = this.stage === StageType.Adver;\r\n\r\n\r\n                if (this.stage === 2) {\r\n                    AdvertMgr.instance.loadAdver(AdverType.MultipGold, (hasAdver) => {\r\n                        this.multipShareIcon.active = !hasAdver;\r\n                        this.multipAdverIcon.active = hasAdver;\r\n\r\n                        // this.luckyShareIcon.active = !hasAdver;\r\n                        // this.luckyAdverIcon.active = hasAdver;\r\n\r\n                        if (hasAdver) {\r\n                            AdvertMgr.instance.openAdver(AdverType.MultipGold);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            //幸运默认走视频\r\n            // this.luckyFreeIcon.x = 29;\r\n            this.luckyShareIcon.active = false;\r\n            this.luckyAdverIcon.active = true;\r\n\r\n\r\n            this.allGoldNode.active = false;\r\n            //隐藏分\r\n            PlayerData.instance.hideScore = this.newHideScore;\r\n            PlayerData.instance.level = ConfigData.instance.getLevelByHideScore(this.newHideScore);\r\n            PlayerData.instance.setLuckyRewardData(newCount);\r\n            // world的onGameOver还会调一次save\r\n            // PlayerData.instance.saveUserData();\r\n\r\n            //展示原有星星的逻辑\r\n            this.rankNameLabel.string = rankData.name;\r\n            UIUtil.loadResSprite(this.rankIconSprite, rankData.url);\r\n            // AddEntitySystem.instance.loadRankSprite(this.rankIconSprite, rankData.iconIndex);\r\n            this.oldStar = PlayerData.instance.rankStar;\r\n            this.curStar = this.oldStar;\r\n            var wasKing = rankData.levelUpStar === 0;\r\n            this.kingNode.active = wasKing ? true : false;\r\n            this.kingLabel.string = 'x' + (this.oldStar - rankData.star);\r\n            if (!wasKing) this.refreshRankStar();\r\n            this.noTakeStarTips.active = false; // = rankData.subStarRanks && rankData.subStarRanks.length !== 0 ? false : true;\r\n            this.noTakeStarLabel = this.noTakeStarTips.children[0].getComponent('cc.Label');\r\n\r\n            //筛选需要变化的星星\r\n            //梳理一下：\r\n            // 1.正常加星，出现，回调\r\n            // 2.加星升级，先升级，然后星星出现\r\n            // 3.加星加到王者的特殊处理\r\n            // 4.正常掉星，消失，回调\r\n            // 5.掉星降级，先降级，然后星星消失\r\n            // 6.掉星掉到0的特殊处理\r\n\r\n            const self = this;\r\n            var stars = this.starNodes;\r\n            var getStar = Tools.arrContains(rankData.addStarRanks, rank) ? 1 : ((this.curStar > 0 && Tools.arrContains(rankData.subStarRanks, rank)) ? -1 : 0);\r\n            var newStar = this.oldStar + getStar;\r\n            var newRankData = ConfigData.instance.getRankDataByStar(newStar);\r\n            var isKing = newRankData.levelUpStar === 0;\r\n            var isLevelChange = newRankData.id !== rankData.id;\r\n            if (isLevelChange && getStar < 0 && !rankData.canLevelDown) {\r\n                //该段位不会降级\r\n                getStar = 0;\r\n            } else {\r\n                //数据刷新\r\n                this.curStar = newStar;\r\n                this.refreshData();\r\n            }\r\n\r\n            this.animAddStar.node.active = false;\r\n            this.animChangeLevel.node.active = false;\r\n            // this.kingNode.active = false;\r\n\r\n            if (getStar === 1) {\r\n                //加星\r\n                if (!isLevelChange) {\r\n                    //正常加星\r\n                    if (wasKing) {\r\n                        //王者\r\n                        this.animAddStar.node.active = true;\r\n                        self.animAddStar.node.position = cc.v2(-45, 0);\r\n                        this.addStarCallback = () => {\r\n                            self.animAddStar.play()\r\n                            setTimeout(() => {\r\n                                self.kingLabel.string = 'x' + (newStar - newRankData.star);\r\n                                self.refreshMultipGoldBtn();\r\n                            }, 500)\r\n                        }\r\n                    } else {\r\n                        //不是王者\r\n                        var index = newStar - rankData.star - 1;\r\n                        var shineStar = stars[index];\r\n                        this.animAddStar.node.active = true;\r\n                        self.animAddStar.node.position = shineStar.position;\r\n                        this.addStarCallback = () => {\r\n                            self.animAddStar.play()\r\n                            setTimeout(() => {\r\n                                shineStar.active = true;\r\n                            }, 300)\r\n                            setTimeout(() => {\r\n                                self.refreshMultipGoldBtn();\r\n                            }, 500)\r\n                        }\r\n                    }\r\n                } else {\r\n                    //加星升级\r\n                    var index = newStar - rankData.star - 1;\r\n                    var shineStar = stars[index];\r\n                    this.animAddStar.node.active = true;\r\n                    self.animAddStar.node.position = shineStar.position;\r\n                    this.addStarCallback = () => {\r\n                        self.animAddStar.once('finished', () => {\r\n                            shineStar.active = true;\r\n                            setTimeout(() => {\r\n                                self.animChangeLevel.node.active = true;\r\n                                self.animChangeLevel.play()\r\n                                self.rankNameLabel.string = newRankData.name;\r\n                                self.multiplyRateLabel.string = Tools.getStringByFormat(ConfigData.instance.getUITipStr(11), Math.ceil((newRankData.goldMultiRate * 100 + 100)));\r\n                                UIUtil.loadResSprite(self.rankIconSprite, newRankData.url);\r\n                                self.refreshRankStar();\r\n                                if (isKing) {\r\n                                    //王者\r\n                                    self.kingNode.active = true;\r\n                                    self.kingLabel.string = 'x' + (newStar - newRankData.star);\r\n                                }\r\n                                self.refreshMultipGoldBtn();\r\n                            }, 700)\r\n                        })\r\n\r\n                        self.animAddStar.play()\r\n                    }\r\n                }\r\n\r\n                this.noTakeStarTips.active = true;\r\n                this.noTakeStarLabel.string = 'Congratulations! Get a rank star.'; //rankData.addStarRanks.length > 1 ? '恭喜获得前' + rankData.addStarRanks.length + '名，奖励1颗星' : ;\r\n            } else if (getStar === -1) {\r\n                this.blockNode.active = true;\r\n                if (!isLevelChange) {\r\n                    //正常掉星\r\n                    var shine = cc.sequence(cc.fadeOut(0.1), cc.fadeIn(0.1), cc.fadeOut(0.1), cc.fadeIn(0.1), cc.fadeOut(0.1), cc.fadeIn(0.1), cc.fadeTo(0.2, 150))\r\n                    if (wasKing) {\r\n                        this.kingStar.runAction(shine);\r\n                        //王者\r\n                        this.subRefreshCallback = () => {\r\n                            self.animSubStar.node.position = cc.v2(-45, 0);\r\n                            self.animSubStar.node.active = true;\r\n                            self.animSubStar.play();\r\n                            this.kingStar.active = true;\r\n                            self.animSubStar.once('finished', () => {\r\n                                self.animSubStar.node.active = false;\r\n                                self.kingLabel.string = 'x' + (newStar - newRankData.star);\r\n                                self.refreshMultipGoldBtn();\r\n                            })\r\n                        };\r\n                        this.protectCallback = () => {\r\n                            self.animProtectStar.node.position = cc.v2(-45, 0);\r\n                            self.animProtectStar.node.active = true;\r\n                            self.animProtectStar.play()\r\n                            self.kingLabel.string = 'x' + (self.oldStar - newRankData.star);\r\n                            setTimeout(() => {\r\n                                this.kingStar.active = true;\r\n                            }, 500)\r\n                        };\r\n                    } else {\r\n                        //普通段位\r\n                        var index = newStar - rankData.star;\r\n                        var shineStar = stars[index];\r\n                        shineStar.runAction(shine);\r\n                        this.subRefreshCallback = () => {\r\n                            self.animSubStar.node.position = shineStar.position;\r\n                            self.animSubStar.node.active = true;\r\n                            self.animSubStar.play();\r\n                            setTimeout(() => {\r\n                                shineStar.active = false;\r\n                                self.refreshMultipGoldBtn();\r\n                            }, 300)\r\n                        };\r\n\r\n                        this.protectCallback = () => {\r\n                            self.animProtectStar.node.position = shineStar.position;\r\n                            self.animProtectStar.node.active = true;\r\n                            self.animProtectStar.play()\r\n                            setTimeout(() => {\r\n                                shineStar.active = true;\r\n                            }, 500)\r\n                        }\r\n                    }\r\n                } else {\r\n                    //掉星降级\r\n                    var index = newStar - newRankData.star;\r\n                    var shineStar = stars[index] ? stars[index] : this.kingStar;\r\n\r\n                    this.subRefreshCallback = () => {\r\n                        self.animChangeLevel.node.active = true;\r\n                        self.animChangeLevel.play();\r\n                        self.rankNameLabel.string = newRankData.name;\r\n                        // self.multiplyRateLabel.string = 'coins x' + Math.ceil((newRankData.goldMultiRate * 100 + 100)) + '%';\r\n                        self.multiplyRateLabel.string = Tools.getStringByFormat(ConfigData.instance.getUITipStr(11), Math.ceil((newRankData.goldMultiRate * 100 + 100)));\r\n                        UIUtil.loadResSprite(self.rankIconSprite, newRankData.url);\r\n                        // AddEntitySystem.instance.loadRankSprite(self.rankIconSprite, newRankData.iconIndex);\r\n                        self.refreshRankStar();\r\n                        shineStar.active = true;\r\n                        if (wasKing) {\r\n                            self.kingNode.active = false;\r\n                            self.kingLabel.string = 'x' + (newStar - newRankData.star);\r\n                        }\r\n\r\n                        setTimeout(() => {\r\n                            self.animSubStar.node.position = shineStar.position;\r\n                            self.animSubStar.node.active = true;\r\n                            self.animSubStar.play();\r\n                            setTimeout(() => {\r\n                                shineStar.active = false;\r\n                                self.refreshMultipGoldBtn();\r\n                            }, 300)\r\n                        }, 1000)\r\n                    }\r\n\r\n                    this.protectCallback = () => {\r\n                        self.animChangeLevel.node.active = true;\r\n                        self.animChangeLevel.play();\r\n                    }\r\n                }\r\n\r\n\r\n                this.noTakeStarTips.active = true;\r\n                this.noTakeStarLabel.string = (rankData.subStarRanks[0] - 1 > 1) ? '未获得前' + (rankData.subStarRanks[0] - 1) + '名，失去1颗星' : '未获得第一名，失去1颗星';\r\n\r\n\r\n                var protectWay = ConfigData.instance.getProtectWayByCount(PlayerData.instance.dayProtectCount);\r\n                this.protectWay = protectWay;\r\n\r\n                var time = isLevelChange ? 500 : 1000;\r\n                setTimeout(() => {\r\n                    if (protectWay === 0 || protectWay === 1) {\r\n                        this.showPanelProtect(rankData, newRankData, isLevelChange, protectWay);\r\n                    } else {\r\n                        if (this.subRefreshCallback) {\r\n                            this.subRefreshCallback();\r\n                        }\r\n                        this.blockNode.active = false;\r\n                    }\r\n                }, time);\r\n            } else {\r\n                //不加星也不掉星\r\n                this.refreshMultipGoldBtn();\r\n            }\r\n\r\n            if (this.startRefresh) {\r\n                if (this.addStarCallback) this.addStarCallback();\r\n                this.world.showPanelTreasureBox()\r\n            }\r\n\r\n            // PlatformMgr.showMiniOpenDataContext();\r\n\r\n            // if(win) {\r\n            // AdvertMgr.instance.showBanner();\r\n            // } else {\r\n            //     this.queeNode.active = true;\r\n            // }\r\n            // cc.director.preloadScene(\"Battle\");\r\n        }\r\n    },\r\n\r\n\r\n    refreshData: function (isProtect) {\r\n        const self = this;\r\n        PlayerData.instance.rankStar = self.curStar;\r\n        PlayerData.instance.oldRankData = isProtect ? ConfigData.instance.getRankDataByStar(self.curStar) : PlayerData.instance.rankData;\r\n\r\n        var newRankData = ConfigData.instance.getRankDataByStar(self.curStar);\r\n        if (PlayerData.instance.rankData !== newRankData) {\r\n            PlayerData.instance.rankData = newRankData;\r\n            if (newRankData.unlockMap) {\r\n                PlayerData.instance.newMap = newRankData.unlockMap;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        PlatformMgr.setUserCloudStorage(PlayerData.instance.rankStar);\r\n    },\r\n\r\n    refreshRankStar() {\r\n        var rankData = ConfigData.instance.getRankDataByStar(this.curStar);\r\n        var stars = this.starNodes;\r\n        var noStars = this.noStarNodes;\r\n        var interval = 40 / rankData.levelUpStar + 20;\r\n        for (let i = 0; i < 5; i++) {\r\n            var xPos = i * interval * 2 - interval * (rankData.levelUpStar - 1);\r\n            var isGet = this.curStar > rankData.star + i;\r\n            var isShow = i < rankData.levelUpStar;\r\n            if (stars[i]) {\r\n                stars[i].active = isGet && isShow ? true : false;\r\n                if (rankData.levelUpStar === 1) {\r\n                    stars[i].x = 0;\r\n                } else {\r\n                    stars[i].x = xPos\r\n                }\r\n            }\r\n            if (noStars[i]) {\r\n                noStars[i].active = isShow ? true : false;\r\n                if (rankData.levelUpStar === 1) {\r\n                    noStars[i].x = 0;\r\n                } else {\r\n                    noStars[i].x = xPos;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    restartGame: function () {\r\n        if (this.hasGet) return;\r\n        this.hasGet = true;\r\n        var param = {\r\n            count: this.goldCount,\r\n            isMore: this.isMore,\r\n            isLucky: this.isLucky,\r\n            multip: this.multip,\r\n        }\r\n        // console.log(param)\r\n        PlayerData.instance.updateGold(this.goldCount);\r\n        PlayerData.instance.showGold -= this.goldCount;\r\n\r\n        this.world.uiMgr.showGetMoneyEffect(param);\r\n        // this.world.uiMgr.showTips('获得金币x' + this.goldCount);\r\n\r\n        // if (PlayerData.instance.canShowMultAgain() && !this.isLucky && this.win) {\r\n        //     if (this.isMore) {\r\n        //         this.fiveMultIcon.active = true;\r\n        //         this.tenMultIcon.active = false;\r\n        //         this.showMultAgain(this.goldCount, 5);\r\n        //     } else {\r\n        //         this.fiveMultIcon.active = false;\r\n        //         this.tenMultIcon.active = true;\r\n        //         this.showMultAgain(this.goldCount, 10);\r\n        //     }\r\n        // } else {\r\n        this.world.restartGame();\r\n        // }\r\n        // this.world.restartGame();\r\n        // AdvertMgr.instance.destoryBanner();\r\n        // PlatformMgr.closeMiniOpenDataContext();\r\n        // if (PlayerData.instance.playCount % 2 === 0) \r\n        {\r\n            AdvertMgr.instance.showInterstitial();\r\n        }\r\n    },\r\n    // update (dt) {},\r\n\r\n    showMultAgain: function (count, mult) {\r\n        this.resultNode.active = false;\r\n        this.panelMultAgain.active = true;\r\n        // this.multAgainMult = mult;\r\n        this.multAgainCount = count * mult;\r\n        this.multAgainGoldLabel.string = this.multAgainCount;\r\n\r\n        var stage = ConfigData.instance.getCurStageByPrizeCount(PlayerData.instance);\r\n        var func = (hasAdver) => {\r\n            this.multAgainAdverIcon.active = hasAdver;\r\n            this.multAgainShareIcon.active = !hasAdver;\r\n            if (hasAdver) {\r\n                AdvertMgr.instance.openAdver(AdverType.MultipAgain);\r\n            }\r\n        }\r\n\r\n        switch (stage) {\r\n            case StageType.Free:\r\n            case StageType.Share:\r\n                func(false);\r\n                break;\r\n            case StageType.Adver:\r\n                AdvertMgr.instance.loadAdver(AdverType.MultipAgain, func);\r\n                break;\r\n        }\r\n\r\n    },\r\n\r\n    onMultAgainBtnClick: function () {\r\n        var self = this;\r\n        var multipCallback = (success) => {\r\n            if (success) {\r\n                var count = this.multAgainCount;\r\n                PlayerData.instance.resetDayMultAgainCDCount(ConfigData.instance.clientData.dayMultAgainCDCount);\r\n                PlayerData.instance.updateGold(count);\r\n                PlayerData.instance.showGold -= count;\r\n                var param = {\r\n                    count: count,\r\n                    isMore: false,\r\n                    isLucky: true,\r\n                    // multip: this.multAgainMult,\r\n                }\r\n                this.world.uiMgr.showGetMoneyEffect(param);\r\n                this.world.uiMgr.showTips(Tools.getStringByFormat(ConfigData.instance.getUITipStr(17), count))\r\n                this.world.restartGame();\r\n            }\r\n        }\r\n\r\n        if (this.multAgainShareIcon.active) {\r\n            this.showMultAgainShare(multipCallback);\r\n        } else if (this.multAgainAdverIcon.active) {\r\n            this.showMultAgainAdvert(multipCallback);\r\n        } else {\r\n            multipCallback(true)\r\n        }\r\n    },\r\n\r\n    onCLoseMultAgain: function () {\r\n        this.panelMultAgain.active = false;\r\n        PlayerData.instance.resetDayMultAgainCDCount(ConfigData.instance.clientData.dayMultAgainCDCount);\r\n        PlayerData.instance.updateDayMultAgainCloseCount();\r\n        this.world.restartGame();\r\n    },\r\n\r\n    showMultAgainShare: function (multipCallback) {\r\n        ShareMgr.share(ShareType.MultipAgain, multipCallback)\r\n    },\r\n\r\n    showMultAgainAdvert: function (multipCallback) {\r\n        var self = this;\r\n        // 打开广告失败时回调,失败回调\r\n        var errFunc = () => {\r\n            self.showMultAgainShare(multipCallback);\r\n        }\r\n        AdvertMgr.instance.showAdver(AdverType.MultipAgain, multipCallback, errFunc);\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n    onShareBtnClick: function () {\r\n        const self = this;\r\n        ShareMgr.share(ShareType.WIN, (isSuccess) => {\r\n            if (isSuccess) {\r\n                self.world.uiMgr._GSGame.showTips(1);\r\n            }\r\n        });\r\n    },\r\n\r\n\r\n    onMultiplyBtnClick: function () {\r\n        var self = this;\r\n        var multipCallback = (success) => {\r\n            if (success) {\r\n                self.goldCount = self.finalGoldCount;\r\n                self.multip = 3;\r\n                self.isMore = true;\r\n                self.restartGame();\r\n            }\r\n        }\r\n\r\n        if (this.multipShareIcon.active) {\r\n            this.showShare(multipCallback);\r\n        } else if (this.multipAdverIcon.active) {\r\n            // AdvertMgr.instance.destoryBanner();\r\n            this.showAdvert(multipCallback);\r\n        } else {\r\n            multipCallback(true)\r\n        }\r\n\r\n    },\r\n\r\n    showShare: function (multipCallback) {\r\n        ShareMgr.share(ShareType.MultipGold, multipCallback)\r\n    },\r\n\r\n    showAdvert: function (multipCallback) {\r\n        var self = this;\r\n        // 打开广告失败时回调,失败回调\r\n        var errFunc = () => {\r\n            self.showShare(multipCallback);\r\n        }\r\n\r\n        AdvertMgr.instance.fireBaseEvent(\"click_adv_btn\",\"position_id\",ConfigData.instance.getAdvertUnitId(AdverType.MultipGold));\r\n        AdvertMgr.instance.showAdver(AdverType.MultipGold, multipCallback, errFunc);\r\n    },\r\n\r\n\r\n    onContinueBtnClick: function () {\r\n        this.rankNode.active = false;\r\n        this.resultNode.active = true;\r\n        this.startRefresh = true;\r\n        if (this.addStarCallback) this.addStarCallback();\r\n        this.world.showPanelTreasureBox()\r\n    },\r\n\r\n    update(dt) {\r\n        if (this.startRefresh) {\r\n            // this.updateRankBar(dt);\r\n            if (this.allGoldNode.active) {\r\n                this.updateLuckyBar(dt);\r\n            }\r\n        }\r\n    },\r\n\r\n    updateRankBar(dt) {\r\n        if (this.oldStar === this.newStar) return;\r\n        var rankData = ConfigData.instance.getRankDataByStar(this.oldStar);\r\n        if (rankData.levelUpStar === 0) return;\r\n\r\n        var addStar = rankData.levelUpStar * dt * 1.5; //按固定比率增加，保证进度条的速度不变\r\n        if (this.getStar < rankData.levelUpStar) {\r\n            addStar = this.getStar * dt * 1.5;\r\n        }\r\n        this.oldStar += addStar;\r\n\r\n        if (this.getStar > 0) {\r\n            if (this.oldStar > this.newStar) {\r\n                this.oldStar = this.newStar;\r\n            }\r\n        } else {\r\n            if (this.oldStar < this.newStar) {\r\n                this.oldStar = this.newStar;\r\n            }\r\n        }\r\n\r\n        rankData = ConfigData.instance.getRankDataByStar(this.oldStar);\r\n        if (rankData.name !== this.rankNameLabel.string) {\r\n            this.rankNameLabel.string = rankData.name;\r\n            UIUtil.loadResSprite(this.rankIconSprite, rankData.url);\r\n            // AddEntitySystem.instance.loadRankSprite(this.rankIconSprite, rankData.iconIndex);\r\n        }\r\n\r\n        if (rankData.levelUpStar === 0) {\r\n            this.bar.width = 300;\r\n        } else {\r\n            this.bar.width = (this.oldStar - rankData.star) / rankData.levelUpStar * 300;\r\n        }\r\n    },\r\n\r\n    updateLuckyBar(dt) {\r\n        if (this.luckyBar.width === this.finalLuckyBarWidth) return;\r\n        this.luckyBar.width += 100 * dt;\r\n        if (this.luckyBar.width > this.finalLuckyBarWidth) {\r\n            this.luckyBar.width = this.finalLuckyBarWidth\r\n        }\r\n    },\r\n\r\n    onLuckyRewardBtnClick: function () {\r\n        this.luckyRewardNode.active = true;\r\n        this.onLuckyMultipBtnClick();\r\n    },\r\n\r\n    onLuckyMultipBtnClick: function () {\r\n        this.blockNode.active = true;\r\n        //点击广告，获取随机倍数加金币，播放动画，返回主页 Tools.getRandomInt(5, 10) \r\n        const self = this;\r\n        // 关闭广告时回调\r\n        var closeFunc = (success) => {\r\n            if (success) {\r\n                self.isLucky = true;\r\n                var luckyRewardMultips = ConfigData.instance.clientData.luckyRewardMultips;\r\n                var multip = Tools.getRandomInt(5, 10);\r\n                if (luckyRewardMultips[PlayerData.instance.luckyRewardCount]) {\r\n                    multip = Tools.getRandomInt(luckyRewardMultips[PlayerData.instance.luckyRewardCount], 10);\r\n                    PlayerData.instance.updateLuckyRewardCount();\r\n                }\r\n                self.multip = multip;\r\n                self.finalGoldCount = multip * self.goldCount;\r\n\r\n                self.lotteryAnim.play('ani-lucky-slot');\r\n                var xNodes = self.xNode.children;\r\n                self.multNode.y = 2590;\r\n                var str = multip + '\\n\\r';\r\n                xNodes[0].x = multip === 10 ? 0 : 40;\r\n                xNodes[0].y = 0;\r\n                for (let i = 1; i < 10; i++) {\r\n                    let mult = Tools.getRandomInt(5, 10)\r\n                    str += mult + '\\n\\r'\r\n                    if (xNodes[i]) {\r\n                        xNodes[i].x = mult === 10 ? 0 : 40;\r\n                        xNodes[i].y = i * -259;\r\n                    }\r\n                }\r\n                str += 10 + '\\n\\r'\r\n                xNodes[10].x = 0;\r\n                xNodes[10].y = -2590;\r\n\r\n                self.multLabel.string = str;\r\n\r\n                var delay = cc.delayTime(0.3);\r\n                var action = cc.moveTo(3, cc.v2(0, 0)).easing(cc.easeBounceOut());\r\n                var callFunc = cc.callFunc(() => {\r\n                    PlayerData.instance.setLuckyRewardData(0);\r\n                    self.goldCount = self.finalGoldCount;\r\n                    setTimeout(() => {\r\n                        self.restartGame();\r\n                        self.blockNode.active = false;\r\n                    }, 500)\r\n                })\r\n                self.multNode.runAction(cc.sequence(delay, action, callFunc))\r\n            } else {\r\n                self.blockNode.active = false;\r\n            }\r\n        }\r\n\r\n        if (this.luckyShareIcon.active) {\r\n            this.showLuckyShare(closeFunc);\r\n        } else if (this.luckyAdverIcon.active) {\r\n            this.showLuckyAdver(closeFunc);\r\n        } else {\r\n            closeFunc(true)\r\n        }\r\n\r\n    },\r\n\r\n    showLuckyShare: function (closeFunc) {\r\n        ShareMgr.share(ShareType.MultipGold, closeFunc);\r\n    },\r\n\r\n    showLuckyAdver: function (closeFunc) {\r\n        const self = this;\r\n        // 打开广告失败时回调,失败回调\r\n        var errFunc = () => {\r\n            self.showLuckyShare(closeFunc);\r\n        }\r\n\r\n        AdvertMgr.instance.showAdver(AdverType.MultipGold, closeFunc, errFunc);\r\n    },\r\n\r\n\r\n\r\n\r\n    onCloseLuckyNodeBtnClick: function () {\r\n        this.luckyRewardNode.active = false;\r\n    },\r\n\r\n    onProtectBtnClick: function () {\r\n        var self = this;\r\n        // 关闭回调\r\n        var closeFunc = function (success) {\r\n            if (success) {\r\n                self.noTakeStarTips.active = false;\r\n                self.protectNode.active = false;\r\n                self.curStar = self.oldStar;\r\n                self.refreshData(true);\r\n                PlayerData.instance.updateDayProtectCount()\r\n                if (self.protectCallback) {\r\n                    self.protectCallback();\r\n                    setTimeout(() => {\r\n                        self.refreshMultipGoldBtn();\r\n                    }, 500);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (this.protectWay === 0) {\r\n            self.showProtectShare(closeFunc);\r\n        } else {\r\n            self.showProtectAdver(closeFunc);\r\n        }\r\n    },\r\n\r\n    showProtectShare: function (closeFunc) {\r\n        ShareMgr.share(ShareType.ProtectStar, closeFunc);\r\n    },\r\n\r\n    showProtectAdver: function (closeFunc) {\r\n        const self = this;\r\n        var errFunc = function () {\r\n            self.showProtectShare(closeFunc);\r\n        };\r\n        AdvertMgr.instance.showAdver(AdverType.ProtectStar, closeFunc, errFunc);\r\n    },\r\n\r\n    onReduceProtectBtnClick: function () {\r\n        this.protectNode.active = false;\r\n        if (this.subRefreshCallback) {\r\n            this.subRefreshCallback();\r\n        }\r\n    },\r\n\r\n    showPanelProtect: function (curData, nextData, isLevelDown, protectWay) {\r\n        this.protectNode.active = true;\r\n        this.blockNode.active = false;\r\n        this.protectStarNode.active = isLevelDown ? false : true;\r\n        this.protectLevelNode.active = isLevelDown ? true : false;\r\n        this.protectRankLabel.node.parent.y = isLevelDown ? -75 : -110;\r\n        this.noProtectRankLabel.node.parent.y = isLevelDown ? -75 : -110;\r\n        if (!isLevelDown) {\r\n            this.refreshProtectRankStar(this.protectStarNodes, this.oldStar);\r\n            this.refreshProtectRankStar(this.noProtectStarNodes, this.curStar);\r\n        }\r\n\r\n        this.protectKingNode.active = nextData.levelUpStar === 0 ? true : false;\r\n        this.protectKingLabel.string = 'x' + (this.oldStar - nextData.star);\r\n        this.noProtectKingNode.active = nextData.levelUpStar === 0 ? true : false;\r\n        this.noProtectKingLabel.string = 'x' + (this.curStar - nextData.star);\r\n\r\n        this.protectRankLabel.string = curData.name;\r\n        this.noProtectRankLabel.string = nextData.name;\r\n        UIUtil.loadResSprite(this.protectRankSprite, curData.url);\r\n        // AddEntitySystem.instance.loadRankSprite(this.protectRankSprite, curData.iconIndex);\r\n        UIUtil.loadResSprite(this.noProtectRankSprite, nextData.url);\r\n        // AddEntitySystem.instance.loadRankSprite(this.noProtectRankSprite, nextData.iconIndex);\r\n\r\n        this.protectShareIcon.active = protectWay === 0 ? true : false;\r\n        this.protectAdverIcon.active = protectWay === 1 ? true : false;\r\n    },\r\n\r\n\r\n    refreshProtectRankStar: function (starNode, starCount) {\r\n        var rankData = ConfigData.instance.getRankDataByStar(starCount);\r\n        var stars = starNode[1].children;\r\n        var noStars = starNode[0].children;\r\n        var interval = 140 / rankData.levelUpStar;\r\n        for (let i = 0; i < stars.length; i++) {\r\n            var isGet = starCount > rankData.star + i;\r\n            var isShow = i < rankData.levelUpStar;\r\n            if (stars[i]) {\r\n                stars[i].active = isGet && isShow ? true : false;\r\n                if (rankData.levelUpStar === 1) {\r\n                    stars[i].x = 0;\r\n                    stars[i].y = 0;\r\n                } else {\r\n                    stars[i].x = i * interval * 2 - interval * (rankData.levelUpStar - 1);\r\n                    if (stars[i].x === 0) {\r\n                        stars[i].y = 0;\r\n                    } else {\r\n                        stars[i].y += (Math.abs(stars[i].x)) / 2 - 20;\r\n                    }\r\n                }\r\n            }\r\n            if (noStars[i]) {\r\n                noStars[i].active = isShow ? true : false;\r\n                noStars[i].x = stars[i].x;\r\n                noStars[i].y = stars[i].y;\r\n            }\r\n        }\r\n    },\r\n\r\n    refreshMultipGoldBtn: function () {\r\n        this.allGoldNode.active = true;\r\n    },\r\n});"]}