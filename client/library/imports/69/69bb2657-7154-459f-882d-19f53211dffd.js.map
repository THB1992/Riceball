{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\collide/assets\\scripts\\battle\\component\\collide\\HeroCollisionWallListener.js"],"names":["HeroCollisionWallListener","cc","Class","extends","Component","properties","collider","CircleCollider","_wallCollisionCount","onLoad","node","getComponent","on","radiusChange","detail","radius","onCollisionEnter","noticeWallCollision","onCollisionExit","isCollision","emit"],"mappings":";;;;;;AACA,IAAMA,4BAA4BC,GAAGC,KAAH,CAAS;AACvCC,aAASF,GAAGG,SAD2B;;AAGvCC,gBAAY;AACRC,kBAAUL,GAAGM,cADL;AAERC,6BAAqB;AAFb,KAH2B;;AAQvCC,YAAQ,kBAAY;AAChB,aAAKH,QAAL,GAAgB,KAAKI,IAAL,CAAUC,YAAV,CAAuBV,GAAGM,cAA1B,CAAhB;AACA,aAAKG,IAAL,CAAUE,EAAV,CAAa,cAAb,EAA6B,KAAKC,YAAlC,EAAgD,IAAhD;AACH,KAXsC;;AAavCA,kBAAc,sBAAUC,MAAV,EAAkB;AAC5B,aAAKR,QAAL,CAAcS,MAAd,GAAuBD,MAAvB;AACH,KAfsC;;AAiBvCE,sBAAkB,4BAAW;AACzB,YAAG,KAAKR,mBAAL,KAA6B,CAAhC,EAAmC;AAC/B,iBAAKS,mBAAL,CAAyB,IAAzB;AACH;AACD,aAAKT,mBAAL;AACH,KAtBsC;;AAwBvCU,qBAAiB,2BAAY;AACzB,aAAKV,mBAAL;AACA,YAAG,KAAKA,mBAAL,KAA6B,CAAhC,EAAmC;AAC/B,iBAAKS,mBAAL,CAAyB,KAAzB;AACH;AACJ,KA7BsC;;AA+BvCA,yBAAqB,6BAAUE,WAAV,EAAuB;AACxC,aAAKT,IAAL,CAAUU,IAAV,CAAe,eAAf,EAAgCD,WAAhC;AACH;AAjCsC,CAAT,CAAlC","file":"HeroCollisionWallListener.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\collide","sourcesContent":["\nconst HeroCollisionWallListener = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        collider: cc.CircleCollider,\n        _wallCollisionCount: 0,\n    },\n\n    onLoad: function () {\n        this.collider = this.node.getComponent(cc.CircleCollider);\n        this.node.on('radiusChange', this.radiusChange, this)\n    },\n\n    radiusChange: function (detail) {\n        this.collider.radius = detail;\n    },\n\n    onCollisionEnter: function (){\n        if(this._wallCollisionCount === 0) {\n            this.noticeWallCollision(true);\n        }\n        this._wallCollisionCount ++;\n    },\n\n    onCollisionExit: function () {\n        this._wallCollisionCount --;\n        if(this._wallCollisionCount === 0) {\n            this.noticeWallCollision(false);\n        }\n    },\n    \n    noticeWallCollision: function (isCollision) {\n        this.node.emit('wallCollision', isCollision);\n    }\n});"]}