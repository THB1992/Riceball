{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity/assets\\scripts\\battle\\entity\\EntityWorld.js"],"names":["Tools","require","GameData","ConfigData","PlayerData","CollisionEventManager","KnifeState","NoticeType","SoundID","AudioEngine","PlatformMgr","TaskType","ItemType","AdvertMgr","AddEntitySystem","StageType","CustomFunnelEvent","cc","Class","extends","Component","properties","followCameraCtrl","Node","mapWidth","mapHeight","localPlayer","players","knifes","walls","addEntityNode","UIMgrNode","audioNode","poolMgr","tempNode","addBuffTime","addBuffTimeLimit","addBoxTime","addBoxTimeLimit","guideWall","isDoHeartbeat","_heartbeatSendTimestamp","heartbeatInterval","m_alreadyStart","onLoad","instance","destoryBanner","isLoading","showGuideFlag","checkDaySpan","initConfigData","isGuide","hawkeye_getConfig","settings","shareSettings","isInReview","isIosApp","Number","parseInt","reviewVersion","clientVersionCode","reviewVersionAndroid","revive_Ways","undefined","clientData","reviveWays","jsonToArray","multipGold_Ways","multipGoldWays","protectStar_Ways","protectStarWays","growLevelUp_Ways","arr","i","length","data","growLevelUpWays","splitToNumList","adverTrySkinLimit","adverReviveLimit","stopAdverToShare","multipGoldLimit","frenzyLimit","stagePrecents","dayShowWayLimit","share_random","share_data","dayMultAgainCDCount","updateDayMultAgainCDCountFlag","resetDayMultAgainCDCount","dayMultAgainMinPlayCount","adverReviveFailToShare","hideTrySkin","hideAddTop","tempHideSpecialSkin","hideSpecialSkin","judgeArea","judgeAreaTimeInterval","timeRange","curDay","getCurWeekDay","isShowLog","console","log","JSON","stringify","isEnvironmentPublish","arrContains","getAreaInfo","city","province","shareScoreConfig","defaultShareScore","secondDayMinShareScore","maxShareScore","dayRefreshShareScore","getShareScore","shareScore","isFirstDay","isSecondDay","Math","min","updateDayRefreshShareScore","initMapParam","gameTime","width","screenWidth","height","screenHeight","worldRect","rect","_poolMgr","getComponent","cleanUp","init","addEntitySys","getOrAddComponent","mapType","uiMgr","setUiMgr","getInviteInfo","datas","inviteDatas","refreshRedDot","taskMgr","node","audio","map","addMap","AddLocalPlayer","addPlayerRankItem","setKillCallback","killCount","refreshTaskInGame","setChangeKnifeCountCallback","num","addLocalPlayerKnifes","curEquipHeroSkin","curEquipKnifeSkin","cameraZoomCtrl","followCameraCtrlCmp","getInstance","heroCollisionHandleSystem","knifeCollisionHandleSystem","pickKnifeCollisionHandleSystem","pickBuffCollisionHandleSystem","attackBoxCollisionHandleSystem","killMsgListener","cameraZoomSys","playerRankSystem","gameRuleSystem","heroReviveSystem","playerDistanceSystem","wallRuleSystem","on","throwKnife","dodgeKnife","destroyDefenceKnife","onBoxDestroy","onNeZhaAttack","checkEnemyTime","checkKnifeTime","checkBlockTime","checkDefenceTime","addKnifeTime","logUseTime","isFristGame","notifyFunnelEvent","World_Init","guideLoad","normalLoad","startLoadPrefab","onStartBtnClick","refreshPanel","removeKnifes","remotePlayers","AddRemotePlayer","index","player","knife","knifeMax","active","followPlayer","count","knifeSkin","initKnifeCount","localPlayerKnifes","AddKnife","knifeInit","aiPlayerKnifes","closeKnifes","landKnifes","guideSystem","rankData","name","playerCount","aiSkinMax","aiHeroSkinRandomCount","aiHeroSkinMax","addHeroPosArr","camera","setDeadCallback","pos","addDeadKnifes","extraKnifeCount","skin","AddWall","blocks","AddBlock","blockNum","initAddBuffParam","initAddBoxParam","World_Finish","reportAnalytics","touchStartGame","self","oldRankData","daySign","showPanelSignFlag","levelUp","id","offlineFlag","offlineGoldTime","getReceiveOfflineGoldTime","offlineGoldMultipLimit","goldStage","getCurStage","playCount","hasRepay","repayData","getRepayDataByRank","reward","updateRepay","doLevelUp","callback","showPanelLevelUp","doBuySkin","showPanelBuySkin","doSign","showPanelSign","doTask","refreshTaskInHome","doOffline","showOfflineMultip","doRepay","showPanelRepay","doUnlockGrow","showUnlockGrow","doAddTop","showPanelAddTop","updateDayShowTop","doDailyTask","showPanelDailyTask","doSubscribe","showPanelSubscribe","doSubscribeReward","showPanelSubscribeReward","doEvaulate","showPanelEvaulate","doDance","showWatchAdverCount","func12","canShowPanelEvaulate","func11","canShowPanelBuySkin","func10","func9","showSubscribeFlag","func8","showPanelHolidayRank","func7","Share","canShowPanelSign","func6","canShowPanelDailyTask","func5","canShowPanelAddTop","isIOS","func4","func3","func2","func1","func0","getHolidayWorldReward","showPanelWorldReward","func","updateWorldRewardDetail","getHolidayPKReward","showPanelPKReward","event","fireBaseEvent","hideUserInfoBtn","isSecGame","GameTwo","bornFrenzyLimit","canAddBornFrenzy","onStart","dayPlayCount","onLoadMatch","stage","Free","trySkinData","getTrySkinData","trySkinMinPlayCount","curCount","interval","getItemOrFinalItem","trySkinTimeInterval","trySkinCount","canTry","lastTryPlayCount","canTry2","continuityLoseCount","getRandomTrySuitData","updateContinuityLoseCount","setTrySkinData","playerParent","parent","followPlayerParent","hData","kData","showPanelTrySuit","heroData","knifeData","activeGoldNode","activeDiamondNode","addExtraKnife","onEquipHeroSkin","onEquipKnifeSkin","changeLocalKnifesCount","rate","group","followPlayerScale","changeScaleMultip","heroScale","y","success","heroSkin","showActiveSuitEffect","isHeroSkin","lastTrySkinType","HERO_SKIN","getRandomTryKnifeSkinData","ownKnifeSkins","tryKnifeSkinMinQuality","KNIFE_SKIN","getRandomTryHeroSkinData","ownHeroSkins","tryHeroSkinMinQuality","showPanelTryOut","str","getStringByFormat","getUITipStr","showTips","UI_Match","showPanelMatch","Rect","myCamera","clear","closePanelMatch","startGame","startCountDown","setLocalHero","callF","_defenceTips","updateGameLogic","showPanelBuySkinFlag","GameOverPanel","stopControl","openGameOverPanel","onGameOver","rank","beKilled","setTimeout","showPanelVictory","First_Game_Finish","guideGameOverCallF","reviveCallF","openRevivePanel","isRevive","isFrenzy","revive","onContinue","showReviveNotice","waitToDie","die","reviveCount","heroReviveCallF","heroShowRebornCallF","rebornEffect","onStartGame","playSound","Start","First_Game_Start","update","dt","_removeEntity","_updateGameLogic","_updateHideNameLogic","_updateNoticeLogic","_updateAddKnifeLogic","_updateShowTaskLogic","_updateAddBuffLogic","_updateAddBoxLogic","_updateGuideNoticeLogic","_checkUpdateUserData","_reportHeart","j","indexOf","splice","myGuideComp","shouldRemove","push","AddTempKnife","flag_30","showImportantNotice","Time_30","flag_10","Time_10","flag_3","showCountDownNode","isDead","isInView","addSpecialNotice","Enemy","isInMyView","knifeStateComp","state","Normal","Knife","block","Block","isDefence","Defence","addKnifeInterval","setInView","isShowTask","showList","showTaskNotice","canAddBuff","buffs","AddBuff","addBuffId","position","getRandomPosNearLocalPlayer","scale","action","scaleTo","easing","easeBackOut","runAction","canAddBox","boxes","AddBox","addBoxId","_updatePowerArrowLogic","refreshPowerArrow","closePowerArrow","knfieCount","knivesCmp","knives","closeTips","mapId","newMap","canUseMapDatas","mapDatas","mapPool","getRandomItemByWeight","canUseBuffDatas","buffDatas","buffPool","buffId","getRandomInt","refreshTime","totalWeight","boxWeights","canUseBoxDatas","boxDatas","boxPool","boxId","restartGame","stopAllSound","manager","director","getCollisionManager","_contacts","_colliders","closeGameOverPanel","openPanelKeyCount","BackToHome","gameOver","posInMyView","relativePos","convertToNodeSpaceAR","zoomRatio","x","detail","centerPos","rotation","convertToWorldSpaceAR","params","getCenterParam","addCollisionEffect","effect","addDodgeEffect","addDestroyDefenceEffect","addNeZhaEffect","reduceMapSize","v","setMapSize","refreshWalls","emit","isOwn","needSave","needChangeKnife","updateKnifeSkin","changeKnifeSkin","emitAllKnivesChangeSkin","refreshProperty","updateHeroSkin","changeSkin","changeEffectColor","refreshAIHeroSkin","addKnifes","_changeLocalKnifesCountReal","owner","destroy","itemNode","playerNode","minWidth","logicPlayer","radius","minHeight","maxWidth","maxHeight","randomPos","v2","getPositiveOrNegative","nearPos","add","finalPos","checkDelayUpdateData","updateUserData","updatePKRankTime","pkSurplusTime","ePos","createEffect","addShowKnifeEffect","addRebornEffect","timestamp","getMilliTime","hawkeye_report_heartbeat","info","addBoxKnife","isLocal","addBoxGold","addBoxBuff","param","epos","cos","PI","sin","activeNode","opacity","knifeColliderNodeCtrl","attackCollider","notColliderFlag","showKnife","updateGold","showGold","offset","sub","mul","showGetMoneyEffect","isMore","isLucky","weight","landNode","getReward","item","type","MONEY","isOwnHeroSkin","addHeroSkin","itemData","showReward","isOwnKnifeSkin","addKnifeSkin","ZONG_ZI","updateZongZi","showPanelTreasureBox","canShowPanelTreasureBox","updateKeyCount","showPanelKeyCount"],"mappings":"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","file":"EntityWorld.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity","sourcesContent":["/**\n * @fileoverview 世界实体\n * @author meifan@gameley.cn (梅凡)\n */\n\nconst Tools = require('Tools');\nconst GameData = require('GameData');\nconst ConfigData = require('ConfigData');\nconst PlayerData = require('PlayerData');\nconst CollisionEventManager = require('CollisionEventManager');\nconst KnifeState = require('Types').KnifeState;\nconst NoticeType = require('Types').NoticeType;\nconst SoundID = require('Types').SoundID;\nconst AudioEngine = require('AudioEngine');\nconst PlatformMgr = require('PlatformMgr');\nconst TaskType = require('Types').TaskType;\nconst ItemType = require('Types').ItemType;\nconst AdvertMgr = require('AdvertMgr');\nconst AddEntitySystem = require('AddEntitySystem');\nconst StageType = require('Types').StageType;\nconst CustomFunnelEvent = require('Types').CustomFunnelEvent;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        followCameraCtrl: cc.Node,\n        mapWidth: 0,\n        mapHeight: 0,\n        localPlayer: null,\n        players: [],\n        knifes: [],\n        walls: [],\n        addEntityNode: cc.Node,\n        UIMgrNode: cc.Node,\n        audioNode: cc.Node,\n        poolMgr: cc.Node,\n        tempNode: cc.Node,\n        addBuffTime: 0,\n        addBuffTimeLimit: 0,\n        addBoxTime: 0,\n        addBoxTimeLimit: 0,\n\n        guideWall: cc.Node,\n\n        isDoHeartbeat: true,\n        _heartbeatSendTimestamp: 0,\n        heartbeatInterval: 30000,\n\n        m_alreadyStart: false,\n    },\n\n    onLoad() {\n        AdvertMgr.instance.destoryBanner()\n\n        this.isLoading = true;\n        this.showGuideFlag = true;\n        PlayerData.instance.checkDaySpan();\n        PlayerData.instance.initConfigData();\n        this.isGuide = PlayerData.instance.isGuide;\n        this.m_alreadyStart = false;\n\n        PlatformMgr.hawkeye_getConfig((settings) => {\n            // if (GameData.instance.isShowLog()) {\n            // console.log('settings:' + JSON.stringify(settings));\n            // }\n            // TODO 分享使用下发的图片和文字\n            var shareSettings = settings ? settings : {};\n\n            GameData.instance.isInReview = PlatformMgr.isIosApp() ?\n                Number.parseInt(shareSettings.reviewVersion) === GameData.instance.clientVersionCode :\n                Number.parseInt(shareSettings.reviewVersionAndroid) === GameData.instance.clientVersionCode;\n\n            if (shareSettings.revive_Ways !== undefined) {\n                ConfigData.instance.clientData.reviveWays = Tools.jsonToArray(shareSettings.revive_Ways);\n            }\n            if (shareSettings.multipGold_Ways !== undefined) {\n                ConfigData.instance.clientData.multipGoldWays = Tools.jsonToArray(shareSettings.multipGold_Ways);\n            }\n            if (shareSettings.protectStar_Ways !== undefined) {\n                ConfigData.instance.clientData.protectStarWays = Tools.jsonToArray(shareSettings.protectStar_Ways);\n            }\n            if (shareSettings.growLevelUp_Ways !== undefined) {\n                var arr = Tools.jsonToArray(shareSettings.growLevelUp_Ways);\n                for (let i = 0; i < arr.length; i++) {\n                    var data = arr[i];\n                    ConfigData.instance.clientData.growLevelUpWays[i] = Tools.splitToNumList(data, '-');\n                }\n                // ConfigData.instance.clientData.growLevelUpWays = shareSettings.growLevelUp_Ways;\n            }\n\n            if (shareSettings.adverTrySkinLimit !== undefined) {\n                ConfigData.instance.clientData.adverTrySkinLimit = Tools.jsonToArray(shareSettings.adverTrySkinLimit);\n            }\n            if (shareSettings.adverReviveLimit !== undefined) {\n                ConfigData.instance.clientData.adverReviveLimit = Tools.jsonToArray(shareSettings.adverReviveLimit);\n            }\n\n            if (shareSettings.stopAdverToShare !== undefined) {\n                ConfigData.instance.clientData.stopAdverToShare = Number.parseInt(shareSettings.stopAdverToShare);\n            }\n\n            if (shareSettings.multipGoldLimit !== undefined) {\n                ConfigData.instance.clientData.multipGoldLimit = Tools.jsonToArray(shareSettings.multipGoldLimit);\n            }\n            if (shareSettings.frenzyLimit !== undefined) {\n                ConfigData.instance.clientData.frenzyLimit = Number.parseInt(shareSettings.frenzyLimit);\n            }\n            if (shareSettings.stagePrecents !== undefined) {\n                ConfigData.instance.clientData.stagePrecents = Tools.jsonToArray(shareSettings.stagePrecents);\n            }\n\n            if (shareSettings.dayShowWayLimit !== undefined) {\n                ConfigData.instance.clientData.dayShowWayLimit = Tools.jsonToArray(shareSettings.dayShowWayLimit);\n            }\n            if (shareSettings.share_random !== undefined) {\n                shareSettings.share_random = Tools.jsonToArray(shareSettings.share_random);\n            }\n            if (shareSettings.share_data !== undefined) {\n                shareSettings.share_data = Tools.jsonToArray(shareSettings.share_data);\n            }\n\n            if (shareSettings.dayMultAgainCDCount !== undefined) {\n                ConfigData.instance.clientData.dayMultAgainCDCount = Number.parseInt(shareSettings.dayMultAgainCDCount);\n                if (PlayerData.instance.updateDayMultAgainCDCountFlag) {\n                    PlayerData.instance.updateDayMultAgainCDCountFlag = false;\n                    PlayerData.instance.resetDayMultAgainCDCount(ConfigData.instance.clientData.dayMultAgainCDCount);\n                }\n            }\n            if (shareSettings.dayMultAgainMinPlayCount !== undefined) {\n                ConfigData.instance.clientData.dayMultAgainMinPlayCount = Number.parseInt(shareSettings.dayMultAgainMinPlayCount)\n            }\n\n            if (shareSettings.adverReviveFailToShare !== undefined) {\n                ConfigData.instance.clientData.adverReviveFailToShare = Number.parseInt(shareSettings.adverReviveFailToShare)\n            }\n\n            if (shareSettings.hideTrySkin !== undefined) {\n                ConfigData.instance.clientData.hideTrySkin = Number.parseInt(shareSettings.hideTrySkin);\n            }\n\n            if (shareSettings.hideAddTop !== undefined) {\n                ConfigData.instance.clientData.hideAddTop = Number.parseInt(shareSettings.hideAddTop);\n            }\n\n\n\n\n            let tempHideSpecialSkin = true;\n            if (shareSettings.hideSpecialSkin !== undefined) {\n                tempHideSpecialSkin = Number.parseInt(shareSettings.hideSpecialSkin);\n            }\n\n\n            if (shareSettings.judgeArea !== undefined) {\n                ConfigData.instance.clientData.judgeArea = Number.parseInt(shareSettings.judgeArea);\n            }\n            if (shareSettings.judgeAreaTimeInterval !== undefined) {\n                ConfigData.instance.clientData.judgeAreaTimeInterval = shareSettings.judgeAreaTimeInterval;\n            }\n            var timeRange = Tools.splitToNumList(ConfigData.instance.clientData.judgeAreaTimeInterval)\n            var curDay = PlayerData.instance.getCurWeekDay();\n            if (GameData.instance.isShowLog()) {\n                console.log('————————地域判断时间段配置：', JSON.stringify(timeRange));\n                console.log('————————当前周几：', curDay);\n            }\n\n            if (ConfigData.instance.clientData.judgeArea && GameData.instance.isEnvironmentPublish() && Tools.arrContains(timeRange, curDay) && (!tempHideSpecialSkin)) {\n                PlatformMgr.getAreaInfo((data) => {\n                    if (data.city) {\n                        switch (data.city) {\n                            case '北京市':\n                            case '上海市':\n                            case '广州市':\n                            case '深圳市':\n                                tempHideSpecialSkin = true;\n                                break;\n                        }\n                    } else if (data.province) {\n                        switch (data.province) {\n                            case '北京市':\n                            case '上海市':\n                            case '广东省':\n                                tempHideSpecialSkin = true;\n                                break;\n                        }\n                    }\n                    ConfigData.instance.clientData.hideSpecialSkin = tempHideSpecialSkin;\n                });\n            } else {\n                ConfigData.instance.clientData.hideSpecialSkin = tempHideSpecialSkin;\n            }\n\n            //分享积分相关\n            if (shareSettings.shareScoreConfig !== undefined) {\n                var arr = Tools.splitToNumList(shareSettings.shareScoreConfig);\n                if (GameData.instance.isShowLog()) {\n                    console.log('————————分享积分配置：', JSON.stringify(arr));\n                }\n                ConfigData.instance.clientData.defaultShareScore = arr[0];\n                ConfigData.instance.clientData.secondDayMinShareScore = arr[1];\n                ConfigData.instance.clientData.maxShareScore = arr[2];\n            }\n\n            if (!PlayerData.instance.dayRefreshShareScore) {\n                PlatformMgr.getShareScore((shareScore) => {\n                    var defaultShareScore = ConfigData.instance.clientData.defaultShareScore;\n                    var secondDayMinShareScore = ConfigData.instance.clientData.secondDayMinShareScore;\n                    var maxShareScore = ConfigData.instance.clientData.maxShareScore;\n\n                    if (PlayerData.instance.isFirstDay()) {\n                        shareScore = defaultShareScore;\n                        if (GameData.instance.isShowLog()) {\n                            console.log('————————新玩家，初始分享积分：', shareScore);\n                        }\n                    } else {\n                        if (shareScore < secondDayMinShareScore && PlayerData.instance.isSecondDay()) {\n                            shareScore = secondDayMinShareScore;\n                            if (GameData.instance.isShowLog()) {\n                                console.log('————————新玩家第二天，启用保底分享积分：', shareScore);\n                            }\n                        } else {\n                            shareScore = Math.min(shareScore, maxShareScore);\n                            if (GameData.instance.isShowLog()) {\n                                console.log('————————使用上一天分享积分：', shareScore);\n                            }\n                        }\n                    }\n                    PlayerData.instance.updateDayRefreshShareScore(shareScore)\n                })\n            }\n        });\n\n\n        this.mapWidth = GameData.instance.mapWidth;\n        this.mapHeight = GameData.instance.mapHeight;\n        this.initMapParam();\n\n        this.gameTime = GameData.instance.gameTime;\n\n        this.width = GameData.instance.screenWidth;\n        this.height = GameData.instance.screenHeight;\n        this.worldRect = new cc.rect(-this.width / 2, -this.height / 2, this.width, this.height);\n\n        var _poolMgr = this.poolMgr.getComponent('PoolMgr');\n        _poolMgr.cleanUp();\n        _poolMgr.init();\n\n\n\n        this.addEntitySys = Tools.getOrAddComponent(this.addEntityNode, 'AddEntitySystem');\n        this.addEntitySys.cleanUp();\n        this.addEntitySys.init(this.mapWidth, this.mapHeight, _poolMgr, this.mapType);\n\n        AddEntitySystem.init(this.addEntitySys);\n\n        this.cleanUp();\n\n        this.uiMgr = Tools.getOrAddComponent(this.UIMgrNode, 'UIMgr');\n        this.uiMgr.init(this);\n        this.uiMgr.cleanUp();\n        AdvertMgr.instance.setUiMgr(this.uiMgr);\n        PlatformMgr.getInviteInfo((datas) => {\n            PlayerData.instance.inviteDatas = datas;\n            this.uiMgr.refreshRedDot();\n        })\n\n\n        this.taskMgr = Tools.getOrAddComponent(this.node, 'TaskMgr');\n        this.taskMgr.init(this);\n\n        const audio = Tools.getOrAddComponent(this.audioNode, 'AudioEngine');\n        audio.init();\n\n\n        const map = this.addEntitySys.addMap(this.mapType, this.mapWidth, this.mapHeight);\n\n        this.localPlayer = this.addEntitySys.AddLocalPlayer();\n        this.players[0] = this.localPlayer;\n        this.uiMgr.addPlayerRankItem(this.localPlayer);\n        this.localPlayer.setKillCallback(() => {\n            PlayerData.instance.killCount++;\n            this.taskMgr.refreshTaskInGame();\n        })\n        this.localPlayer.setChangeKnifeCountCallback((num) => {\n            this.addLocalPlayerKnifes(num)\n        })\n        this.curEquipHeroSkin = null;\n        this.curEquipKnifeSkin = null;\n\n        this.cameraZoomCtrl = this.followCameraCtrl.getComponent('CameraZoomCtrl');\n        this.cameraZoomCtrl.cleanUp();\n        var followCameraCtrlCmp = this.followCameraCtrl.getComponent('FollowCameraCtrl');\n        followCameraCtrlCmp.cleanUp();\n\n        CollisionEventManager.getInstance().init();\n        this.heroCollisionHandleSystem = Tools.getOrAddComponent(this.node, 'HeroCollisionHandleSystem');\n        this.knifeCollisionHandleSystem = Tools.getOrAddComponent(this.node, 'KnifeCollisionHandleSystem');\n        this.pickKnifeCollisionHandleSystem = Tools.getOrAddComponent(this.node, 'PickKnifeCollisionHandleSystem');\n        this.pickBuffCollisionHandleSystem = Tools.getOrAddComponent(this.node, 'PickBuffCollisionHandleSystem');\n        this.attackBoxCollisionHandleSystem = Tools.getOrAddComponent(this.node, 'AttackBoxCollisionHandleSystem');\n\n        this.killMsgListener = Tools.getOrAddComponent(this.node, 'KillMsgListener');\n        this.killMsgListener.cleanUp();\n\n        const cameraZoomSys = Tools.getOrAddComponent(this.node, 'CameraZoomSystem');\n        cameraZoomSys.init(this.localPlayer, this.cameraZoomCtrl);\n\n        this.playerRankSystem = Tools.getOrAddComponent(this.node, 'PlayerRankSystem');\n        this.playerRankSystem.cleanUp();\n        this.gameRuleSystem = Tools.getOrAddComponent(this.node, 'GameRuleSystem');\n        this.gameRuleSystem.cleanUp();\n        this.heroReviveSystem = Tools.getOrAddComponent(this.node, 'HeroReviveSystem');\n        this.heroReviveSystem.cleanUp();\n\n        this.playerDistanceSystem = Tools.getOrAddComponent(this.node, 'PlayerDistanceSystem');\n        this.playerDistanceSystem.cleanUp();\n        this.wallRuleSystem = Tools.getOrAddComponent(this.node, 'WallRuleSystem');\n\n\n        this.node.on('throwKnife', this.throwKnife, this);\n        this.node.on('dodgeKnife', this.dodgeKnife, this);\n        this.node.on('destroyDefenceKnife', this.destroyDefenceKnife, this);\n        this.node.on('onBoxDestroy', this.onBoxDestroy, this);\n        this.node.on('onNeZhaAttack', this.onNeZhaAttack, this);\n\n        this.checkEnemyTime = 0;\n        this.checkKnifeTime = 0;\n        this.checkBlockTime = 0;\n        this.checkDefenceTime = 0;\n        this.addKnifeTime = 0;\n\n        GameData.instance.logUseTime('entityWorld.onload');\n        if (PlayerData.instance.isFristGame()) {\n            PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.World_Init);\n        }\n\n        if (this.isGuide) {\n            this.guideLoad();\n        } else {\n            this.normalLoad();\n        }\n        this.startLoadPrefab();\n        if (PlayerData.instance.isFristGame()) {\n            this.onStartBtnClick(null,null);\n        } else {\n            this.refreshPanel();\n        }\n\n        // this.uiMgr.showPanelWorldReward({\n        //     rank: 3,\n        //     round: 1,\n        //     joinTime: '5asss试试s0是03',\n        // });\n    },\n\n    cleanUp: function () {\n        this.players = [];\n        this.knifes = [];\n        this.removeKnifes = [];\n        this.walls = [];\n    },\n\n    guideLoad: function () {\n        // this.mapWidth = 720;\n        // this.mapHeight = 1280;\n        // 创建ai玩家\n        const remotePlayers = this.addEntitySys.AddRemotePlayer(3, 1, 1, 1);\n        var index = 1;\n        var player = null;\n        var knife = null;\n        var knifeMax = 100;\n        for (player of remotePlayers) {\n            this.players[index] = player;\n            // this.uiMgr.addPlayerRankItem(player);\n            // this.uiMgr.addHeroPosArr(this.localPlayer, player, this.cameraZoomCtrl.camera);\n            player.node.active = false;\n            player.followPlayer.node.active = false;\n\n            index++;\n        }\n\n        index = 0;\n        // 创建本地玩家的刀\n        var count = PlayerData.instance.knifeSkin.initKnifeCount;\n        this.localPlayerKnifes = this.addEntitySys.AddKnife(count, true);\n        for (knife of this.localPlayerKnifes) {\n            this.knifes[index] = knife;\n            var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n            knifeInit.init(this.localPlayer);\n            index++;\n            knifeMax--;\n        }\n\n\n        // 给ai加上默认刀\n        var aiPlayerKnifes = null;\n        var count = 2;\n        for (player of remotePlayers) {\n            aiPlayerKnifes = this.addEntitySys.AddKnife(count, true);\n            count = 20;\n            for (knife of aiPlayerKnifes) {\n                this.knifes[index] = knife;\n                var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n                knifeInit.init(player);\n                index++;\n                knifeMax--;\n            }\n        }\n\n        //创建场景里的刀\n        this.closeKnifes = [];\n        this.landKnifes = this.addEntitySys.AddKnife(10, true);\n        for (knife of this.landKnifes) {\n            this.knifes[index] = knife;\n            knife.node.active = false;\n            index++;\n            knifeMax--;\n        }\n\n\n        this.guideSystem = Tools.getOrAddComponent(this.node, 'GuideSystem');\n        this.guideSystem.init(this);\n        this.isLoading = false;\n    },\n\n\n    normalLoad: function () {\n        GameData.instance.logUseTime('start world load');\n        var rankData = PlayerData.instance.rankData;\n\n        if (GameData.instance.isShowLog()) {\n            console.log('level:' + rankData.name + ' playerCount: ' + rankData.playerCount);\n        }\n\n        // 创建ai玩家\n        const remotePlayers = this.addEntitySys.AddRemotePlayer(rankData.playerCount - 1, rankData.aiSkinMax, rankData.aiHeroSkinRandomCount, rankData.aiHeroSkinMax);\n        var index = 1;\n        var player = null;\n        var knife = null;\n        var knifeMax = 60;\n        for (player of remotePlayers) {\n            this.players[index] = player;\n            this.uiMgr.addPlayerRankItem(player);\n            this.uiMgr.addHeroPosArr(this.localPlayer, player, this.cameraZoomCtrl.camera);\n            player.setDeadCallback((pos) => {\n                this.addDeadKnifes(pos);\n            })\n            index++;\n        }\n\n        index = 0;\n        // 创建本地玩家的刀\n        var count = PlayerData.instance.knifeSkin.initKnifeCount + PlayerData.instance.extraKnifeCount;\n        this.localPlayerKnifes = this.addEntitySys.AddKnife(count);\n        for (knife of this.localPlayerKnifes) {\n            this.knifes[index] = knife;\n            var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n            knifeInit.init(this.localPlayer);\n            index++;\n            knifeMax--;\n        }\n\n\n        // 给ai加上默认刀\n        var aiPlayerKnifes = null;\n        for (player of remotePlayers) {\n            var count = player.skin.initKnifeCount;\n            aiPlayerKnifes = this.addEntitySys.AddKnife(count);\n            for (knife of aiPlayerKnifes) {\n                this.knifes[index] = knife;\n                var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n                knifeInit.init(player);\n                index++;\n                knifeMax--;\n            }\n        }\n\n        //创建场景里的刀\n        this.closeKnifes = [];\n        this.landKnifes = this.addEntitySys.AddKnife(knifeMax);\n        for (knife of this.landKnifes) {\n            this.knifes[index] = knife;\n            knife.node.active = false;\n            index++;\n            knifeMax--;\n        }\n\n        // //创建场景里的buff\n        // this.buffs = this.addEntitySys.AddBuff(20);\n\n        this.walls = this.addEntitySys.AddWall(this.mapType);\n\n\n        this.blocks = this.addEntitySys.AddBlock(rankData.blockNum);\n\n        //初始化buff创建条件\n        this.initAddBuffParam();\n        this.initAddBoxParam();\n\n        GameData.instance.logUseTime('end world load');\n        if (PlayerData.instance.isFristGame()) {\n            PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.World_Finish);\n        }\n        PlatformMgr.reportAnalytics();\n        this.isLoading = false;\n        if (this.touchStartGame) this.onStartBtnClick(null,null);\n    },\n\n    refreshPanel: function () {\n        const self = this;\n        var oldRankData = PlayerData.instance.oldRankData;\n        var rankData = PlayerData.instance.rankData;\n        var daySign = PlayerData.instance.daySign;\n\n        var showPanelSignFlag = PlayerData.instance.showPanelSignFlag;\n        var levelUp = oldRankData && rankData && oldRankData.id < rankData.id;\n\n        var offlineFlag = PlayerData.instance.offlineFlag;\n        var offlineGoldTime = PlayerData.instance.getReceiveOfflineGoldTime();\n        var offlineGoldMultipLimit = ConfigData.instance.clientData.offlineGoldMultipLimit * 1000;\n        var goldStage = ConfigData.instance.getCurStage(PlayerData.instance.playCount, ConfigData.instance.clientData.multipGoldLimit);\n\n        var hideAddTop = ConfigData.instance.clientData.hideAddTop;\n\n        // ConfigData.instance.getReceiveWay\n        var hasRepay = PlayerData.instance.hasRepay;\n        var repayData = null;\n        if (!hasRepay) {\n            repayData = ConfigData.instance.getRepayDataByRank(PlayerData.instance.rankData.id);\n\n            if (!repayData.reward) {\n                PlayerData.instance.updateRepay();\n            }\n        }\n\n\n        var doLevelUp = (callback) => {\n            self.uiMgr.showPanelLevelUp(callback);\n            PlayerData.instance.oldRankData = null;\n        }\n\n        var doBuySkin = (callback) => {\n            self.uiMgr.showPanelBuySkin(callback);\n        }\n\n        var doSign = (callback) => {\n            self.uiMgr.showPanelSign(callback);\n        }\n        var doTask = (callback) => {\n            self.taskMgr.refreshTaskInHome(callback);\n        }\n        var doOffline = (callback) => {\n            self.uiMgr.showOfflineMultip(callback);\n        }\n\n        var doRepay = (callback) => {\n            self.uiMgr.showPanelRepay(callback);\n        }\n\n        var doUnlockGrow = (callback) => {\n            self.uiMgr.showUnlockGrow(callback);\n        }\n\n        var doAddTop = (callback) => {\n            self.uiMgr.showPanelAddTop(callback);\n            PlayerData.instance.updateDayShowTop();\n        }\n\n        var doDailyTask = (callback) => {\n            self.uiMgr.showPanelDailyTask(callback);\n        }\n\n        var doSubscribe = (callback) => {\n            self.uiMgr.showPanelSubscribe(callback);\n        }\n\n        var doSubscribeReward = (callback) => {\n            self.uiMgr.showPanelSubscribeReward(callback);\n        }\n\n        var doEvaulate = (callback) => {\n            self.uiMgr.showPanelEvaulate(callback);\n        }\n\n        var doDance = () => {\n            self.uiMgr.showWatchAdverCount();\n        }\n\n        var func12 = () => {\n            if (PlayerData.instance.canShowPanelEvaulate()) {\n                doEvaulate(doDance)\n            } else {\n                doDance()\n            }\n        }\n\n\n        var func11 = () => {\n            if (PlayerData.instance.canShowPanelBuySkin()) {\n                doBuySkin(func12);\n            } else {\n                func12()\n            }\n        }\n\n        var func10 = () => {\n            if (false) { //if (PlayerData.instance.isSubscribe() && !PlayerData.instance.daySubscribeReward) {\n                doSubscribeReward(func11)\n            } else {\n                func11();\n            }\n        }\n\n\n        var func9 = () => {\n            if (false) { //if (!PlayerData.instance.isSubscribe() && !PlayerData.instance.showSubscribeFlag) {\n                doSubscribe(func10)\n                PlayerData.instance.showSubscribeFlag = true;\n            } else {\n                func10();\n            }\n        }\n\n\n        var func8 = () => {\n            if (false) { //if (PlayerData.instance.canShowPanelHolidayRank()) {\n                this.uiMgr.showPanelHolidayRank(true, func9);\n            } else {\n                func9();\n            }\n        };\n\n        var func7 = () => {\n            if (!daySign && !showPanelSignFlag && goldStage !== StageType.Share && PlayerData.instance.canShowPanelSign()) {\n                doSign(func8);\n                PlayerData.instance.showPanelSignFlag = true;\n            } else {\n                func8();\n            }\n        }\n\n        var func6 = () => {\n            if (!GameData.instance.isInReview && !ConfigData.instance.clientData.hideSpecialSkin && PlayerData.instance.canShowPanelDailyTask()) {\n                doDailyTask(func7)\n            } else {\n                func7()\n            }\n        }\n\n\n        var func5 = () => {\n            if (!hideAddTop && PlayerData.instance.canShowPanelAddTop() && !GameData.instance.isInReview && !PlatformMgr.isIOS()) {\n                doAddTop(func6)\n            } else {\n                func6()\n            }\n        }\n\n        var func4 = () => {\n            doUnlockGrow(func5);\n        }\n\n\n        var func3 = () => {\n            if (!hasRepay && repayData && repayData.reward) {\n                doRepay(func4);\n            } else {\n                func4();\n            }\n        }\n\n        var func2 = () => {\n            // if (offlineGoldTime >= offlineGoldMultipLimit && !offlineFlag && goldStage !== StageType.Share) {\n            if (false) {\n                PlayerData.instance.offlineFlag = true;\n                doOffline(func3);\n            } else {\n                func3();\n            }\n        }\n\n        var func1 = () => {\n            doTask(func2);\n        }\n\n        var func0 = () => {\n            // if (!PlayerData.instance.dayRefreshWorldReward && Tools.isAfterCheckTime(PlayerData.instance.getCurTime())) {\n            if (false) {\n                PlatformMgr.getHolidayWorldReward((data) => {\n                    if (data) {\n                        this.uiMgr.showPanelWorldReward(data, func1);\n                    } else {\n                        func1()\n                    }\n                });\n            } else {\n                func1();\n            }\n        }\n\n        var func = () => {\n            // if (!PlayerData.instance.dayRefreshPKReward && Tools.isAfterCheckTime(PlayerData.instance.getCurTime())) {\n            if (false) {\n                PlayerData.instance.updateWorldRewardDetail()\n                PlatformMgr.getHolidayPKReward((data) => {\n                    if (data) {\n                        this.uiMgr.showPanelPKReward(data, func0)\n                    } else {\n                        func0()\n                    }\n                })\n            } else {\n                func0()\n            }\n        }\n\n\n\n        if (levelUp) {\n            doLevelUp(func)\n        } else {\n            func();\n        }\n\n    },\n\n    startLoadPrefab: function () {\n        // GameData.instance.logUseTime('start prefab load');\n        this.uiMgr.startLoadPrefab();\n    },\n\n    onStartBtnClick: function (event,data) {\n        if(data && data==\"1\"){\n            //通过按钮点击的，记录为点击开始事件\n            //游戏开始（包括用户点击play按钮和点击角色游戏开始）\n            AdvertMgr.instance.fireBaseEvent(\"game_start\");\n        }\n        const self = this;\n        if (this.isLoading) {\n            this.touchStartGame = true;\n            return;\n        }\n\n        if (this.m_alreadyStart) {\n            return;\n        }\n        this.m_alreadyStart = true;\n\n        this.uiMgr.hideUserInfoBtn();\n\n        if (PlayerData.instance.isSecGame()) {\n            PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.GameTwo);\n        }\n\n        AdvertMgr.instance.destoryBanner();\n\n        var playCount = PlayerData.instance.playCount;\n        if (playCount !== 0 && playCount <= ConfigData.instance.clientData.bornFrenzyLimit) {\n            self.localPlayer.canAddBornFrenzy = true;\n        }\n\n\n        if (this.isGuide) {\n            this.onStart();\n        }\n        //首局不弹出\n        if (PlayerData.instance.dayPlayCount === 0) {\n            this.onLoadMatch();\n            return;\n        }\n\n        //新手阶段不弹出\n        var stage = ConfigData.instance.getCurStage(PlayerData.instance.playCount, ConfigData.instance.clientData.adverReviveLimit);\n        if (stage === StageType.Free) {\n            this.onLoadMatch();\n            return;\n        }\n\n\n        //试用暴走\n        // var canTryFrenzy = false;\n        // if (PlayerData.instance.continuityLoseCount >= 2 && (PlayerData.instance.rankData.id >= ConfigData.instance.clientData.frenzyLimit)) {\n        //     PlayerData.instance.updateContinuityLoseCount();\n        //     canTryFrenzy = true;\n        // }\n\n        // if (canTryFrenzy) {\n        //     this.uiMgr.showPanelTryFrenzy((success) => {\n        //         if (success) {\n        //             self.localPlayer.canFrenzyBorn = true;\n        //         }\n        //         self.onLoadMatch();\n        //     })\n        //     //可以试用暴走则不弹出试用皮肤\n        //     return;\n        // }\n\n\n\n\n\n\n        //试用套装\n        var clientData = ConfigData.instance.clientData;\n        var trySkinData = PlayerData.instance.getTrySkinData();\n        //后台配置的开关\n        if (!clientData.hideTrySkin && !GameData.instance.isInReview) {\n            //大于试用皮肤的最低游戏局数\n            if (PlayerData.instance.playCount >= clientData.trySkinMinPlayCount) {\n                var curCount = PlayerData.instance.dayPlayCount;\n                //大于上次试用皮肤的指定间隔局数\n                var interval = Tools.getItemOrFinalItem(clientData.trySkinTimeInterval, trySkinData.trySkinCount);\n                var canTry = (curCount - trySkinData.lastTryPlayCount) >= interval;\n\n                //或者连败两次\n                var canTry2 = false;\n                if (PlayerData.instance.continuityLoseCount >= 2) {\n                    canTry2 = true;\n                }\n\n                if (canTry || canTry2) {\n                    var data = ConfigData.instance.getRandomTrySuitData(PlayerData.instance);\n                    //有符合条件的可试用皮肤\n                    PlayerData.instance.updateContinuityLoseCount();\n                    PlayerData.instance.setTrySkinData(trySkinData);\n                    if (data) {\n                        var playerParent = self.localPlayer.node.parent;\n                        var followPlayerParent = self.localPlayer.followPlayer.node.parent;\n                        var hData, kData;\n                        this.uiMgr.showPanelTrySuit(data, (heroData, knifeData) => {\n                            this.uiMgr.activeGoldNode(false);\n                            this.uiMgr.activeDiamondNode(false);\n                            hData = heroData;\n                            kData = knifeData;\n                            PlayerData.instance.addExtraKnife(6);\n\n                            self.onEquipHeroSkin(heroData, false);\n                            self.onEquipKnifeSkin(knifeData, false);\n                            self.changeLocalKnifesCount(knifeData.initKnifeCount);\n\n                            var rate = 0;\n                            if (self.localPlayerKnifes.length > 20) {\n                                rate = 1\n                            } else if (self.localPlayerKnifes.length > 9) {\n                                rate = (self.localPlayerKnifes.length - 9) / 13;\n                            }\n\n                            self.localPlayer.followPlayer.node.group = 'ui';\n                            self.localPlayer.followPlayer.node.parent = this.tempNode;\n                            self.localPlayer.followPlayer.followPlayerScale.changeScaleMultip(1 - (rate * 0.45));\n\n                            self.localPlayer.node.group = 'ui';\n                            self.localPlayer.node.parent = this.tempNode;\n                            self.localPlayer.heroScale.changeScaleMultip(1 - (rate * 0.45));\n\n                            self.localPlayer.node.y += 130;\n                        }, (success) => {\n                            this.uiMgr.activeGoldNode(true);\n                            this.uiMgr.activeDiamondNode(true);\n                            if (!success) {\n                                PlayerData.instance.addExtraKnife(-6);\n                                self.onEquipHeroSkin(PlayerData.instance.heroSkin, true);\n                                self.onEquipKnifeSkin(PlayerData.instance.knifeSkin, true);\n                                self.changeLocalKnifesCount(PlayerData.instance.knifeSkin.initKnifeCount);\n                            } else {\n                                self.onEquipHeroSkin(hData, false);\n                                self.onEquipKnifeSkin(kData, false);\n                                self.changeLocalKnifesCount(kData.initKnifeCount);\n                                self.uiMgr.showActiveSuitEffect();\n                            }\n\n\n                            self.localPlayer.node.group = 'default';\n                            self.localPlayer.node.parent = playerParent;\n                            self.localPlayer.heroScale.changeScaleMultip(1);\n\n                            self.localPlayer.node.y = 0;\n                            self.localPlayer.followPlayer.node.group = 'heroWall';\n                            self.localPlayer.followPlayer.node.parent = followPlayerParent;\n                            self.localPlayer.followPlayer.followPlayerScale.changeScaleMultip(1);\n                            self.onLoadMatch();\n                        });\n                        return true;\n                    }\n                }\n            }\n        }\n\n        //试用皮肤\n        //后台配置的开关\n        if (!clientData.hideTrySkin && !GameData.instance.isInReview) {\n            //大于试用皮肤的最低游戏局数\n            if (PlayerData.instance.playCount >= clientData.trySkinMinPlayCount) {\n                var curCount = PlayerData.instance.dayPlayCount;\n                //大于上次试用皮肤的指定间隔局数\n                var interval = Tools.getItemOrFinalItem(clientData.trySkinTimeInterval, trySkinData.trySkinCount);\n                var canTry = (curCount - trySkinData.lastTryPlayCount) >= interval;\n                if (canTry) {\n                    //有符合条件的可试用皮肤\n                    var data = {};\n                    var isHeroSkin = false;\n                    if (trySkinData.lastTrySkinType === ItemType.HERO_SKIN) {\n                        data = ConfigData.instance.getRandomTryKnifeSkinData(PlayerData.instance.ownKnifeSkins, clientData.tryKnifeSkinMinQuality);\n                        trySkinData.lastTrySkinType = ItemType.KNIFE_SKIN;\n                        isHeroSkin = false;\n                    } else {\n                        data = ConfigData.instance.getRandomTryHeroSkinData(PlayerData.instance.ownHeroSkins, clientData.tryHeroSkinMinQuality);\n                        trySkinData.lastTrySkinType = ItemType.HERO_SKIN;\n                        isHeroSkin = true;\n                    }\n                    PlayerData.instance.setTrySkinData(trySkinData);\n                    if (data) {\n\n                        var playerParent = self.localPlayer.node.parent;\n                        var followPlayerParent = self.localPlayer.followPlayer.node.parent;\n                        this.uiMgr.showPanelTryOut(data, () => {\n                            this.uiMgr.activeGoldNode(false);\n                            this.uiMgr.activeDiamondNode(false);\n                            PlayerData.instance.addExtraKnife(6);\n                            if (isHeroSkin) {\n                                self.onEquipHeroSkin(data, false);\n                                self.changeLocalKnifesCount(PlayerData.instance.knifeSkin.initKnifeCount);\n                            } else {\n                                self.onEquipKnifeSkin(data, false);\n                            }\n                            var rate = 0;\n                            if (self.localPlayerKnifes.length > 20) {\n                                rate = 1\n                            } else if (self.localPlayerKnifes.length > 9) {\n                                rate = (self.localPlayerKnifes.length - 9) / 13;\n                            }\n\n                            self.localPlayer.followPlayer.node.group = 'ui';\n                            self.localPlayer.followPlayer.node.parent = this.tempNode;\n                            self.localPlayer.followPlayer.followPlayerScale.changeScaleMultip(1 - (rate * 0.45));\n                            if (isHeroSkin) {\n                                self.localPlayer.node.group = 'ui';\n                                self.localPlayer.node.parent = this.tempNode;\n                                self.localPlayer.heroScale.changeScaleMultip(1 - (rate * 0.45));\n                            }\n                            self.localPlayer.node.y += 130;\n                        }, (success) => {\n                            this.uiMgr.activeGoldNode(true);\n                            this.uiMgr.activeDiamondNode(true);\n                            if (!success) {\n                                PlayerData.instance.addExtraKnife(-6);\n                                if (isHeroSkin) {\n                                    self.onEquipHeroSkin(PlayerData.instance.heroSkin, true);\n                                    self.changeLocalKnifesCount(PlayerData.instance.knifeSkin.initKnifeCount);\n                                } else {\n                                    self.onEquipKnifeSkin(PlayerData.instance.knifeSkin, true);\n                                }\n                            } else {\n                                if (isHeroSkin) {\n                                    self.onEquipHeroSkin(data, false);\n                                    self.changeLocalKnifesCount(PlayerData.instance.knifeSkin.initKnifeCount);\n                                } else {\n                                    self.onEquipKnifeSkin(data, false);\n                                }\n                                var str = Tools.getStringByFormat(ConfigData.instance.getUITipStr(9), data.name)\n                                self.uiMgr.showTips(str);\n                            }\n\n                            if (isHeroSkin) {\n                                self.localPlayer.node.group = 'default';\n                                self.localPlayer.node.parent = playerParent;\n                                self.localPlayer.heroScale.changeScaleMultip(1);\n                            }\n                            self.localPlayer.node.y = 0;\n                            self.localPlayer.followPlayer.node.group = 'heroWall';\n                            self.localPlayer.followPlayer.node.parent = followPlayerParent;\n                            self.localPlayer.followPlayer.followPlayerScale.changeScaleMultip(1);\n                            self.onLoadMatch();\n                        });\n                        return true;\n                    }\n                }\n            }\n        }\n\n\n        this.onLoadMatch();\n    },\n\n    //匹配界面\n    onLoadMatch: function () {\n        if (PlayerData.instance.isFristGame()) {\n            PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.UI_Match);\n        }\n        const self = this;\n        this.uiMgr.showPanelMatch(this.players, () => {\n            self.onStart();\n        })\n    },\n\n    //开始游戏\n    onStart: function () {\n        var followCameraCtrlCmp = this.followCameraCtrl.getComponent('FollowCameraCtrl');\n        followCameraCtrlCmp.init(this.localPlayer.node, new cc.Rect(-this.mapWidth / 2, -this.mapHeight / 2, this.mapWidth, this.mapHeight));\n        this.localPlayer.myCamera = followCameraCtrlCmp;\n        CollisionEventManager.getInstance().clear();\n        this.uiMgr.closePanelMatch();\n        this.uiMgr.startGame();\n        this.uiMgr.startCountDown(GameData.instance.gameTime);\n        // 初始化玩家移动\n        for (var player of this.players) {\n            player.startGame(this.isGuide);\n            player.setLocalHero(this.localPlayer);\n        }\n\n\n        for (var knife of this.landKnifes) {\n            knife.node.active = true;\n        }\n\n\n        this.killMsgListener.init(this.players, this.uiMgr);\n        const self = this;\n        var callF = function () {\n            if (self.localPlayer._defenceTips) {\n                self.localPlayer._defenceTips.active = false;\n            }\n\n            self.playerRankSystem.updateGameLogic();\n            // 本局战斗结束  目前处理是弹出再来一局按钮\n            var func = () => {\n                //在展示购买皮肤面板前如果获得了其他皮肤，则本轮不展示\n                PlayerData.instance.showPanelBuySkinFlag = true;\n\n                if (PlayerData.instance.isFristGame()) {\n                    PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.GameOverPanel);\n                }\n                self.startGame = false;\n                self.localPlayer.stopControl();\n                self.uiMgr.openGameOverPanel();\n                PlayerData.instance.onGameOver(self.localPlayer);\n            }\n            if (self.localPlayer.rank === 1 && !self.localPlayer.beKilled()) {\n                setTimeout(() => {\n                    self.uiMgr.showPanelVictory();\n                    if (PlayerData.instance.isFristGame()) {\n                        PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.First_Game_Finish);\n                    }\n                }, 500)\n                setTimeout(() => {\n                    func();\n                }, 2000)\n            } else {\n                func()\n            }\n\n        }\n\n        this.guideGameOverCallF = (() => {\n            let index = 1;\n            for (const player of this.players) {\n                player.rank = index;\n                index++;\n            }\n            callF();\n        })\n\n\n\n        var reviveCallF = () => {\n            // if (GameData.instance.isInReview) {\n            //     self.localPlayer.waitToDie = false;\n            //     self.localPlayer.die(null, true);\n            // } else {\n            self.uiMgr.openRevivePanel((isRevive, isFrenzy) => {\n                if (isRevive) {\n                    var index = self.knifes.length;\n                    var count = PlayerData.instance.knifeSkin.initKnifeCount;\n                    var localPlayerKnifes = self.addEntitySys.AddKnife(count);\n                    for (var knife of localPlayerKnifes) {\n                        this.knifes[index] = knife;\n                        var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n                        knifeInit.init(self.localPlayer);\n                        index++;\n                    }\n                    // self.localPlayer.node.position = cc.v2(0, 0);\n                    self.localPlayer.revive(isFrenzy);\n                    self.gameRuleSystem.onContinue();\n                    self.uiMgr.showReviveNotice(self.localPlayer);\n                } else {\n                    self.localPlayer.waitToDie = false;\n                    self.localPlayer.die(null, true);\n                }\n            }, self.localPlayer.reviveCount);\n            // }\n        }\n\n        // var heroReviveCallF = () => {\n        //     var index = self.knifes.length;\n        //     var count = player.skin.initKnifeCount;\n        //     var localPlayerKnifes = self.addEntitySys.AddKnife(count);\n        //     for (var knife of localPlayerKnifes) {\n        //         this.knifes[index] = knife;\n        //         var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n        //         knifeInit.init(player);\n        //         index++;\n        //     }\n        //     // self.localPlayer.node.position = cc.v2(0, 0);\n        //     player.revive();\n        // };\n\n        const heroReviveCallF = (player, isRevive) => {\n            if (isRevive) {\n                var index = self.knifes.length;\n                var count = player.skin.initKnifeCount;\n                var localPlayerKnifes = self.addEntitySys.AddKnife(count);\n                for (var knife of localPlayerKnifes) {\n                    this.knifes[index] = knife;\n                    var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n                    knifeInit.init(player);\n                    index++;\n                }\n                player.revive();\n                self.uiMgr.showReviveNotice(player);\n\n            } else {\n                player.waitToDie = false;\n                player.die(null, true);\n            }\n        };\n\n        const heroShowRebornCallF = (player) => {\n            self.rebornEffect(player);\n        };\n\n\n        if (!this.isGuide) {\n            this.playerRankSystem.init(this.players, this.localPlayer);\n            this.gameRuleSystem.init(callF, this.localPlayer, this.players, GameData.instance.gameTime, reviveCallF);\n            this.heroReviveSystem.init(this.players, heroReviveCallF, heroShowRebornCallF);\n            this.playerDistanceSystem.init(this.players, this.localPlayer, this.blocks, this.knifes);\n            this.wallRuleSystem.init(this);\n        }\n\n        PlayerData.instance.onStartGame();\n\n        AudioEngine.instance.playSound(SoundID.Start);\n        this.startGame = true;\n        if (PlayerData.instance.isFristGame()) {\n            PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.First_Game_Start);\n        }\n    },\n\n    update: function (dt) {\n        this._removeEntity(dt);\n        this._updateGameLogic(dt);\n        this._updateHideNameLogic(dt);\n        if (!this.isGuide) {\n            this._updateNoticeLogic(dt);\n            this._updateAddKnifeLogic(dt);\n            this._updateShowTaskLogic(dt);\n            this._updateAddBuffLogic(dt);\n            this._updateAddBoxLogic(dt);\n            // this._updatePowerArrowLogic(dt);\n            this._updateGuideNoticeLogic(dt);\n        }\n        this._checkUpdateUserData(dt);\n        this._reportHeart(dt);\n\n    },\n\n    _removeEntity: function (dt) {\n\n        if (this.removeKnifes && this.removeKnifes.length > 0) {\n            for (var knife of this.removeKnifes) {\n                var j = this.knifes.indexOf(knife);\n                if (j !== -1) {\n                    this.knifes.splice(j, 1)\n                }\n            }\n            this.removeKnifes = [];\n        }\n    },\n\n    _updateGameLogic: function (dt) {\n        if (this.startGame) {\n            if (!this.isGuide) {\n                this.gameRuleSystem.updateGameLogic(dt);\n                this.heroReviveSystem.updateGameLogic(dt);\n                this.wallRuleSystem.updateGameLogic(dt);\n                this.playerDistanceSystem.updateGameLogic(dt);\n                this.playerRankSystem.updateGameLogic(dt);\n            } else {\n                this.guideSystem.updateGameLogic(dt);\n            }\n            this.pickKnifeCollisionHandleSystem.updateGameLogic(dt);\n            this.pickBuffCollisionHandleSystem.updateGameLogic(dt);\n            this.heroCollisionHandleSystem.updateGameLogic(dt);\n            this.knifeCollisionHandleSystem.updateGameLogic(dt);\n            this.attackBoxCollisionHandleSystem.updateGameLogic(dt);\n        }\n\n        for (var player of this.players) {\n            player.updateGameLogic(dt, this);\n            player.myGuideComp.updateGameLogic(dt);\n        }\n\n\n        for (var knife of this.knifes) {\n            knife.updateGameLogic(dt);\n            if (knife.shouldRemove) {\n                this.removeKnifes.push(knife);\n            }\n        }\n\n        if (this.startGame) {}\n\n        this.addEntitySys.AddTempKnife();\n    },\n\n    _updateNoticeLogic: function (dt) {\n        if (this.startGame) {\n            this.gameTime -= dt;\n            if (this.gameTime <= 31 && !this.flag_30) {\n                this.uiMgr.showImportantNotice(NoticeType.Time_30)\n                this.flag_30 = true;\n            }\n\n            if (this.gameTime <= 11 && !this.flag_10) {\n                this.uiMgr.showImportantNotice(NoticeType.Time_10)\n                this.flag_10 = true;\n            }\n\n            if (this.gameTime <= 4 && !this.flag_3) {\n                this.uiMgr.showCountDownNode()\n                this.flag_3 = true;\n            }\n\n\n            if (this.startGame) {\n                this.checkEnemyTime += dt;\n                this.checkKnifeTime += dt;\n                this.checkBlockTime += dt;\n                this.checkDefenceTime += dt;\n\n                if (this.checkEnemyTime > 20) {\n                    for (var player of this.players) {\n                        if (player === this.localPlayer) continue;\n                        if (player.isDead) continue;\n                        if (player.isInView) {\n                            this.checkEnemyTime = 0;\n                            this.uiMgr.addSpecialNotice(NoticeType.Enemy)\n                        }\n                    }\n                }\n\n\n                if (this.checkKnifeTime > 20) {\n                    for (var knife of this.knifes) {\n                        var isInMyView = Tools.isInMyView(this.localPlayer, knife, this.worldRect, this.width, this.height, this.cameraZoomCtrl.camera)\n                        // knife.onKnifeViewChange(isInMyView);\n                        if (isInMyView && knife.knifeStateComp.state === KnifeState.Normal) {\n                            this.checkKnifeTime = 0;\n                            this.uiMgr.addSpecialNotice(NoticeType.Knife)\n                        }\n                    }\n                }\n\n\n                if (this.checkBlockTime > 20) {\n                    for (var block of this.blocks) {\n                        if (Tools.isInMyView(this.localPlayer, block, this.worldRect, this.width, this.height, this.cameraZoomCtrl.camera)) {\n                            this.checkBlockTime = 0;\n                            this.uiMgr.addSpecialNotice(NoticeType.Block)\n                        }\n                    }\n                }\n\n\n\n                if (this.checkDefenceTime > 20) {\n                    if (this.localPlayer.isDefence) {\n                        this.checkDefenceTime = 0;\n                        this.uiMgr.addSpecialNotice(NoticeType.Defence);\n                    }\n                }\n            }\n        }\n    },\n\n    _updateAddKnifeLogic: function (dt) {\n        if (this.startGame) {\n            this.addKnifeTime += dt;\n            if (this.addKnifeTime >= PlayerData.instance.rankData.addKnifeInterval) {\n                this.addKnifeTime = 0;\n                const landKnifes = this.addEntitySys.AddKnife(1);\n                var index = this.knifes.length;\n                for (var knife of landKnifes) {\n                    this.knifes[index] = knife;\n                    index++\n                }\n\n            }\n        }\n    },\n\n    _updateHideNameLogic: function (dt) {\n        for (var player of this.players) {\n            if (player === this.localPlayer) continue;\n            if (player.isDead) continue;\n            if (Tools.isInMyView(this.localPlayer, player, this.worldRect, this.width, this.height, this.cameraZoomCtrl.camera, true)) {\n                player.setInView(true);\n            } else {\n                player.setInView(false);\n            }\n        }\n    },\n\n    _updateShowTaskLogic: function (dt) {\n        //通知UI展示任务\n        if (this.isShowTask) return;\n        if (!this.taskMgr.showList[0]) return;\n        this.isShowTask = true;\n        const self = this;\n        this.uiMgr.showTaskNotice(this.taskMgr.showList[0], () => {\n            this.taskMgr.showList.splice(0, 1);\n            self.isShowTask = false;\n        })\n    },\n\n\n    _updateAddBuffLogic: function (dt) {\n        if (this.startGame && this.canAddBuff) {\n            this.addBuffTime += dt;\n            if (this.addBuffTime > this.addBuffTimeLimit) {\n                var buffs = this.addEntitySys.AddBuff(1, this.addBuffId);\n                buffs[0].node.position = this.getRandomPosNearLocalPlayer(buffs[0].node, this.localPlayer.node, this.cameraZoomCtrl.camera);\n                buffs[0].node.scale = 0;\n                var action = cc.scaleTo(0.2, 1).easing(cc.easeBackOut(3.0))\n                buffs[0].node.runAction(action)\n                this.initAddBuffParam()\n\n            }\n        }\n    },\n\n    _updateAddBoxLogic: function (dt) {\n        if (this.startGame && this.canAddBox) {\n            this.addBoxTime += dt;\n            if (this.addBoxTime > this.addBoxTimeLimit) {\n                var boxes = this.addEntitySys.AddBox(1, this.addBoxId);\n                boxes[0].node.position = this.getRandomPosNearLocalPlayer(boxes[0].node, this.localPlayer.node, this.cameraZoomCtrl.camera);\n                boxes[0].node.scale = 0;\n                var action = cc.scaleTo(0.2, 1).easing(cc.easeBackOut(3.0))\n                boxes[0].node.runAction(action)\n                this.initAddBoxParam()\n            }\n        }\n    },\n\n    _updatePowerArrowLogic: function (dt) {\n        for (var player of this.players) {\n            if (player === this.localPlayer) continue;\n            if (player.isInView && !player.isDead) {\n                player.refreshPowerArrow(this.localPlayer);\n            } else {\n                player.closePowerArrow();\n            }\n        }\n    },\n\n    _updateGuideNoticeLogic: function (dt) {\n        if (!this.startGame) return;\n\n        var knfieCount = this.localPlayer.followPlayer.knivesCmp.knives.length;\n        if (knfieCount <= 10) {\n            this.localPlayer.showTips(0);\n        } else {\n            if (this.localPlayer.isDefence) {\n                this.localPlayer.showTips(2);\n                this.showGuideFlag = false;\n            } else if (this.showGuideFlag) {\n                this.localPlayer.showTips(1);\n            } else {\n                this.localPlayer.closeTips();\n            }\n        }\n    },\n\n    initMapParam: function () {\n        this.mapType = 0;\n        this.mapId = 0;\n        if (PlayerData.instance.playCount === 0) {\n            return;\n        }\n\n        if (PlayerData.instance.newMap) {\n            this.mapType = PlayerData.instance.newMap;\n            PlayerData.instance.newMap = 0;\n            return;\n        }\n\n        var canUseMapDatas = [];\n        var mapDatas = ConfigData.instance.mapDatas;\n        var mapPool = PlayerData.instance.rankData.mapPool;\n\n        if (!mapPool) return;\n\n\n        for (const id of mapPool) {\n            canUseMapDatas.push(mapDatas[id]);\n        }\n\n        var data = Tools.getRandomItemByWeight(canUseMapDatas)\n        if (data) {\n            this.mapType = data.id;\n            this.mapWidth = data.width;\n            this.mapHeight = data.height;\n        }\n\n        if (GameData.instance.isShowLog()) {\n            // console.log(canUseMapDatas);\n            // console.log('随机地图：', this.mapType);\n        }\n    },\n\n    initAddBuffParam: function () {\n        var canUseBuffDatas = [];\n        var buffDatas = ConfigData.instance.buffDatas;\n        var buffPool = PlayerData.instance.rankData.buffPool;\n\n        if (buffPool) {\n            this.canAddBuff = true;\n        } else {\n            this.canAddBuff = false;\n            return;\n        }\n\n        for (const buffId of buffPool) {\n            canUseBuffDatas.push(buffDatas[buffId]);\n        }\n\n        var data = Tools.getRandomItemByWeight(canUseBuffDatas);\n        if (data) {\n            this.addBuffId = data.id;\n            this.addBuffTime = 0;\n            this.addBuffTimeLimit = Tools.getRandomInt(data.refreshTime[0], data.refreshTime[1]);\n        }\n\n        if (GameData.instance.isShowLog()) {\n            console.log(canUseBuffDatas);\n            console.log('随机buff：', data.name, '刷新时间:', this.addBuffTimeLimit);\n        }\n    },\n\n\n    initAddBoxParam: function () {\n        var totalWeight = 0;\n        var boxWeights = [];\n        var canUseBoxDatas = [];\n        var boxDatas = ConfigData.instance.boxDatas;\n        var boxPool = PlayerData.instance.rankData.boxPool;\n        this.canAddBox = true;\n        if (boxPool) {\n            this.canAddBox = true;\n        } else {\n            this.canAddBox = false;\n            return;\n        }\n\n        for (const boxId of boxPool) {\n            canUseBoxDatas.push(boxDatas[boxId]);\n        }\n\n\n        var data = Tools.getRandomItemByWeight(canUseBoxDatas);\n        if (data) {\n            this.addBoxId = data.id;\n            this.addBoxTime = 0;\n            this.addBoxTimeLimit = Tools.getRandomInt(data.refreshTime[0], data.refreshTime[1]);\n        }\n\n\n        if (GameData.instance.isShowLog()) {\n            console.log(canUseBoxDatas);\n            console.log('随机box：', data.name, '刷新时间:', this.addBoxTimeLimit);\n        }\n    },\n\n\n    restartGame: function () {\n        CollisionEventManager.getInstance().clear();\n        AudioEngine.instance.stopAllSound();\n        let manager = cc.director.getCollisionManager();\n        manager._contacts = [];\n        manager._colliders = [];\n        // cc.director.loadScene(\"Battle\");\n        this.uiMgr.closeGameOverPanel();\n        this.uiMgr.openPanelKeyCount(false);\n        if (PlayerData.instance.isSecGame()) {\n            PlatformMgr.notifyFunnelEvent(CustomFunnelEvent.BackToHome);\n        }\n        this.onLoad();\n    },\n\n\n    gameOver: function () {\n\n    },\n\n    posInMyView: function (pos) {\n        var relativePos = this.localPlayer.node.convertToNodeSpaceAR(pos);\n        var width = this.width * this.cameraZoomCtrl.camera.zoomRatio;\n        var height = this.height * this.cameraZoomCtrl.camera.zoomRatio;\n        if (relativePos.x <= width / 2 && relativePos.x >= -width / 2) {\n            if (relativePos.y <= height / 2 && relativePos.y >= -width / 2) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    //丢刀特效\n    throwKnife: function (detail) {\n        var centerPos, rotation\n        if (detail.length !== 2) {\n            centerPos = detail.parent.convertToWorldSpaceAR(detail.position)\n            rotation = 0;\n        } else {\n            var params = Tools.getCenterParam(detail);\n            centerPos = params[0];\n            rotation = params[1];\n        }\n\n        // if (this.posInMyView(centerPos)) {\n        this.addEntitySys.addCollisionEffect(centerPos, rotation);\n        // }\n    },\n\n    //闪避特效\n    dodgeKnife: function (detail) {\n        var params = Tools.getCenterParam(detail);\n        var centerPos = params[0];\n        if (this.posInMyView(centerPos)) {\n            var effect = this.addEntitySys.addDodgeEffect(centerPos);\n            effect.scale = this.localPlayer.node.scale;\n        }\n    },\n\n    //破防特效\n    destroyDefenceKnife: function (detail) {\n        var centerPos;\n        if (detail.length !== 2) {\n            centerPos = detail.parent.convertToWorldSpaceAR(detail.position)\n        } else {\n            var params = Tools.getCenterParam(detail);\n            centerPos = params[0];\n        }\n        // if (this.posInMyView(centerPos)) {\n        var effect = this.addEntitySys.addDestroyDefenceEffect(centerPos);\n        effect.scale = this.localPlayer.node.scale;\n        // }else{\n        //     console.log('不在视野内')\n        // }\n    },\n\n    //哪吒攻击特效\n    onNeZhaAttack: function (detail) {\n        var centerPos = detail.parent.convertToWorldSpaceAR(detail.position)\n        var effect = this.addEntitySys.addNeZhaEffect(centerPos);\n        // effect.scale = this.localPlayer.node.scale;\n    },\n\n    reduceMapSize: function (v) {\n        this.mapWidth -= v;\n        this.mapHeight -= v;\n\n        this.addEntitySys.setMapSize(this.mapWidth, this.mapHeight);\n        for (var player of this.players) {\n            player.refreshWalls(this.mapWidth, this.mapHeight);\n            player.node.emit('setMapSize', [this.mapWidth, this.mapHeight]);\n        }\n\n        for (var knife of this.knifes) {\n            knife.refreshWalls(this.mapWidth, this.mapHeight);\n        }\n    },\n\n\n\n    onEquipKnifeSkin: function (data, isOwn, needSave = true, needChangeKnife = true) {\n        //未获得则只预览，在退出商店时恢复默认\n        if (isOwn) PlayerData.instance.updateKnifeSkin(data, needSave);\n        const self = this;\n        if (needChangeKnife) self.changeLocalKnifesCount(data.initKnifeCount);\n        self.localPlayer.changeKnifeSkin(data);\n        self.localPlayer.followPlayer.getComponent('PlayerKnivesComponent').emitAllKnivesChangeSkin();\n        //刷新属性条\n        self.uiMgr.refreshProperty(data, false)\n    },\n\n    onEquipHeroSkin: function (data, isOwn, needSave = true) {\n        //未获得则只预览，在退出商店时恢复默认\n        if (isOwn) PlayerData.instance.updateHeroSkin(data, needSave);\n        const self = this;\n        self.localPlayer.heroSkin = data;\n        self.localPlayer.changeSkin();\n        self.localPlayer.changeEffectColor();\n        self.refreshAIHeroSkin();\n        //刷新属性条\n        self.uiMgr.refreshProperty(data, true)\n    },\n\n    addLocalPlayerKnifes: function (num) {\n        var addKnifes = this.addEntitySys.AddKnife(num);\n        var index = this.knifes.length;\n        for (var knife of addKnifes) {\n            this.knifes[index] = knife;\n            var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n            knifeInit.init(this.localPlayer);\n            index++;\n        }\n    },\n\n    changeLocalKnifesCount: function (num) {\n        num += PlayerData.instance.extraKnifeCount;\n        this._changeLocalKnifesCountReal(-this.localPlayerKnifes.length)\n        this._changeLocalKnifesCountReal(num)\n    },\n\n\n    _changeLocalKnifesCountReal: function (count) {\n        if (count > 0) {\n            var addKnifes = this.addEntitySys.AddKnife(count);\n            var index = this.knifes.length;\n            for (var knife of addKnifes) {\n                this.knifes[index] = knife;\n                this.localPlayerKnifes.push(knife);\n                var knifeInit = Tools.getOrAddComponent(knife.node, 'KnifeInit');\n                knifeInit.init(this.localPlayer);\n                // knife.node.position = this.localPlayer.node.position;\n                index++;\n            }\n        } else if (count < 0) {\n            var index = this.localPlayerKnifes.length;\n            for (let i = index - 1; i >= index + count; i--) {\n                var knife = this.localPlayerKnifes[i];\n                this.localPlayerKnifes.splice(i, 1);\n                var j = this.knifes.indexOf(knife);\n                if (j !== -1) {\n                    this.knifes.splice(j, 1)\n                }\n                knife.node.getComponent('KnifeOwnerComponent').owner.emit('reduceKnife', knife.node);\n                // knife.recycleSelf();\n                knife.node.destroy();\n            }\n        }\n    },\n\n    refreshAIHeroSkin: function () {\n        for (const player of this.players) {\n            if (player === this.localPlayer) continue;\n            if (player.heroSkin && this.localPlayer.heroSkin) {\n                if (player.heroSkin.id === this.localPlayer.heroSkin.id) {\n                    player.heroSkin = null;\n                    player.changeSkin();\n                    player.changeEffectColor();\n                }\n            }\n        }\n    },\n\n    getRandomPosNearLocalPlayer: function (itemNode, playerNode, camera) {\n        var minWidth = this.localPlayer.logicPlayer.radius * this.localPlayer.node.scale / 2;\n        var minHeight = this.localPlayer.logicPlayer.radius * this.localPlayer.node.scale / 2;\n        var maxWidth = this.width / camera.zoomRatio / 2;\n        var maxHeight = this.height / camera.zoomRatio / 2;\n        // console.log(minWidth, maxWidth, minHeight, maxHeight)\n        var randomPos = cc.v2(Tools.getPositiveOrNegative() * Tools.getRandomInt(minWidth, maxWidth), Tools.getPositiveOrNegative() * Tools.getRandomInt(minHeight, maxHeight))\n        var nearPos = playerNode.position.add(randomPos);\n        var pos = playerNode.parent.convertToWorldSpaceAR(nearPos);\n        var finalPos = itemNode.parent.convertToNodeSpaceAR(pos);\n        return finalPos;\n    },\n\n    _checkUpdateUserData: function (dt) {\n        PlayerData.instance.checkDelayUpdateData(dt);\n        PlayerData.instance.updateUserData();\n        PlayerData.instance.updatePKRankTime += dt;\n        PlayerData.instance.pkSurplusTime -= dt * 1000;\n    },\n\n    addDeadKnifes: function (pos) {\n        var count = 6;\n        // var addKnifes = this.addEntitySys.AddKnife(count);\n        // var index = this.knifes.length;\n        // var dir = pos.sub(this.localPlayer.node.position).normalize().mul(200);\n        let i = 0;\n        const self = this;\n        for (i = 0; i < count; i++) {\n            // for (let knife of addKnifes) {\n            // this.knifes[index] = knife;\n            // knife.node.position = pos.add(cc.v2(Tools.getRandomInt(-200, 200), Tools.getRandomInt(-200, 200)));\n            // knife.node.position = pos.add(dir);\n            // dir = dir.rotate(60 * Math.PI / 180);\n            // knife.activeNode.active = false;\n            let ePos = pos.add(cc.v2(Tools.getRandomInt(-200, 200), Tools.getRandomInt(-200, 200))); //knife.node.parent.convertToWorldSpaceAR(knife.node.position);\n\n\n            // const showKnife = function () {\n            //     knife.activeNode.active = true;\n            // }\n\n            const createEffect = function () {\n                self.addEntitySys.addShowKnifeEffect(ePos);\n                // setTimeout(showKnife, 300);\n            }\n\n            setTimeout(createEffect, i * 50);\n            // i++;\n            // index++;\n        }\n    },\n\n    rebornEffect: function (player) {\n        // var centerPos = pos;\n        var centerPos = player.node.parent.convertToWorldSpaceAR(player.node.position);\n        // if (this.posInMyView(centerPos)) {\n        var effect = this.addEntitySys.addRebornEffect(centerPos);\n        // effect.scale = this.localPlayer.node.scale;\n        // }\n    },\n\n    _reportHeart: function (dt) {\n        if (this.isDoHeartbeat) {\n            const timestamp = Tools.getMilliTime();\n            if (timestamp - this._heartbeatSendTimestamp >= this.heartbeatInterval) {\n                this._heartbeatSendTimestamp = timestamp;\n                // this.sendHeartbeatRequest();\n                PlatformMgr.hawkeye_report_heartbeat();\n                PlatformMgr.getInviteInfo((datas) => {\n                    PlayerData.instance.inviteDatas = datas;\n                    this.uiMgr.refreshRedDot();\n                })\n            }\n        }\n    },\n\n    onBoxDestroy: function (info) {\n        var node = info.node;\n        var data = info.data;\n        // this.addDeadKnifes(node.position);\n        //0 刀 1 金币 2 buff\n        switch (data.id) {\n            case 0:\n                this.addBoxKnife(info);\n                break;\n            case 1:\n                if (info.isLocal) {\n                    this.addBoxGold(info);\n                }\n                break;\n            case 2:\n                this.addBoxBuff(info);\n                break;\n        }\n    },\n\n\n    addBoxKnife: function (info) {\n        var node = info.node;\n        var data = info.data;\n        var pos = node.position;\n        var count = Tools.getRandomInt(data.param[0], data.param[1] + 1);\n\n        var addKnifes = this.addEntitySys.AddKnife(count);\n        var index = this.knifes.length;\n\n        let i = 0;\n        const self = this;\n\n        for (let knife of addKnifes) {\n            this.knifes[index] = knife;\n\n            // knife.node.position = pos.add(cc.v2(Tools.getRandomInt(-100, 100), Tools.getRandomInt(-100, 100)));\n\n            let epos = pos.add(cc.v2(Math.cos(i / count * 2 * Math.PI) * 100, Math.sin(i / count * 2 * Math.PI) * 100));\n            knife.node.position = epos;\n            knife.activeNode.opacity = 0;\n            knife.knifeColliderNodeCtrl.attackCollider.notColliderFlag = true;\n            const showKnife = function () {\n                if (knife) {\n                    knife.activeNode.opacity = 255;\n                    setTimeout(() => {\n                        knife.knifeColliderNodeCtrl.attackCollider.notColliderFlag = false;\n                    }, 400)\n                }\n            }\n\n            const createEffect = function () {\n                self.addEntitySys.addShowKnifeEffect(epos);\n                setTimeout(showKnife, 300);\n            }\n\n            setTimeout(createEffect, i * 50);\n            i++;\n            index++;\n        }\n\n    },\n\n    addBoxGold: function (info) {\n        var pos = info.node.position;\n        var data = info.data;\n        var count = Tools.getRandomInt(data.param[0], data.param[1] + 1);\n        PlayerData.instance.updateGold(count);\n        PlayerData.instance.showGold -= count;\n\n\n        var offset = pos.sub(this.localPlayer.node.position).mul(this.cameraZoomCtrl.camera.zoomRatio);\n        this.uiMgr.showGetMoneyEffect({\n            count: 200,\n            isMore: true,\n            isLucky: false,\n        }, cc.v2(0, -200), true);\n    },\n\n\n    addBoxBuff: function (info) {\n        var canUseBuffDatas = [];\n        // var buffDatas = ConfigData.instance.buffDatas;\n        var buffPool = PlayerData.instance.rankData.buffPool;\n\n        if (!buffPool) {\n            return;\n        }\n\n        for (const buffId of buffPool) {\n            canUseBuffDatas.push({\n                id: buffId,\n                weight: info.data.param[buffId]\n            });\n        }\n\n        var data = Tools.getRandomItemByWeight(canUseBuffDatas);\n        if (data) {\n            var buffs = this.addEntitySys.AddBuff(1, data.id);\n            buffs[0].landNode.active = false;\n            buffs[0].node.position = info.node.position.add(cc.v2(0, 50));\n            buffs[0].node.scale = 0;\n\n            setTimeout(() => {\n                buffs[0].landNode.active = true;\n            }, 300);\n\n            var action = cc.scaleTo(0.2, 1).easing(cc.easeBackOut(3.0))\n            buffs[0].node.runAction(action)\n        }\n\n    },\n\n    getReward(item) {\n        switch (item.type) {\n            case ItemType.MONEY:\n                var count = item.num;\n                PlayerData.instance.updateGold(count);\n                PlayerData.instance.showGold -= count;\n                var param = {\n                    count: count,\n                    isMore: true,\n                    isLucky: false,\n                }\n                this.uiMgr.showGetMoneyEffect(param, cc.v2(0, -200), true);\n                break;\n            case ItemType.HERO_SKIN:\n                if (!PlayerData.instance.isOwnHeroSkin(item.id)) {\n                    PlayerData.instance.addHeroSkin(item.id);\n                    //装备上\n                    this.onEquipHeroSkin(item.itemData, true);\n                }\n                //展示出来\n                this.uiMgr.showReward(item.itemData);\n                PlayerData.instance.showPanelBuySkinFlag = false;\n                break;\n            case ItemType.KNIFE_SKIN:\n                if (!PlayerData.instance.isOwnKnifeSkin(item.id)) {\n                    PlayerData.instance.addKnifeSkin(item.id);\n                    this.onEquipKnifeSkin(item.itemData, true, true, false);\n                }\n                //展示出来\n                this.uiMgr.showReward(item.itemData);\n                PlayerData.instance.showPanelBuySkinFlag = false;\n                break;\n            case ItemType.ZONG_ZI:\n                var count = item.num;\n                PlayerData.instance.updateZongZi(count);\n                this.uiMgr.showTips(Tools.getStringByFormat(ConfigData.instance.getUITipStr(15), count));\n                break;\n        }\n    },\n\n    showPanelTreasureBox() {\n        // PlayerData.instance.updateKeyCount();\n        // PlayerData.instance.updateKeyCount();\n        // PlayerData.instance.updateKeyCount();\n        if (PlayerData.instance.canShowPanelTreasureBox()) {\n            this.uiMgr.showPanelTreasureBox()\n        }\n    },\n\n    updateKeyCount(node) {\n        PlayerData.instance.updateKeyCount();\n        this.uiMgr.showPanelKeyCount(node);\n    },\n\n});"]}