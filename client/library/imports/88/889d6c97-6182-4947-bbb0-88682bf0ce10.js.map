{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\player/assets\\scripts\\battle\\component\\player\\PlayerBuffChangeListener.js"],"names":["BuffState","require","cc","Class","extends","Component","properties","_hard","_speeds","_invincible","init","player","node","on","onBuffChange","buffData","isStart","type","Big","_bigEffect","open","_bigEffectText","play","emit","buffParam","followPlayer","cameraZoomSys","setCameraZoomMultip","close","Fast","_frenzy","_fastEffect","id","_fastEffectText","push","getSpeedRate","index","indexOf","splice","Hard","_hardEffect","_hardEffectText","num","knivesCmp","knives","length","changeKnifeCountCallback","Frenzy","_frenzyEffect","Magnet","_magnetEffect","_magnetEffectText","ret","rate","Math","max","isHard","isInvincible"],"mappings":"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","file":"PlayerBuffChangeListener.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\player","sourcesContent":["const BuffState = require('Types').BuffState;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _hard: 0,\r\n        _speeds: [],\r\n        _invincible: 0,\r\n    },\r\n\r\n\r\n    init: function (player) {\r\n        this.player = player;\r\n\r\n        this._hard = 0;\r\n        this._speeds = [];\r\n        this._invincible = 0;\r\n\r\n        this.node.on('onBuffChange', this.onBuffChange, this);\r\n    },\r\n\r\n\r\n    onBuffChange: function (buffData, isStart) {\r\n        switch (buffData.type) {\r\n            case BuffState.Big:\r\n                if (isStart) {\r\n                    // this.player.buffLabel.string = '大';\r\n                    this.player._bigEffect.open();\r\n                    this.player._bigEffectText.play();\r\n                    this.node.emit('changeScaleMultip', buffData.buffParam);\r\n                    this.player.followPlayer.node.emit('changeScaleMultip', buffData.buffParam);\r\n                    if (this.player.cameraZoomSys) {\r\n                        this.player.cameraZoomSys.setCameraZoomMultip(buffData.buffParam)\r\n                    }\r\n                } else {\r\n                    this.player._bigEffect.close();\r\n                    this.node.emit('changeScaleMultip', 1);\r\n                    this.player.followPlayer.node.emit('changeScaleMultip', 1);\r\n                    if (this.player.cameraZoomSys) {\r\n                        this.player.cameraZoomSys.setCameraZoomMultip(1);\r\n                    }\r\n                }\r\n                break;\r\n            case BuffState.Fast:\r\n                if (isStart) {\r\n                    // this.player.buffLabel.string = '快';\r\n                    if (!this._frenzy) {\r\n                        this.player._fastEffect.open();\r\n                        if (buffData.id !== 6) this.player._fastEffectText.play();\r\n                    }\r\n                    this._speeds.push(buffData.buffParam);\r\n                    this.node.emit('changeSpeedRate', this.getSpeedRate());\r\n                } else {\r\n                    this.player._fastEffect.close();\r\n                    var index = this._speeds.indexOf(buffData.buffParam);\r\n                    if (index > -1) {\r\n                        this._speeds.splice(index, 1);\r\n                    }\r\n                    this.node.emit('changeSpeedRate', this.getSpeedRate());\r\n                }\r\n                break;\r\n            case BuffState.Hard:\r\n                if (isStart) {\r\n                    // this.player.buffLabel.string = '强';\r\n                    this._hard++;\r\n                    if (!this._frenzy) {\r\n                        this.player._hardEffect.open();\r\n                        this.player._hardEffectText.play();;\r\n                    }\r\n                    var num = 6 - this.player.followPlayer.knivesCmp.knives.length;\r\n                    if (num > 0) {\r\n                        if (this.player.changeKnifeCountCallback)\r\n                            this.player.changeKnifeCountCallback(num);\r\n                    }\r\n                    // this.player.isHard = true;\r\n                } else {\r\n                    this._hard--;\r\n                    this.player._hardEffect.close();\r\n                    // this.player.isHard = false;\r\n                }\r\n                break;\r\n            case BuffState.Frenzy: {\r\n                if (isStart) {\r\n                    this._hard++;\r\n                    this._invincible++;\r\n                    this._speeds.push(buffData.buffParam);\r\n                    this._frenzy = true;\r\n\r\n                    this.player._fastEffect.close();\r\n                    this.player._hardEffect.close();\r\n                    this.player._frenzyEffect.open();\r\n                    this.node.emit('changeSpeedRate', this.getSpeedRate());\r\n                } else {\r\n                    this._hard--;\r\n                    this._invincible--;\r\n                    var index = this._speeds.indexOf(buffData.buffParam);\r\n                    if (index > -1) {\r\n                        this._speeds.splice(index, 1);\r\n                    }\r\n                    this._frenzy = false;\r\n                    this.player._frenzyEffect.close();\r\n                    this.node.emit('changeSpeedRate', this.getSpeedRate());\r\n                }\r\n                break;\r\n            }\r\n            case BuffState.Magnet:\r\n                if (isStart) {\r\n                    this.player._magnetEffect.open();\r\n                    this.player._magnetEffectText.play();\r\n                    this.node.emit('changeMagnet', true);\r\n                    // this.player.followPlayer.node.emit('changeScaleMultip', buffData.buffParam);\r\n                    // if (this.player.cameraZoomSys) {\r\n                    //     this.player.cameraZoomSys.setCameraZoomMultip(buffData.buffParam)\r\n                    // }\r\n                } else {\r\n                    this.player._magnetEffect.close();\r\n                    this.node.emit('changeMagnet', false);\r\n                    // this.player.followPlayer.node.emit('changeScaleMultip', 1);\r\n                    // if (this.player.cameraZoomSys) {\r\n                    //     this.player.cameraZoomSys.setCameraZoomMultip(1);\r\n                    // }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    getSpeedRate: function () {\r\n        var ret = 1.0;\r\n\r\n        for (var rate of this._speeds) {\r\n            ret = Math.max(rate, ret);\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n    isHard: function () {\r\n        return this._hard > 0;\r\n    },\r\n\r\n    isInvincible: function () {\r\n        return this._invincible > 0;\r\n    },\r\n});"]}