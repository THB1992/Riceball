{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\common/assets\\scripts\\common\\TaskMgr.js"],"names":["Tools","require","ConfigData","PlayerData","TaskType","ItemType","AdvertMgr","cc","Class","extends","Component","properties","showList","init","world","tasks","instance","getTasks","checkTaskInHome","task","process","type","LOGIN","signCount","PLAYCOUNT","playCount","KILLCOUNT","killCount","RANK","rankData","id","ADVERCOUNT","totalAdverCount","taskProcess","param","arrContains","completeTaskIds","addCompleteTask","uiMgr","refreshRedDot","refreshTaskInHome","callback","self","selfWorld","showPanelBuySkinFlag","rewardType","HERO_SKIN","data","getHeroSkinById","rewardId","ownHeroSkins","unlockWay","canGetAdver","showReward","success","addHeroSkin","onEquipHeroSkin","name","getLanguageStr","showTips","getStringByFormat","getUITipStr","KNIFE_SKIN","getKnifeSkinById","ownKnifeSkins","addKnifeSkin","onEquipKnifeSkin","checkTaskInGame","showTaskInGameIds","addShowTask","push","refreshTaskInGame"],"mappings":";;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAME,aAAaF,QAAQ,YAAR,CAAnB;AACA,IAAMG,WAAWH,QAAQ,OAAR,EAAiBG,QAAlC;AACA,IAAMC,WAAWJ,QAAQ,OAAR,EAAiBI,QAAlC;AACA,IAAMC,YAAYL,QAAQ,WAAR,CAAlB;;AAEAM,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,kBAAU;AADF,KAHP;;AAOL;;AAEA;;AAEAC,UAAM,cAAUC,KAAV,EAAiB;AACnB,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAKC,KAAL,GAAab,WAAWc,QAAX,CAAoBC,QAApB,EAAb;AACH,KAdI;;AAiBLC,mBAjBK,6BAiBa;AAAA;AAAA;AAAA;;AAAA;AACd,iCAAmB,KAAKH,KAAxB,8HAA+B;AAAA,oBAApBI,IAAoB;;AAC3B,oBAAIC,UAAU,CAAd;AACA,wBAAQD,KAAKE,IAAb;AACI,yBAAKjB,SAASkB,KAAd;AACIF,kCAAUjB,WAAWa,QAAX,CAAoBO,SAApB,GAAgC,CAA1C;AACA;AACJ,yBAAKnB,SAASoB,SAAd;AACIJ,kCAAUjB,WAAWa,QAAX,CAAoBS,SAA9B;AACA;AACJ,yBAAKrB,SAASsB,SAAd;AACIN,kCAAUjB,WAAWa,QAAX,CAAoBW,SAA9B;AACA;AACJ,yBAAKvB,SAASwB,IAAd;AACI,4BAAIC,WAAW1B,WAAWa,QAAX,CAAoBa,QAAnC;AACAT,kCAAUS,SAASC,EAAnB;AACA;AACJ,yBAAK1B,SAAS2B,UAAd;AACIX,kCAAUjB,WAAWa,QAAX,CAAoBgB,eAA9B;AACA;AAhBR;AAkBA7B,2BAAWa,QAAX,CAAoBiB,WAApB,CAAgCd,KAAKW,EAArC,IAA2CV,OAA3C;AACA,oBAAIA,WAAWD,KAAKe,KAApB,EAA2B;AACvB,wBAAI,CAAClC,MAAMmC,WAAN,CAAkBhC,WAAWa,QAAX,CAAoBoB,eAAtC,EAAuDjB,KAAKW,EAA5D,CAAL,EAAsE;AAClE3B,mCAAWa,QAAX,CAAoBqB,eAApB,CAAoClB,KAAKW,EAAzC;AACA,6BAAKhB,KAAL,CAAWwB,KAAX,CAAiBC,aAAjB;AACA,4BAAIpB,KAAKE,IAAL,KAAcjB,SAASkB,KAA3B,EAAkC;AAC9B,mCAAOH,IAAP;AACH;AACJ;AACJ;AACJ;AA/Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCjB,KAjDI;;;AAmDLqB,uBAAmB,2BAAUC,QAAV,EAAoB;AACnC,YAAMC,OAAO,IAAb;AACA,YAAMC,YAAY,KAAK7B,KAAvB;;AAEA,YAAMK,OAAO,KAAKD,eAAL,EAAb;AACA,YAAIC,IAAJ,EAAU;AACNhB,uBAAWa,QAAX,CAAoB4B,oBAApB,GAA2C,KAA3C;AACA,oBAAQzB,KAAK0B,UAAb;AACI,qBAAKxC,SAASyC,SAAd;AACI,wBAAIC,OAAO7C,WAAWc,QAAX,CAAoBgC,eAApB,CAAoC7B,KAAK8B,QAAzC,CAAX;AACA,wBAAI,CAACjD,MAAMmC,WAAN,CAAkBhC,WAAWa,QAAX,CAAoBkC,YAAtC,EAAoDH,KAAKjB,EAAzD,CAAL,EAAmE;AAC/D;AACA,4BAAIiB,KAAKI,SAAL,KAAmB,CAAvB,EAA0B;AACtB,gCAAI7C,UAAUU,QAAV,CAAmBoC,WAAvB,EAAoC;AAChCT,0CAAUL,KAAV,CAAgBe,UAAhB,CAA2BN,IAA3B,EAAiC,UAACO,OAAD,EAAa;AAC1C,wCAAIA,OAAJ,EAAa;AACT;AACAnD,mDAAWa,QAAX,CAAoBuC,WAApB,CAAgCpC,KAAK8B,QAArC;AACAN,kDAAUa,eAAV,CAA0BT,IAA1B,EAAgC,IAAhC;AACAJ,kDAAUL,KAAV,CAAgBC,aAAhB;AACA,4CAAIkB,OAAOvD,WAAWc,QAAX,CAAoB0C,cAApB,CAAmCX,KAAKU,IAAxC,CAAX;AACAd,kDAAUL,KAAV,CAAgBqB,QAAhB,CAAyB3D,MAAM4D,iBAAN,CAAwB1D,WAAWc,QAAX,CAAoB6C,WAApB,CAAgC,EAAhC,CAAxB,EAA6DJ,IAA7D,CAAzB;AACH;AACDf,yCAAKF,iBAAL,CAAuBC,QAAvB;AACH,iCAVD,EAUG,YAAM;AACLE,8CAAUL,KAAV,CAAgBqB,QAAhB,CAAyB,CAAzB;AACH,iCAZD;AAaH,6BAdD,MAcO;AACH;AACAjB,qCAAKF,iBAAL,CAAuBC,QAAvB;AACH;AACJ,yBAnBD,MAmBO;AACH;AACAtC,uCAAWa,QAAX,CAAoBuC,WAApB,CAAgCpC,KAAK8B,QAArC;AACAN,sCAAUa,eAAV,CAA0BT,IAA1B,EAAgC,IAAhC;AACAJ,sCAAUL,KAAV,CAAgBC,aAAhB;;AAEAI,sCAAUL,KAAV,CAAgBe,UAAhB,CAA2BN,IAA3B,EAAiC,YAAM;AACnCL,qCAAKF,iBAAL,CAAuBC,QAAvB;AACH,6BAFD;AAGH;AACJ;AACD;AACJ,qBAAKpC,SAASyD,UAAd;AACI,wBAAIf,OAAO7C,WAAWc,QAAX,CAAoB+C,gBAApB,CAAqC5C,KAAK8B,QAA1C,CAAX;AACA,wBAAI,CAACjD,MAAMmC,WAAN,CAAkBhC,WAAWa,QAAX,CAAoBgD,aAAtC,EAAqDjB,KAAKjB,EAA1D,CAAL,EAAoE;AAChE;AACA,4BAAIiB,KAAKI,SAAL,KAAmB,CAAvB,EAA0B;AACtB,gCAAI7C,UAAUU,QAAV,CAAmBoC,WAAvB,EAAoC;AAChCT,0CAAUL,KAAV,CAAgBe,UAAhB,CAA2BN,IAA3B,EAAiC,UAACO,OAAD,EAAa;AAC1C,wCAAIA,OAAJ,EAAa;AACT;AACAnD,mDAAWa,QAAX,CAAoBiD,YAApB,CAAiC9C,KAAK8B,QAAtC;AACAN,kDAAUuB,gBAAV,CAA2BnB,IAA3B,EAAiC,IAAjC;AACAJ,kDAAUL,KAAV,CAAgBC,aAAhB;AACA,4CAAIkB,OAAOvD,WAAWc,QAAX,CAAoB0C,cAApB,CAAmCX,KAAKU,IAAxC,CAAX;AACAd,kDAAUL,KAAV,CAAgBqB,QAAhB,CAAyB3D,MAAM4D,iBAAN,CAAwB1D,WAAWc,QAAX,CAAoB6C,WAApB,CAAgC,EAAhC,CAAxB,EAA6DJ,IAA7D,CAAzB;AACH;AACDf,yCAAKF,iBAAL,CAAuBC,QAAvB;AACH,iCAVD,EAUG,YAAM;AACLE,8CAAUL,KAAV,CAAgBqB,QAAhB,CAAyB,CAAzB;AACH,iCAZD;AAaH,6BAdD,MAcO;AACH;AACAjB,qCAAKF,iBAAL,CAAuBC,QAAvB;AACH;AACJ,yBAnBD,MAmBO;AACHtC,uCAAWa,QAAX,CAAoBiD,YAApB,CAAiC9C,KAAK8B,QAAtC;AACAN,sCAAUuB,gBAAV,CAA2BnB,IAA3B,EAAiC,IAAjC;AACAJ,sCAAUL,KAAV,CAAgBC,aAAhB;;AAEAI,sCAAUL,KAAV,CAAgBe,UAAhB,CAA2BN,IAA3B,EAAiC,YAAM;AACnCL,qCAAKF,iBAAL,CAAuBC,QAAvB;AACH,6BAFD;AAGH;AACJ;AACD;AArER;AAuEH,SAzED,MAyEO;AACH,gBAAIA,QAAJ,EAAcA;AACjB;AACJ,KApII;;AAsIL0B,mBAtIK,6BAsIa;AAAA;AAAA;AAAA;;AAAA;AACd,kCAAmB,KAAKpD,KAAxB,mIAA+B;AAAA,oBAApBI,IAAoB;;AAC3B,oBAAIC,UAAU,CAAd;AACA,wBAAQD,KAAKE,IAAb;AACI,yBAAKjB,SAASkB,KAAd;AACIF,kCAAUjB,WAAWa,QAAX,CAAoBO,SAApB,GAAgC,CAA1C;AACA;AACJ,yBAAKnB,SAASoB,SAAd;AACIJ,kCAAUjB,WAAWa,QAAX,CAAoBS,SAA9B;AACA;AACJ,yBAAKrB,SAASsB,SAAd;AACIN,kCAAUjB,WAAWa,QAAX,CAAoBW,SAA9B;AACA;AACJ,yBAAKvB,SAASwB,IAAd;AACI,4BAAIC,WAAW1B,WAAWa,QAAX,CAAoBa,QAAnC;AACAT,kCAAUS,SAASC,EAAnB;AACA;AACJ,yBAAK1B,SAAS2B,UAAd;AACIX,kCAAUjB,WAAWa,QAAX,CAAoBgB,eAA9B;AACA;AAhBR;AAkBA7B,2BAAWa,QAAX,CAAoBiB,WAApB,CAAgCd,KAAKW,EAArC,IAA2CV,OAA3C;AACA,oBAAIA,WAAWD,KAAKe,KAApB,EAA2B;AACvB,wBAAI,CAAClC,MAAMmC,WAAN,CAAkBhC,WAAWa,QAAX,CAAoBoD,iBAAtC,EAAyDjD,KAAKW,EAA9D,CAAD,IAAsE,CAAC9B,MAAMmC,WAAN,CAAkBhC,WAAWa,QAAX,CAAoBoB,eAAtC,EAAuDjB,KAAKW,EAA5D,CAA3E,EAA4I;AACxI3B,mCAAWa,QAAX,CAAoBqD,WAApB,CAAgClD,KAAKW,EAArC;AACA,6BAAKlB,QAAL,CAAc0D,IAAd,CAAmBnD,IAAnB;AACH;AACJ;AACJ;AA5Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BjB,KAnKI;;;AAqKLoD,uBAAmB,6BAAY;AAC3B,aAAKJ,eAAL;AACH;AAvKI,CAAT","file":"TaskMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\common","sourcesContent":["const Tools = require('Tools');\r\nconst ConfigData = require('ConfigData');\r\nconst PlayerData = require('PlayerData');\r\nconst TaskType = require('Types').TaskType;\r\nconst ItemType = require('Types').ItemType;\r\nconst AdvertMgr = require('AdvertMgr');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        showList: [],\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    init: function (world) {\r\n        this.world = world;\r\n        this.tasks = ConfigData.instance.getTasks();\r\n    },\r\n\r\n\r\n    checkTaskInHome() {\r\n        for (const task of this.tasks) {\r\n            var process = 0;\r\n            switch (task.type) {\r\n                case TaskType.LOGIN:\r\n                    process = PlayerData.instance.signCount + 1;\r\n                    break;\r\n                case TaskType.PLAYCOUNT:\r\n                    process = PlayerData.instance.playCount;\r\n                    break;\r\n                case TaskType.KILLCOUNT:\r\n                    process = PlayerData.instance.killCount;\r\n                    break;\r\n                case TaskType.RANK:\r\n                    var rankData = PlayerData.instance.rankData;\r\n                    process = rankData.id;\r\n                    break;\r\n                case TaskType.ADVERCOUNT:\r\n                    process = PlayerData.instance.totalAdverCount;\r\n                    break;\r\n            }\r\n            PlayerData.instance.taskProcess[task.id] = process;\r\n            if (process >= task.param) {\r\n                if (!Tools.arrContains(PlayerData.instance.completeTaskIds, task.id)) {\r\n                    PlayerData.instance.addCompleteTask(task.id);\r\n                    this.world.uiMgr.refreshRedDot();\r\n                    if (task.type !== TaskType.LOGIN) {\r\n                        return task;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    refreshTaskInHome: function (callback) {\r\n        const self = this;\r\n        const selfWorld = this.world;\r\n\r\n        const task = this.checkTaskInHome();\r\n        if (task) {\r\n            PlayerData.instance.showPanelBuySkinFlag = false;\r\n            switch (task.rewardType) {\r\n                case ItemType.HERO_SKIN:\r\n                    var data = ConfigData.instance.getHeroSkinById(task.rewardId);\r\n                    if (!Tools.arrContains(PlayerData.instance.ownHeroSkins, data.id)) {\r\n                        //展示奖励（分段位获得和其他任务获得）\r\n                        if (data.unlockWay !== 0) {\r\n                            if (AdvertMgr.instance.canGetAdver) {\r\n                                selfWorld.uiMgr.showReward(data, (success) => {\r\n                                    if (success) {\r\n                                        //解锁皮肤\r\n                                        PlayerData.instance.addHeroSkin(task.rewardId);\r\n                                        selfWorld.onEquipHeroSkin(data, true);\r\n                                        selfWorld.uiMgr.refreshRedDot();\r\n                                        var name = ConfigData.instance.getLanguageStr(data.name);\r\n                                        selfWorld.uiMgr.showTips(Tools.getStringByFormat(ConfigData.instance.getUITipStr(18), name));\r\n                                    }\r\n                                    self.refreshTaskInHome(callback);\r\n                                }, () => {\r\n                                    selfWorld.uiMgr.showTips(4)\r\n                                });\r\n                            } else {\r\n                                //没有广告就直接刷下一个任务了\r\n                                self.refreshTaskInHome(callback);\r\n                            }\r\n                        } else {\r\n                            //解锁皮肤\r\n                            PlayerData.instance.addHeroSkin(task.rewardId);\r\n                            selfWorld.onEquipHeroSkin(data, true);\r\n                            selfWorld.uiMgr.refreshRedDot();\r\n\r\n                            selfWorld.uiMgr.showReward(data, () => {\r\n                                self.refreshTaskInHome(callback);\r\n                            });\r\n                        }\r\n                    }\r\n                    break;\r\n                case ItemType.KNIFE_SKIN:\r\n                    var data = ConfigData.instance.getKnifeSkinById(task.rewardId);\r\n                    if (!Tools.arrContains(PlayerData.instance.ownKnifeSkins, data.id)) {\r\n                        //展示奖励（分段位获得和其他任务获得）\r\n                        if (data.unlockWay !== 0) {\r\n                            if (AdvertMgr.instance.canGetAdver) {\r\n                                selfWorld.uiMgr.showReward(data, (success) => {\r\n                                    if (success) {\r\n                                        //解锁皮肤\r\n                                        PlayerData.instance.addKnifeSkin(task.rewardId);\r\n                                        selfWorld.onEquipKnifeSkin(data, true);\r\n                                        selfWorld.uiMgr.refreshRedDot();\r\n                                        var name = ConfigData.instance.getLanguageStr(data.name);\r\n                                        selfWorld.uiMgr.showTips(Tools.getStringByFormat(ConfigData.instance.getUITipStr(18), name));\r\n                                    }\r\n                                    self.refreshTaskInHome(callback);\r\n                                }, () => {\r\n                                    selfWorld.uiMgr.showTips(4)\r\n                                });\r\n                            } else {\r\n                                //没有广告就直接刷下一个任务了\r\n                                self.refreshTaskInHome(callback);\r\n                            }\r\n                        } else {\r\n                            PlayerData.instance.addKnifeSkin(task.rewardId);\r\n                            selfWorld.onEquipKnifeSkin(data, true);\r\n                            selfWorld.uiMgr.refreshRedDot();\r\n\r\n                            selfWorld.uiMgr.showReward(data, () => {\r\n                                self.refreshTaskInHome(callback);\r\n                            });\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        } else {\r\n            if (callback) callback()\r\n        }\r\n    },\r\n\r\n    checkTaskInGame() {\r\n        for (const task of this.tasks) {\r\n            var process = 0;\r\n            switch (task.type) {\r\n                case TaskType.LOGIN:\r\n                    process = PlayerData.instance.signCount + 1;\r\n                    break;\r\n                case TaskType.PLAYCOUNT:\r\n                    process = PlayerData.instance.playCount;\r\n                    break;\r\n                case TaskType.KILLCOUNT:\r\n                    process = PlayerData.instance.killCount;\r\n                    break;\r\n                case TaskType.RANK:\r\n                    var rankData = PlayerData.instance.rankData;\r\n                    process = rankData.id;\r\n                    break;\r\n                case TaskType.ADVERCOUNT:\r\n                    process = PlayerData.instance.totalAdverCount;\r\n                    break;\r\n            }\r\n            PlayerData.instance.taskProcess[task.id] = process;\r\n            if (process >= task.param) {\r\n                if (!Tools.arrContains(PlayerData.instance.showTaskInGameIds, task.id) && !Tools.arrContains(PlayerData.instance.completeTaskIds, task.id)) {\r\n                    PlayerData.instance.addShowTask(task.id);\r\n                    this.showList.push(task);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    refreshTaskInGame: function () {\r\n        this.checkTaskInGame();\r\n    },\r\n});"]}