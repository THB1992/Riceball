{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity/assets\\scripts\\battle\\entity\\EntityPlayer.js"],"names":["Tools","require","EntityBase","AudioEngine","SoundID","NAME_COLOR","PlayerData","FrenzyAddType","HeroSkinProperty","HeroRebornEffectState","StageType","KnifeState","cc","Class","extends","properties","colliderNode","Node","isLocal","uid","followPlayer","touchNode","rank","isDead","isDefence","killNum","pickKnifeCount","killKnifeCount","maxPickKnifeCount","circleNode","_dieEffect","firstDead","waitToDie","reviveCount","invincible","invincibleTime","heroTeamIcon","Sprite","heroIcon","scaleMultip","shadowNode","isInView","goldAddition","isSage","activeNode","ctx","Graphics","lightTime","redPope","rayNode","posArrowPool","init","tid","knifeSkin","playerName","rankIconNode","country","heroSkin","iconUrl","attackPower","defencePower","aiLevel","canFrenzy","isKey","teamID","rankData","active","skin","name","nickname","string","changeName","heroMove","getOrAddComponent","node","heroScale","moveFixByBlock","getComponent","Collider","nodeCollider","bodyCollider","tag","logicPlayer","defenceRect","attackRect","buffComp","buffChangeListener","playerFrenzyComp","playerReviveFrenzyComp","on","addBuff","addKnife","die","isCollCircleWall","changeMagnet","killByGuide","changeSkin","suitComp","self","loader","loadRes","url","SpriteFrame","error","resource","spriteFrame","property","Speed","changeSkinSpeedAddition","propertyParam","openShadow","closeShadow","changeSuit","changeKnifeSkin","suit","changeEffectColor","_defenceEffect","changeColorByHex","hexColor","changeColor","startGame","isGuide","isStartGame","emit","frameNode","_frenzyBar","moveByKeyboard","moveByTouch","MoveStateNotice","knivesCmp","canFrenzyBorn","tryFrenzy","canAddBornFrenzy","born","aiMgr","moveSpeed","beKilled","knife","forceDie","isInvincible","canRevive","_stage","Free","reviveTime","waitToRevive","showRebornEffect","Close","touchEndEvent","_flagNode","_keyNode","onDie","notColliderFlag","_defenceTips","_defenceStartEffect","_attackStartEffect","parent","guide","killer","player","addKillNum","playParticle","instance","playSound","Death","Kill","deadCallbcak","position","revive","isFrenzy","flag","updateDieLogic","dt","setSage","value","updateReviveLogic","waitToShow","initWalls","type","walls","width","height","moveFix","refresh","myGuideComp","refreshWalls","detail","isNoMoreKnife","reLand","buffId","updateGameLogic","world","knifes","moveGuideFix","updateLogic","speedShadow","canMagnet","updateMagnetLogic","updateKey","updateKeyCount","otherKeyNode","getKnifeNum","stopControl","isStopCtrl","enabled","getStrlen","_rankComp","bg","icon","x","_flagComp","nameDirty","setLocalHero","hero","setInView","isShow","heroStartMove","play","heroStopMove","isCollisionWall","setFinalRank","setKillCallback","callback","killCallbcak","setDeadCallback","setChangeKnifeCountCallback","changeKnifeCountCallback","other","kill","addKnifeNum","knifeCount","Math","max","addKillKnifeNum","isHard","ret","getNoMoreKnifeNum","getReviveTotal","refreshPowerArrow","localPlayer","_powerArrow","closePowerArrow","close","changeAttackPower","count","changeDefencePower","setGoldAddition","changeGrowSpeedAddition","state","showTips","tipsType","tips","children","bubble","i","length","tip","closeTips","multip","newScaleMultip","newScale","scale","index","knifeStateComp","Normal","knifeColliderNodeCtrl","attackCollider","dir","sub","dis","mag","normalize","mul","finalPosition","knifeMoveCtrl","updateLightingLogic","showNameNode","show","setScale","changeColliderState","changePosArrTarget","target","posArr","changeLocalPlayer","changeOpacity","opacity"],"mappings":"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","file":"EntityPlayer.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity","sourcesContent":["/**\n * @fileoverview 玩家实体\n * @author meifan@gameley.cn (梅凡)\n */\n\nconst Tools = require('Tools');\nconst EntityBase = require('EntityBase');\nconst AudioEngine = require('AudioEngine');\nconst SoundID = require('Types').SoundID;\nconst NAME_COLOR = require('Types').NAME_COLOR;\nconst PlayerData = require('PlayerData');\nconst FrenzyAddType = require('Types').FrenzyAddType;\nconst HeroSkinProperty = require('Types').HeroSkinProperty;\nconst HeroRebornEffectState = require('Types').HeroRebornEffectState;\nconst StageType = require('Types').StageType;\nconst KnifeState = require('Types').KnifeState;\n\ncc.Class({\n    extends: EntityBase,\n\n    properties: {\n        colliderNode: cc.Node,\n        // pickUpNode: cc.Node,\n        isLocal: true,\n        uid: 999,\n        followPlayer: null,\n        touchNode: cc.Node,\n        rank: 0,\n        isDead: false,\n        isDefence: true,\n        killNum: 0,\n        pickKnifeCount: 0,\n        killKnifeCount: 0,\n        maxPickKnifeCount: 0,\n        circleNode: cc.Node,\n        _dieEffect: cc.Node,\n        firstDead: false,\n        waitToDie: false,\n        reviveCount: 0,\n        invincible: false,\n        invincibleTime: 0,\n        heroTeamIcon: cc.Sprite,\n        heroIcon: cc.Sprite,\n        scaleMultip: 2,\n        // fastNode: cc.Node,\n        shadowNode: cc.Node,\n        isInView: false,\n        goldAddition: 0,\n        /** 初复活阶段 贤者模式 不杀人 半透明 */\n        isSage: false,\n        activeNode: cc.Node,\n\n        ctx: cc.Graphics,\n        lightTime: 0,\n        redPope: cc.Node,\n        rayNode: cc.Node,\n        posArrowPool: [],\n    },\n\n    // onLoad () {}\n\n    init: function (isLocal, uid, followPlayer, tid, knifeSkin, playerName, rank, rankIconNode, country, heroSkin, iconUrl, attackPower, defencePower, aiLevel, canFrenzy, isKey) {\n\n        this.isLocal = isLocal;\n        this.uid = uid;\n        this.followPlayer = followPlayer;\n        this.teamID = tid;\n        this.aiLevel = aiLevel;\n        this.rankData = rank;\n        this.rankIconNode = rankIconNode;\n        this.rankIconNode.active = false;\n        this.country = country;\n        this.skin = knifeSkin;\n        this.heroSkin = heroSkin;\n        this.killNum = 0;\n        this.pickKnifeCount = 0;\n        this.killKnifeCount = 0;\n        this.maxPickKnifeCount = 0;\n        this.isKey = isKey;\n\n        this.reviveCount = 0;\n        this.name = playerName.nickname.string ? playerName.nickname.string : 'player';\n        this.playerName = playerName;\n        this.changeName(this.name);\n        this.iconUrl = iconUrl;\n        this.attackPower = attackPower;\n        this.defencePower = defencePower;\n        // this.playerName.node.color = NAME_COLOR[tid];\n\n        this.heroMove = Tools.getOrAddComponent(this.node, 'HeroMove');\n\n        this.heroScale = Tools.getOrAddComponent(this.node, 'HeroScale');\n        this.heroScale.init(this);\n\n\n        this.moveFixByBlock = Tools.getOrAddComponent(this.node, 'HeroMoveFixByBlock');\n        this.moveFixByBlock.init(this.colliderNode.getComponent(cc.Collider));\n\n\n\n\n        var nodeCollider = Tools.getOrAddComponent(this.colliderNode, 'NodeCollider');\n        //TODO nodeCollider 需要设置初始队伍 changeColliderTag\n        nodeCollider.init(this.node, true);\n        this.nodeCollider = nodeCollider;\n\n        // var nodePickCollider = Tools.getOrAddComponent(this.pickUpNode, 'NodeCollider');\n        //TODO nodeCollider 需要设置初始队伍 changeColliderTag\n        // nodePickCollider.init(this.node, false);\n\n        this.bodyCollider = this.colliderNode.getComponent(cc.Collider);\n        // this.pickCollider = this.pickUpNode.getComponent(cc.Collider);\n        this.bodyCollider.tag = tid;\n        // var colliders = this.node.getComponentsInChildren(cc.Collider);\n        // for (var collider of colliders) {\n        //     collider.tag = tid;\n        // }\n        this.logicPlayer = Tools.getOrAddComponent(this.node, 'LogicPlayer');\n        this.logicPlayer.init(this);\n\n        this.defenceRect = Tools.getOrAddComponent(this.node, 'DefenceRect');\n        this.defenceRect.init(360, 360, true);\n\n        this.attackRect = Tools.getOrAddComponent(this.node, 'AttackRect');\n        this.attackRect.init(360, 360, true, false, 1.5);\n\n\n        this.buffComp = Tools.getOrAddComponent(this.node, 'PlayerBuffComponent');\n        this.buffChangeListener = Tools.getOrAddComponent(this.node, 'PlayerBuffChangeListener')\n        this.buffChangeListener.init(this);\n\n        if (canFrenzy) {\n            this.playerFrenzyComp = Tools.getOrAddComponent(this.node, 'PlayerFrenzyComponent');\n            this.playerFrenzyComp.init();\n        } else {\n            this.playerReviveFrenzyComp = Tools.getOrAddComponent(this.node, 'PlayerReviveFrenzyComponent');\n            this.playerReviveFrenzyComp.init();\n        }\n\n\n\n\n        this.isDead = false;\n        this.isInView = false;\n\n        this.node.on('addBuff', this.addBuff, this);\n        this.node.on('addKnife', this.addKnife, this);\n        this.node.on('die', this.die, this);\n        this.node.on('isCollCircleWall', this.isCollCircleWall, this);\n        this.node.on('changeMagnet', this.changeMagnet, this);\n        this.node.on('killByGuide', this.killByGuide, this);\n\n\n        this.changeSkin();\n\n        this.suitComp = Tools.getOrAddComponent(this.node, 'PlayerSuitComponent');\n        this.suitComp.init(this);\n    },\n\n\n\n\n\n    changeSkin: function () {\n        const self = this;\n        self.heroTeamIcon.node.active = false;\n        self.heroIcon.node.active = false;\n\n        // if (self.heroSkin) {\n        //     AddEntitySystem.instance.loadHeroSkinSprite(self.heroIcon, self.heroSkin.skinIndex, () => {\n        //         if (self.heroSkin) {\n        //             self.heroIcon.node.active = true;\n        //         }\n        //     });\n        // } else {\n        //     AddEntitySystem.instance.loadHeroSkinSprite(self.heroTeamIcon, (self.teamID - 1), () => {\n        //         if (!self.heroSkin) {\n        //             self.heroTeamIcon.node.active = true;\n        //         }\n        //     });\n        // }\n        if (self.heroSkin) {\n            cc.loader.loadRes(self.heroSkin.url, cc.SpriteFrame, (error, resource) => {\n                if (error) {\n                    cc.error(error);\n                } else if (resource) {\n                    if (self.heroSkin) {\n                        self.heroIcon.spriteFrame = resource;\n                        self.heroIcon.node.active = true;\n                    }\n                }\n            });\n\n\n            //刷新皮肤属性效果\n            switch (this.heroSkin.property) {\n                case HeroSkinProperty.Speed:\n                    this.heroMove.changeSkinSpeedAddition(this.heroSkin.propertyParam / 100);\n                    this.openShadow()\n                    break;\n                default:\n                    this.heroMove.changeSkinSpeedAddition(0);\n                    this.closeShadow()\n                    break;\n            }\n        } else {\n            cc.loader.loadRes('texture/hero/player00' + self.teamID, cc.SpriteFrame, (error, resource) => {\n                if (error) {\n                    cc.error(error);\n                } else if (resource) {\n                    if (!self.heroSkin) {\n                        self.heroTeamIcon.spriteFrame = resource;\n                        self.heroTeamIcon.node.active = true;\n                    }\n                }\n            });\n\n            this.heroMove.changeSkinSpeedAddition(0);\n            this.closeShadow()\n        }\n\n        this.changeSuit();\n    },\n\n    changeKnifeSkin: function (knifeSkin) {\n        this.skin = knifeSkin;\n        this.changeSuit();\n    },\n\n    changeSuit: function () {\n        if (this.skin && this.heroSkin) {\n            if (this.skin.suit && this.heroSkin.suit && (this.skin.suit === this.heroSkin.suit)) {\n                this.suit = this.skin.suit;\n            } else {\n                this.suit = null;\n            }\n        } else {\n            this.suit = null;\n        }\n\n        if (this.suitComp) {\n            this.suitComp.changeSuit();\n        }\n    },\n    changeEffectColor: function () {\n        if (this.heroSkin) {\n            this._defenceEffect.changeColorByHex(this.heroSkin.hexColor);\n            this._dieEffect.changeColorByHex(this.heroSkin.hexColor);\n        } else {\n            this._defenceEffect.changeColor(this.teamID);\n            this._dieEffect.changeColor(this.teamID);\n        }\n    },\n\n    startGame: function (isGuide) {\n        this.isStartGame = true;\n        this.followPlayer.node.emit('startGame', isGuide);\n        this.rankIconNode.active = true;\n        this.playerName.frameNode.active = false;\n        if (this._frenzyBar) {\n            this._frenzyBar.active = true;\n        }\n        if (this.isLocal) {\n            // const playSoundByOwner = Tools.getOrAddComponent(this.node, 'PlaySoundByOwner');\n            // playSoundByOwner.init(this);\n            this.moveByKeyboard = Tools.getOrAddComponent(this.node, 'MoveByKeyboard');\n            // this.heroMove = Tools.getOrAddComponent(this.node, 'HeroMove');\n\n            this.moveByTouch = Tools.getOrAddComponent(this.touchNode, 'MoveByTouch');\n            this.moveByTouch.init(this);\n\n            this.MoveStateNotice = Tools.getOrAddComponent(this.node, 'MoveStateNotice');\n            this.MoveStateNotice.init(this, this.followPlayer.knivesCmp);\n\n            if (this.canFrenzyBorn) {\n                this.node.emit('onFrenzyAdd', FrenzyAddType.tryFrenzy);\n            } else if (this.canAddBornFrenzy) {\n                this.node.emit('onFrenzyAdd', FrenzyAddType.born);\n            }\n\n        } else {\n            if (!isGuide) {\n                this.aiMgr = Tools.getOrAddComponent(this.node, 'AIMgr');\n                this.aiMgr.init(this.heroMove.moveSpeed, this.aiLevel, this);\n            }\n            // var moveAI = Tools.getOrAddComponent(this.node, 'MoveAI');\n            // this.heroMove = Tools.getOrAddComponent(this.node, 'HeroMove');\n\n            // moveAI.init(heroMove.moveSpeed);\n        }\n    },\n\n    beKilled: function () {\n        return this.isDead || this.firstDead;\n    },\n\n    die: function (knife, forceDie = false) {\n        // console.log('player die, killTid is ', + knife.tag)\n        // if (this.isLocal) {\n        // 分享复活决定的无敌\n        if (this.invincible) {\n            return;\n        }\n\n        // buff决定的无敌\n        if (this.isInvincible() && !forceDie) {\n            return;\n        }\n\n        var canRevive = this._stage !== StageType.Free || this.reviveCount === 0;\n\n        if (!this.firstDead && canRevive) {\n            this.firstDead = true;\n            this.waitToDie = true;\n            this.reviveTime = 5;\n            this.waitToRevive = false;\n            this.showRebornEffect = HeroRebornEffectState.Close;\n\n            if (this.moveByTouch) {\n                this.moveByTouch.touchEndEvent();\n            }\n\n            // this.followPlayer.knifeCollisionSoundCtrl.stop();\n            // this.followPlayer.node.active = false;\n            // this.followPlayer.knivesCmp.emitAllKnivesRelease();\n            this.rankIconNode.active = false;\n            this._flagNode.active = false;\n            if (this._keyNode) this._keyNode.active = false;\n            this.followPlayer.die();\n            this.buffComp.die();\n            this.suitComp.die();\n            if (this.aiMgr) {\n                this.aiMgr.onDie();\n            }\n\n            this.activeNode.active = false;\n            this.bodyCollider.notColliderFlag = true;\n            // this.pickCollider.notColliderFlag = true;\n            this.playerName.node.active = false;\n            if (this._defenceTips) this._defenceTips.active = false;\n            if (this._defenceStartEffect) this._defenceStartEffect.node.active = false;\n            if (this._attackStartEffect) this._attackStartEffect.node.active = false;\n\n\n            if (knife && knife.node) {\n                var followPlayer = knife.node.parent.parent.getComponent('EntityFollowPlayer');\n                var guide = knife.node.parent.getComponent('EntityGuide');\n                if (followPlayer) {\n                    this.killer = followPlayer.player;\n                } else if (guide) {\n                    this.killer = guide.player;\n                } else {\n                    this.killer = null;\n                }\n\n                if (this.killer) {\n                    this.killer.addKillNum(this);\n                }\n            }\n\n            this._dieEffect.node.active = true;\n            this._dieEffect.playParticle();\n            if (this.isLocal && knife) {\n                AudioEngine.instance.playSound(SoundID.Death);\n            } else {\n                AudioEngine.instance.playSound(SoundID.Kill);\n            }\n            return;\n        }\n\n        if (this.waitToDie) {\n            return;\n        }\n        // }\n\n        if (!this.isDead) {\n            this.isDead = true;\n            if (this.moveByTouch) {\n                this.moveByTouch.touchEndEvent();\n            }\n            this.followPlayer.die();\n            this.buffComp.die();\n            this.suitComp.die();\n            if (this.aiMgr) {\n                this.aiMgr.onDie();\n            }\n            this.activeNode.active = false;\n            this.bodyCollider.notColliderFlag = true;\n            // this.pickCollider.notColliderFlag = true;\n            this.playerName.node.active = false;\n            this.rankIconNode.active = false;\n            this._flagNode.active = false;\n            if (this._keyNode) this._keyNode.active = false;\n            if (knife && knife.node) {\n                var followPlayer = knife.node.parent.parent.getComponent('EntityFollowPlayer');\n                this.killer = followPlayer ? followPlayer.player : null;\n                if (this.killer) {\n                    this.killer.addKillNum(this);\n                }\n            }\n\n            this._dieEffect.node.active = false;\n            if (this._defenceTips) this._defenceTips.active = false;\n            if (this._defenceStartEffect) this._defenceStartEffect.node.active = false;\n            if (this._attackStartEffect) this._attackStartEffect.node.active = false;\n\n\n            if (this.isLocal && knife) {\n                AudioEngine.instance.playSound(SoundID.Death);\n            } else {\n                // AudioEngine.instance.playSound(SoundID.Kill);\n            }\n            if (this.deadCallbcak) {\n                this.deadCallbcak(this.node.position);\n            }\n        }\n    },\n\n    revive: function (isFrenzy) {\n\n        this.firstDead = false;\n        this.waitToDie = false;\n        this.activeNode.active = true;\n        this.bodyCollider.notColliderFlag = false;\n        // this.pickCollider.notColliderFlag = false;\n        this.playerName.node.active = true;\n        this.followPlayer.node.active = true;\n        this.rankIconNode.active = true;\n        this._flagNode.active = true;\n        this._dieEffect.node.active = false;\n        this.reviveCount++;\n        this.flag = false;\n        if (this._keyNode) this._keyNode.active = this.isKey;\n\n        if (this.isLocal) {\n            this.invincible = true;\n            this.invincibleTime = 2.0;\n        }\n        if (isFrenzy) {\n            this.node.emit('onReviveFrenzyAdd', FrenzyAddType.revive);\n        }\n        // this.setSage(true);\n    },\n\n    updateDieLogic: function (dt) {\n        if (this.invincible) {\n            this.invincibleTime -= dt;\n            if (this.invincibleTime < 0) {\n                this.invincible = false;\n                // this.setSage(false);\n            }\n        }\n    },\n\n    setSage: function (value) {\n        // this.isSage = value;\n        // this.node.opacity = value ? 128 : 255;\n        // this.followPlayer.node.emit('setSage', value);\n    },\n\n    updateReviveLogic: function (dt) {\n        if (this.firstDead) {\n            this.reviveTime -= dt;\n            if (this.reviveTime < 0) {\n                this.waitToRevive = true;\n            } else if (this.reviveTime < 2) {\n                if (this.showRebornEffect === HeroRebornEffectState.Close) {\n                    this.showRebornEffect = HeroRebornEffectState.waitToShow;\n                }\n            }\n        }\n    },\n\n    initWalls: function (type, walls, width, height) {\n        switch (type) {\n            case 0:\n                this.moveFix = Tools.getOrAddComponent(this.node, 'HeroMoveFix');\n                this.moveFix.init(this.colliderNode.getComponent(cc.Collider));\n                this.moveFix.initWalls(walls);\n                break;\n            case 1:\n                this.moveFix = Tools.getOrAddComponent(this.node, 'HeroMoveFixByCircle');\n                this.moveFix.init(this.colliderNode.getComponent(cc.Collider), this.followPlayer);\n                this.moveFix.refresh(width, height);\n                break;\n        }\n        if (this.aiMgr) {\n            this.aiMgr.initWalls(type);\n        }\n        if (this.myGuideComp) {\n            this.myGuideComp.initWalls(type, walls, width, height);\n        }\n    },\n\n    refreshWalls: function (width, height) {\n        this.moveFix.refresh(width, height);\n        this.myGuideComp.moveFix.refresh(width, height)\n    },\n\n\n    addKnife: function (detail) {\n        if (this.isNoMoreKnife()) {\n            detail.getComponent('EntityKnife').reLand();\n        } else {\n            this.followPlayer.knivesCmp.addKnife(detail);\n        }\n    },\n\n    addBuff: function (buffId) {\n        if (this.beKilled()) return;\n        this.node.emit('updateBuffState', buffId);\n    },\n\n    /** @override */\n    updateGameLogic: function (dt, world) {\n\n        var knifes = world.knifes;\n        this.updateDieLogic(dt);\n\n        if (!this.beKilled() && this.aiMgr) {\n            this.aiMgr.updateGameLogic(dt);\n        }\n\n        this.heroMove.updateGameLogic(dt);\n        this.heroScale.updateGameLogic(dt);\n        this.moveFixByBlock.updateGameLogic(dt);\n        if (this.moveFix) {\n            this.moveFix.updateGameLogic(dt);\n        }\n        if (this.moveGuideFix) {\n            this.moveGuideFix.updateGameLogic(dt);\n        }\n\n        this.followPlayer.updateGameLogic(dt);\n        this.logicPlayer.updateLogic(dt);\n\n        if (this.speedShadow) this.speedShadow.updateGameLogic(dt);\n        if (this.canMagnet) this.updateMagnetLogic(dt, knifes)\n\n\n        this.buffComp.updateGameLogic(dt);\n        if (!this.beKilled()) {\n            this.suitComp.updateGameLogic(dt, world, knifes);\n        }\n\n        if (this.updateKey) {\n            world.updateKeyCount(this.otherKeyNode);\n            this.updateKey = false;\n        }\n        // if (this.isLocal) this.updateLightingLogic(dt, world, knifes);\n        // this.drawLighting();\n    },\n    // update (dt) {},\n\n    getKnifeNum: function () {\n        return this.followPlayer.knivesCmp.getKnifeNum();\n    },\n\n    stopControl: function () {\n        this.isStopCtrl = true;\n        this.moveByKeyboard.enabled = false;\n        this.moveByTouch.enabled = false;\n        this.MoveStateNotice.enabled = false;\n    },\n\n    changeName: function (name) {\n        this.name = name ? name : 'player';\n        this.playerName.nickname.string = this.name;\n        var width = Tools.getStrlen(this.name) * 10 + 10;\n        this.playerName.frameNode.width = width\n        this._rankComp.bg.width = width;\n        this._rankComp.icon.node.x = width / 2;\n        this._flagComp.icon.node.x = -width / 2;\n        this.nameDirty = true;\n    },\n\n    setLocalHero: function (hero) {\n        if (!this.isLocal && this.aiMgr) {\n            this.aiMgr.setLocalHero(hero);\n        }\n\n    },\n\n\n    setInView: function (isShow) {\n        // if (this.playerName.node.active !== isShow && !this.beKilled()) {\n        //     this.playerName.node.active = isShow && !this.beKilled();\n        // }\n\n        this.isInView = isShow;\n    },\n\n    heroStartMove: function () {\n        if (this.isStopCtrl) return;\n        this.isDefence = false;\n        this.invincible = false;\n        if (this._defenceTips) {\n            // this._defenceTips.active = false;\n        }\n        if (this._attackStartEffect && !this.isDead) {\n            if (this._defenceStartEffect) this._defenceStartEffect.node.active = false;\n            this._attackStartEffect.node.active = true;\n            this._attackStartEffect.play();\n        }\n    },\n\n    heroStopMove: function () {\n        if (this.isStopCtrl) return;\n        this.isDefence = true;\n        if (this._defenceTips && !this.isCollisionWall & !this.isDead) {\n            // this._defenceTips.active = true;\n        }\n        if (this._defenceStartEffect && !this.isCollisionWall & !this.isDead) {\n            if (this._attackStartEffect) this._attackStartEffect.node.active = false;\n            this._defenceStartEffect.node.active = true;\n            this._defenceStartEffect.play();\n        }\n    },\n\n\n    setFinalRank: function (rank) {\n        if (!this.flag) {\n            this.flag = true;\n            this.rank = rank;\n        }\n    },\n\n    setKillCallback: function (callback) {\n        this.killCallbcak = callback;\n    },\n\n    setDeadCallback: function (callback) {\n        this.deadCallbcak = callback;\n    },\n\n    setChangeKnifeCountCallback: function (callback) {\n        this.changeKnifeCountCallback = callback;\n    },\n\n\n    addKillNum: function (other) {\n        if (this.isLocal && other.isKey) {\n            other.isKey = false;\n            this.updateKey = true;\n            this.otherKeyNode = other.node;\n        }\n        this.killNum++;\n        // this.node.emit('onFrenzyAdd', FrenzyAddType.kill);\n        this.node.emit('onFrenzyAdd', FrenzyAddType.kill);\n        if (this.killCallbcak) this.killCallbcak();\n    },\n\n    addKnifeNum: function (knifeCount) {\n        if (!this.isLocal) return\n        this.pickKnifeCount++;\n        this.maxPickKnifeCount = Math.max(this.maxPickKnifeCount, knifeCount);\n        // console.log('累计刀数 ', this.pickKnifeCount)\n        // console.log('最大刀数 ', this.maxPickKnifeCount)\n    },\n\n    //拼掉对手飞刀的数量\n    addKillKnifeNum: function () {\n        if (!this.isLocal) return\n        this.killKnifeCount++;\n        // console.log('累计拼掉刀数 ', this.pickKnifeCount)\n    },\n\n    //#region buff属性\n    isHard: function () {\n        var ret = false;\n\n        if (this.buffChangeListener) {\n            ret = this.buffChangeListener.isHard();\n        }\n\n        return ret;\n    },\n\n    isInvincible: function () {\n        var ret = false;\n\n        if (this.buffChangeListener) {\n            ret = this.buffChangeListener.isInvincible();\n        }\n\n        return ret;\n    },\n\n    isFrenzy: function () {\n        var ret = false;\n\n        if (this.playerFrenzyComp) {\n            ret = this.playerFrenzyComp.isFrenzy();\n        } else if (this.playerReviveFrenzyComp) {\n            ret = this.playerReviveFrenzyComp.isFrenzy();\n        }\n\n        return ret;\n    },\n    //#endregion\n\n    isNoMoreKnife: function () {\n        return !this.isInView && this.aiMgr && this.getKnifeNum() >= this.aiMgr.getNoMoreKnifeNum();\n    },\n\n    canRevive: function () {\n        return this.aiMgr && this.reviveCount < this.aiMgr.getReviveTotal();\n    },\n\n    refreshPowerArrow: function (localPlayer) {\n        if (this._powerArrow) this._powerArrow.refresh(this, localPlayer);\n    },\n\n    closePowerArrow: function () {\n        if (this._powerArrow) this._powerArrow.close();\n    },\n\n    changeAttackPower: function (count) {\n        this.attackPower = count;\n    },\n\n    changeDefencePower: function (count) {\n        this.defencePower = count;\n    },\n\n    setGoldAddition: function (count) {\n        this.goldAddition = count;\n    },\n\n    changeGrowSpeedAddition: function (count) {\n        this.heroMove.changeGrowSpeedAddition(count);\n    },\n\n    isCollCircleWall: function (state) {\n        this.followPlayer.node.emit('isCollCircleWall', state);\n    },\n\n    showTips: function (type) {\n        if (this.beKilled() || !this._defenceTips) return;\n        if (this.tipsType === type) return;\n        this.tipsType = type;\n        if (!this._defenceTips.active) this._defenceTips.active = true;\n\n        var tips = this._defenceTips.children[1].children;\n        var bubble = this._defenceTips.children[0];\n        if (!tips) return;\n        for (let i = 0; i < tips.length; i++) {\n            var tip = tips[i];\n            if (!tip) return;\n            if (i === type) {\n                tip.active = true;\n                if (bubble) bubble.width = 50 + tip.width;\n            } else {\n                tip.active = false;\n            }\n        }\n    },\n\n    closeTips: function (type) {\n        if (this.tipsType === null) return;\n        this.tipsType = null;\n        if (this._defenceTips) {\n            this._defenceTips.active = false;\n            var tips = this._defenceTips.children[1].children;\n            for (let i = 0; i < tips.length; i++) {\n                var tip = tips[i];\n                if (!tip) return;\n                tip.active = false;\n            }\n        }\n    },\n\n    changeMagnet: function (state) {\n        this.canMagnet = state;\n    },\n\n\n\n    updateMagnetLogic: function (dt, knifes) {\n\n        var multip = this.heroScale.newScaleMultip;\n        var newScale = ((this.node.scale - multip) / 1.5) + multip;\n        var index = 0;\n        for (const knife of knifes) {\n            if (knife.teamID === 0 && knife.knifeStateComp.state === KnifeState.Normal && !knife.knifeColliderNodeCtrl.attackCollider.notColliderFlag) {\n                // var worldPos = knife.node.parent.convertToWorldSpaceAR(knife.node.position);\n                // var dir = this.node.convertToNodeSpaceAR(worldPos);\n                // var dis = dir.mag()\n                var dir = knife.node.position.sub(this.node.position);\n                var dis = dir.mag();\n                // knife.dislabel.string = Math.floor(dis);\n                if (dis < (380 * newScale)) {\n                    index++;\n                    // knife.node.emit('onPickUpKnife', this.pickCollider);\n                    dir = dir.normalize().mul(20)\n                    var finalPosition = knife.node.position.sub(dir);\n                    // knife.draw(this.node.position);\n                    knife.knifeMoveCtrl.finalPosition = finalPosition;\n                }\n            }\n        }\n    },\n\n    updateLightingLogic(dt, world, knifes) {\n\n    },\n\n    showNameNode: function (show) {\n        this.playerName.node.active = show;\n        this._flagNode.active = show;\n    },\n\n    setScale: function (scale) {\n        this.node.emit('changeScaleMultip', scale);\n        this.followPlayer.node.emit('changeScaleMultip', scale);\n    },\n    changeColliderState(state) {\n        this.nodeCollider.node.active = state;\n        this.followPlayer.changeColliderState(state);\n    },\n\n    killByGuide() {\n        this.node.emit('onStopMove', true);\n    },\n\n    changePosArrTarget(target) {\n        var length = this.posArrowPool.length;\n        for (let i = 0; i < length; i++) {\n            var posArr = this.posArrowPool[i];\n            posArr.changeLocalPlayer(target);\n        }\n    },\n\n    openShadow() {\n        this.speedShadow = Tools.getOrAddComponent(this.node, 'SpeedShadow');\n        this.speedShadow.init(this.heroSkin.url, this.shadowNode);\n    },\n\n    closeShadow() {\n        if (this.speedShadow) this.speedShadow.close();\n    },\n\n    changeOpacity(opacity) {\n        this.node.opacity = opacity;\n        this.followPlayer.node.opacity = opacity;\n    }\n});"]}