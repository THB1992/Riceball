{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\system/assets\\scripts\\battle\\system\\HeroCollisionHandleSystem.js"],"names":["BaseCollisionHandleSystem","require","VibrateUtil","GameData","HeroCollisionHandleSystem","cc","Class","extends","properties","_eventListName","default","override","handelCollisionEvent","event","other","self","node","group","tag","instance","localHeroTid","vibrate","isKillingByGuide","emit","setTimeout","parent","position","updateGameLogic","dt","_super","_collisionEventMgr","clearHeroEvent"],"mappings":";;;;;;AAAA;;;;AAIA,IAAMA,4BAA4BC,QAAQ,2BAAR,CAAlC;AACA,IAAMC,cAAcD,QAAQ,aAAR,CAApB;AACA,IAAME,WAAWF,QAAQ,UAAR,CAAjB;;AAEA;;;;AAIA,IAAIG,4BAA4BC,GAAGC,KAAH,CAAS;AACrCC,aAASP,yBAD4B;;AAGrCQ,gBAAY;AACRC,wBAAgB;AACZC,qBAAS,qBADG;AAEZC,sBAAU;AAFE;AADR,KAHyB;AASrC;AACAC,0BAAsB,8BAAUC,KAAV,EAAiB;AAAA;;AACnC,YAAIC,QAAQD,MAAM,CAAN,CAAZ;AACA,YAAIE,OAAOF,MAAM,CAAN,CAAX;AACA,gBAAQC,MAAME,IAAN,CAAWC,KAAnB;AACI;AACA,iBAAK,OAAL;AACA,iBAAK,KAAL;AACI;AACA,oBAAIH,MAAMI,GAAN,KAAcH,KAAKG,GAAnB,IAA0BJ,MAAMI,GAAN,KAAc,CAA5C,EAA+C;AAC3C;AACH;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAIJ,MAAMI,GAAN,KAAcf,SAASgB,QAAT,CAAkBC,YAApC,EAAkD;AAC9ClB,gCAAYmB,OAAZ,CAAoB,IAApB;AACH;AACD;AACA,oBAAI,CAAC,KAAKC,gBAAV,EAA4B;AACxBP,yBAAKC,IAAL,CAAUO,IAAV,CAAe,WAAf,EAA4B,CAAC,KAAD,EAAQT,KAAR,CAA5B;AACA;AACA,yBAAKE,IAAL,CAAUO,IAAV,CAAe,iBAAf,EAAkCV,KAAlC;AACH;AACD;AACJ,iBAAK,OAAL;AACIE,qBAAKC,IAAL,CAAUO,IAAV,CAAe,WAAf,EAA4B,CAAC,YAAD,EAAeT,KAAf,CAA5B;AACA;AACJ;AACA,iBAAK,WAAL;AACI,oBAAIA,MAAMI,GAAN,KAAcH,KAAKG,GAAnB,IAA0BJ,MAAMI,GAAN,KAAc,CAA5C,EAA+C;AAC3C;AACH;AACD,oBAAI,KAAKI,gBAAT,EAA2B;AAC3B,qBAAKA,gBAAL,GAAwB,IAAxB;;AAEAP,qBAAKC,IAAL,CAAUO,IAAV,CAAe,WAAf,EAA4B,CAAC,aAAD,EAAgBT,KAAhB,CAA5B;AACAU,2BAAW,YAAM;AACb,wBAAIV,MAAMI,GAAN,KAAcf,SAASgB,QAAT,CAAkBC,YAApC,EAAkD;AAC9ClB,oCAAYmB,OAAZ,CAAoB,IAApB;AACH;AACDN,yBAAKC,IAAL,CAAUO,IAAV,CAAe,WAAf,EAA4B,CAAC,KAAD,EAAQT,KAAR,CAA5B;AACA,0BAAKE,IAAL,CAAUO,IAAV,CAAe,iBAAf,EAAkCV,KAAlC;AACA,0BAAKS,gBAAL,GAAwB,KAAxB;AACH,iBAPD,EAOG,IAPH;;AASAR,sBAAME,IAAN,CAAWS,MAAX,CAAkBF,IAAlB,CAAuB,YAAvB,EAAqCR,KAAKC,IAAL,CAAUS,MAAV,CAAiBC,QAAtD;AACA;AAjDR;AAmDH,KAhEoC;;AAkErCC,qBAAiB,yBAAUC,EAAV,EAAc;AAC3B,aAAKC,MAAL,CAAYD,EAAZ;AACA,aAAKE,kBAAL,CAAwBC,cAAxB;AACH;;AArEoC,CAAT,CAAhC","file":"HeroCollisionHandleSystem.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\system","sourcesContent":["/**\n * @fileoverview 玩家碰撞事件处理系统\n * @author jinhaitao@gameley.cn (金海涛)\n */\nconst BaseCollisionHandleSystem = require('BaseCollisionHandleSystem');\nconst VibrateUtil = require('VibrateUtil');\nconst GameData = require('GameData');\n\n/**\n * 专门处理玩家碰撞系统\n */\n\nvar HeroCollisionHandleSystem = cc.Class({\n    extends: BaseCollisionHandleSystem,\n\n    properties: {\n        _eventListName: {\n            default: '_heroCollisionEvent',\n            override: true,\n        },\n    },\n    /** @override */\n    handelCollisionEvent: function (event) {\n        var other = event[0];\n        var self = event[1];\n        switch (other.node.group) {\n            // case 'otherKnife':\n            case 'knife':\n            case 'ray':\n                // 如果是一组的直接跳过\n                if (other.tag === self.tag || other.tag === 0) {\n                    return;\n                }\n\n                // var followPlayer = other.node.parent.parent.getComponent('EntityFollowPlayer');\n                // var killer = followPlayer ? followPlayer.player : null;\n                // if(killer && killer.isSage) {\n                //     // 刀的主人处于贤者模式 不杀人\n                //     return;\n                // }\n\n                // 如果是被我的刀杀得播振动\n                if (other.tag === GameData.instance.localHeroTid) {\n                    VibrateUtil.vibrate(true);\n                }\n                // 通知玩家节点，死亡\n                if (!this.isKillingByGuide) {\n                    self.node.emit('emitEvent', ['die', other]);\n                    // 通知世界击杀信息\n                    this.node.emit('killMessageShow', event);\n                }\n                break;\n            case 'block':\n                self.node.emit('emitEvent', ['fixByBlock', other]);\n                break;\n            //这里的pickknife实际是蝙蝠侠的幻影\n            case 'pickKnife':\n                if (other.tag === self.tag || other.tag === 0) {\n                    return;\n                }\n                if (this.isKillingByGuide) return;\n                this.isKillingByGuide = true;\n\n                self.node.emit('emitEvent', ['killByGuide', other]);\n                setTimeout(() => {\n                    if (other.tag === GameData.instance.localHeroTid) {\n                        VibrateUtil.vibrate(true);\n                    }\n                    self.node.emit('emitEvent', ['die', other]);\n                    this.node.emit('killMessageShow', event);\n                    this.isKillingByGuide = false;\n                }, 1000)\n\n                other.node.parent.emit('catchEnemy', self.node.parent.position);\n                break;\n        }\n    },\n\n    updateGameLogic: function (dt) {\n        this._super(dt);\n        this._collisionEventMgr.clearHeroEvent();\n    }\n\n\n});"]}