{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui/assets\\scripts\\battle\\ui\\PanelTaskNotice.js"],"names":["ItemType","require","UIUtil","ConfigData","AddEntitySystem","cc","Class","extends","Component","properties","taskLabel","Label","taskIcon","Sprite","init","data","callback","rewardData","rewardType","HERO_SKIN","instance","getHeroSkinById","rewardId","node","scale","loadResSprite","url","getKnifeSkinById","string","name"],"mappings":";;;;;;AAAA,IAAMA,WAAWC,QAAQ,OAAR,EAAiBD,QAAlC;AACA,IAAME,SAASD,QAAQ,QAAR,CAAf;AACA,IAAME,aAAaF,QAAQ,YAAR,CAAnB;AACA,IAAMG,kBAAkBH,QAAQ,iBAAR,CAAxB;AACAI,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,mBAAWL,GAAGM,KADN;AAERC,kBAAUP,GAAGQ;AAFL,KAHP;;AAQL;;AAEA;;AAEAC,QAZK,gBAYAC,IAZA,EAYMC,QAZN,EAYgB;AACjB,YAAIC,aAAa,EAAjB;AACA,YAAIF,KAAKG,UAAL,KAAoBlB,SAASmB,SAAjC,EAA4C;AACxCF,yBAAad,WAAWiB,QAAX,CAAoBC,eAApB,CAAoCN,KAAKO,QAAzC,CAAb;AACA,iBAAKV,QAAL,CAAcW,IAAd,CAAmBC,KAAnB,GAA2B,GAA3B;AACAtB,mBAAOuB,aAAP,CAAqB,KAAKb,QAA1B,EAAoCK,WAAWS,GAA/C;AACA;AACH,SALD,MAKO;AACHT,yBAAad,WAAWiB,QAAX,CAAoBO,gBAApB,CAAqCZ,KAAKO,QAA1C,CAAb;AACA,iBAAKV,QAAL,CAAcW,IAAd,CAAmBC,KAAnB,GAA2B,CAA3B;AACAtB,mBAAOuB,aAAP,CAAqB,KAAKb,QAA1B,EAAoCK,WAAWS,GAA/C;AACH;;AAED,aAAKhB,SAAL,CAAekB,MAAf,GAAwBX,WAAWY,IAAnC;AACA,aAAKb,QAAL,GAAgBA,QAAhB;AACH;AA3BI;;AA6BL;AA7BJ","file":"PanelTaskNotice.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["const ItemType = require('Types').ItemType;\r\nconst UIUtil = require('UIUtil');\r\nconst ConfigData = require('ConfigData');\r\nconst AddEntitySystem = require('AddEntitySystem');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        taskLabel: cc.Label,\r\n        taskIcon: cc.Sprite,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    init(data, callback) {\r\n        var rewardData = {};\r\n        if (data.rewardType === ItemType.HERO_SKIN) {\r\n            rewardData = ConfigData.instance.getHeroSkinById(data.rewardId);\r\n            this.taskIcon.node.scale = 0.5;\r\n            UIUtil.loadResSprite(this.taskIcon, rewardData.url);\r\n            // AddEntitySystem.instance.loadHeroSkinSprite(this.taskIcon, rewardData.skinIndex);\r\n        } else {\r\n            rewardData = ConfigData.instance.getKnifeSkinById(data.rewardId);\r\n            this.taskIcon.node.scale = 1;\r\n            UIUtil.loadResSprite(this.taskIcon, rewardData.url);\r\n        }\r\n\r\n        this.taskLabel.string = rewardData.name;\r\n        this.callback = callback;\r\n    },\r\n\r\n    // update (dt) {},\r\n});"]}