{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\test/assets\\scripts\\test\\TestTimer.js"],"names":["Tools","require","GameData","cc","Class","extends","Component","properties","start","init","console","log","getTimestampMS","instance","_curTime","callF","i","setTimeout","logUseTime"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBI;;AAELN,iBAASO,IAAT;AACAC,gBAAQC,GAAR,CAAY,cAAcX,MAAMY,cAAN,EAA1B;AACAV,iBAASW,QAAT,CAAkBC,QAAlB,GAA6Bd,MAAMY,cAAN,EAA7B;;AAEA,YAAIG,QAAQ,SAARA,KAAQ,GAAY,CACvB,CADD;;AAGA,aAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAI,KAAnB,EAA0BA,GAA1B,EAA+B;AAC3B;AACAC,uBAAWF,KAAX,EAAkBC,IAAI,GAAtB;AACH;;AAEDd,iBAASW,QAAT,CAAkBK,UAAlB;AACH;AAxCI;;AA0CL;AA1CJ","file":"TestTimer.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\test","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst Tools = require('Tools');\nconst GameData = require('GameData');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n        GameData.init();\n        console.log('curTime: ' + Tools.getTimestampMS());\n        GameData.instance._curTime = Tools.getTimestampMS();\n\n        var callF = function () {\n        }\n\n        for(var i = 0; i < 10000; i++) {\n            // this.scheduleOnce(callF, i * 100);\n            setTimeout(callF, i * 100);\n        }\n\n        GameData.instance.logUseTime();\n    },\n\n    // update (dt) {},\n});\n"]}