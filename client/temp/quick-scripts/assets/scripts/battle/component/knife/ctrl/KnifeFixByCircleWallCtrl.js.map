{"version":3,"sources":["KnifeFixByCircleWallCtrl.js"],"names":["KnifeState","require","KnifeMomentState","cc","Class","extends","Component","properties","lastPos","v2","init","knifeStateComp","node","getComponent","knifeMomentStateComp","refresh","width","height","updateLogic","dt","knifeOwnerComp","owner","comp","knivesCmp","isCollCircleWall","isCollisionWall","relativePos","parent","convertToWorldSpaceAR","position","pos","convertToNodeSpaceAR","dir","normalize","distance","mag","add","mul"],"mappings":";;;;;;AAAA,IAAMA,aAAaC,QAAQ,OAAR,EAAiBD,UAApC;AACA,IAAME,mBAAmBD,QAAQ,OAAR,EAAiBC,gBAA1C;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,iBAASL,GAAGM,EAAH,CAAM,CAAN,EAAS,CAAT;AADD,KAHP;;AASLC,UAAM,gBAAY;AACd,aAAKC,cAAL,GAAsB,KAAKC,IAAL,CAAUC,YAAV,CAAuB,qBAAvB,CAAtB;AACA,aAAKC,oBAAL,GAA4B,KAAKF,IAAL,CAAUC,YAAV,CAAuB,2BAAvB,CAA5B;AACH,KAZI;;AAcLE,aAAS,iBAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC9B,aAAKD,KAAL,GAAaA,QAAQ,CAArB;AACA,aAAKC,MAAL,GAAcA,SAAS,CAAvB;AACH,KAjBI;;AAmBLC,iBAAa,qBAAUC,EAAV,EAAc;AACvB,YAAI,CAAC,KAAKC,cAAV,EAA0B,KAAKA,cAAL,GAAsB,KAAKR,IAAL,CAAUC,YAAV,CAAuB,qBAAvB,CAAtB;AAC1B,YAAI,KAAKO,cAAL,CAAoBC,KAAxB,EAA+B;;AAE3B,gBAAIC,OAAO,KAAKF,cAAL,CAAoBC,KAApB,CAA0BR,YAA1B,CAAuC,oBAAvC,EAA6DU,SAAxE;AACA,gBAAID,KAAKE,gBAAL,IAAyBF,KAAKG,eAAlC,EAAmD;;AAE/C,oBAAIC,cAAc,KAAKd,IAAL,CAAUe,MAAV,CAAiBC,qBAAjB,CAAuC,KAAKhB,IAAL,CAAUiB,QAAjD,CAAlB;AACA,oBAAIC,MAAM,KAAKlB,IAAL,CAAUe,MAAV,CAAiBA,MAAjB,CAAwBI,oBAAxB,CAA6CL,WAA7C,CAAV;AACA,oBAAIM,MAAMF,IAAIG,SAAJ,EAAV;AACA,oBAAIC,WAAW,KAAKlB,KAAL,GAAac,IAAIK,GAAJ,EAAb,GAAyB,EAAxC;AACA,oBAAID,WAAW,CAAf,EAAkB;AACd;AACA;AACA;AACA;AACAJ,0BAAMA,IAAIM,GAAJ,CAAQJ,IAAIK,GAAJ,CAAQH,QAAR,CAAR,CAAN;AACAR,kCAAc,KAAKd,IAAL,CAAUe,MAAV,CAAiBA,MAAjB,CAAwBC,qBAAxB,CAA8CE,GAA9C,CAAd;AACAA,0BAAM,KAAKlB,IAAL,CAAUe,MAAV,CAAiBI,oBAAjB,CAAsCL,WAAtC,CAAN;AACA,yBAAKd,IAAL,CAAUiB,QAAV,GAAqBC,GAArB;AACH,iBATD,MASO;AACH;AACA;AACA;AACA;AACH;AACJ;AACJ;;AAED;AACA;AACH;AACD;AAnDK,CAAT","file":"KnifeFixByCircleWallCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\knife\\ctrl","sourcesContent":["const KnifeState = require('Types').KnifeState;\r\nconst KnifeMomentState = require('Types').KnifeMomentState;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        lastPos: cc.v2(0, 0),\r\n    },\r\n\r\n\r\n\r\n    init: function () {\r\n        this.knifeStateComp = this.node.getComponent('KnifeStateComponent');\r\n        this.knifeMomentStateComp = this.node.getComponent('KnifeMomentStateComponent');\r\n    },\r\n\r\n    refresh: function (width, height) {\r\n        this.width = width / 2;\r\n        this.height = height / 2;\r\n    },\r\n\r\n    updateLogic: function (dt) {\r\n        if (!this.knifeOwnerComp) this.knifeOwnerComp = this.node.getComponent('KnifeOwnerComponent');\r\n        if (this.knifeOwnerComp.owner) {\r\n\r\n            var comp = this.knifeOwnerComp.owner.getComponent('EntityFollowPlayer').knivesCmp;\r\n            if (comp.isCollCircleWall || comp.isCollisionWall) {\r\n\r\n                var relativePos = this.node.parent.convertToWorldSpaceAR(this.node.position);\r\n                var pos = this.node.parent.parent.convertToNodeSpaceAR(relativePos);\r\n                var dir = pos.normalize();\r\n                var distance = this.width - pos.mag() - 25;\r\n                if (distance < 0) {\r\n                    // if (!this.isColl) {\r\n                    //     this.isColl = true;\r\n                    //     this.node.emit('isCollCircleWall', true);\r\n                    // }\r\n                    pos = pos.add(dir.mul(distance))\r\n                    relativePos = this.node.parent.parent.convertToWorldSpaceAR(pos);\r\n                    pos = this.node.parent.convertToNodeSpaceAR(relativePos);\r\n                    this.node.position = pos;\r\n                } else {\r\n                    // if (this.isColl) {\r\n                    //     this.isColl = false;\r\n                    //     this.node.emit('isCollCircleWall', false);\r\n                    // }\r\n                }\r\n            }\r\n        }\r\n\r\n        // var coll=this.mapRadius - heroRadius \r\n        // if(distance)\r\n    },\r\n    // update (dt) {},\r\n});"]}