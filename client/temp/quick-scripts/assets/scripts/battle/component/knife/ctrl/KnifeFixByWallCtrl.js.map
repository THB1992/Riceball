{"version":3,"sources":["KnifeFixByWallCtrl.js"],"names":["KnifeState","require","cc","Class","extends","Component","properties","resetTime","_curResetTime","_waitResetTime","allWaitTime","refresh","width","height","updateLogic","dt","knifeOwnerComp","node","getComponent","owner","comp","knivesCmp","isCollCircleWall","isCollisionWall","relativePos","parent","convertToWorldSpaceAR","position","pos","convertToNodeSpaceAR","distanceX","Math","abs","x","dir","v2","normalize","add","mul","distanceY","y"],"mappings":";;;;;;AAAA,IAAMA,aAAaC,QAAQ,OAAR,EAAiBD,UAApC;;AAEAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,mBAAW,IADH;AAERC,uBAAe,CAFP;AAGRC,wBAAgB,CAHR;AAIRC,qBAAa;AAJL,KAHP;;AAUL;;AAEA;;AAEAC,aAAS,iBAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC9B,aAAKD,KAAL,GAAaA,QAAQ,CAArB;AACA,aAAKC,MAAL,GAAcA,SAAS,CAAvB;AACH,KAjBI;;AAmBLC,iBAAa,qBAAUC,EAAV,EAAc;AACvB,YAAI,CAAC,KAAKC,cAAV,EAA0B,KAAKA,cAAL,GAAsB,KAAKC,IAAL,CAAUC,YAAV,CAAuB,qBAAvB,CAAtB;AAC1B,YAAI,KAAKF,cAAL,CAAoBG,KAAxB,EAA+B;;AAE3B,gBAAIC,OAAO,KAAKJ,cAAL,CAAoBG,KAApB,CAA0BD,YAA1B,CAAuC,oBAAvC,EAA6DG,SAAxE;AACA,gBAAID,KAAKE,gBAAL,IAAyBF,KAAKG,eAAlC,EAAmD;AAC/C,oBAAIC,cAAc,KAAKP,IAAL,CAAUQ,MAAV,CAAiBC,qBAAjB,CAAuC,KAAKT,IAAL,CAAUU,QAAjD,CAAlB;AACA,oBAAIC,MAAM,KAAKX,IAAL,CAAUQ,MAAV,CAAiBA,MAAjB,CAAwBI,oBAAxB,CAA6CL,WAA7C,CAAV;;AAEA,oBAAIM,YAAY,KAAKlB,KAAL,GAAamB,KAAKC,GAAL,CAASJ,IAAIK,CAAb,CAAb,GAA+B,EAA/C;AACA,oBAAIH,YAAY,CAAhB,EAAmB;AACf,wBAAII,MAAMhC,GAAGiC,EAAH,CAAMP,IAAIK,CAAV,EAAa,CAAb,EAAgBG,SAAhB,EAAV;AACAR,0BAAMA,IAAIS,GAAJ,CAAQH,IAAII,GAAJ,CAAQR,SAAR,CAAR,CAAN;AACAN,kCAAc,KAAKP,IAAL,CAAUQ,MAAV,CAAiBA,MAAjB,CAAwBC,qBAAxB,CAA8CE,GAA9C,CAAd;AACAA,0BAAM,KAAKX,IAAL,CAAUQ,MAAV,CAAiBI,oBAAjB,CAAsCL,WAAtC,CAAN;AACA,yBAAKP,IAAL,CAAUU,QAAV,GAAqBC,GAArB;AACH;;AAED,oBAAIW,YAAY,KAAK1B,MAAL,GAAckB,KAAKC,GAAL,CAASJ,IAAIY,CAAb,CAAd,GAAgC,EAAhD;AACA,oBAAID,YAAY,CAAhB,EAAmB;AACf,wBAAIL,MAAMhC,GAAGiC,EAAH,CAAM,CAAN,EAASP,IAAIY,CAAb,EAAgBJ,SAAhB,EAAV;AACAR,0BAAMA,IAAIS,GAAJ,CAAQH,IAAII,GAAJ,CAAQC,SAAR,CAAR,CAAN;AACAf,kCAAc,KAAKP,IAAL,CAAUQ,MAAV,CAAiBA,MAAjB,CAAwBC,qBAAxB,CAA8CE,GAA9C,CAAd;AACAA,0BAAM,KAAKX,IAAL,CAAUQ,MAAV,CAAiBI,oBAAjB,CAAsCL,WAAtC,CAAN;AACA,yBAAKP,IAAL,CAAUU,QAAV,GAAqBC,GAArB;AACH;AACJ;AACJ;AACJ;;AA/CI,CAAT","file":"KnifeFixByWallCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\knife\\ctrl","sourcesContent":["const KnifeState = require('Types').KnifeState;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        resetTime: 0.25,\n        _curResetTime: 0,\n        _waitResetTime: 0,\n        allWaitTime: 0.1,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    refresh: function (width, height) {\n        this.width = width / 2;\n        this.height = height / 2;\n    },\n\n    updateLogic: function (dt) {\n        if (!this.knifeOwnerComp) this.knifeOwnerComp = this.node.getComponent('KnifeOwnerComponent');\n        if (this.knifeOwnerComp.owner) {\n\n            var comp = this.knifeOwnerComp.owner.getComponent('EntityFollowPlayer').knivesCmp;\n            if (comp.isCollCircleWall || comp.isCollisionWall) {\n                var relativePos = this.node.parent.convertToWorldSpaceAR(this.node.position);\n                var pos = this.node.parent.parent.convertToNodeSpaceAR(relativePos);\n\n                var distanceX = this.width - Math.abs(pos.x) - 20;\n                if (distanceX < 0) {\n                    var dir = cc.v2(pos.x, 0).normalize();\n                    pos = pos.add(dir.mul(distanceX))\n                    relativePos = this.node.parent.parent.convertToWorldSpaceAR(pos);\n                    pos = this.node.parent.convertToNodeSpaceAR(relativePos);\n                    this.node.position = pos;\n                }\n\n                var distanceY = this.height - Math.abs(pos.y) - 20;\n                if (distanceY < 0) {\n                    var dir = cc.v2(0, pos.y).normalize();\n                    pos = pos.add(dir.mul(distanceY))\n                    relativePos = this.node.parent.parent.convertToWorldSpaceAR(pos);\n                    pos = this.node.parent.convertToNodeSpaceAR(relativePos);\n                    this.node.position = pos;\n                }\n            }\n        }\n    }\n\n});"]}