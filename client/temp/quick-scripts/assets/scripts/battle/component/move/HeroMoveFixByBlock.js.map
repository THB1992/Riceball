{"version":3,"sources":["HeroMoveFixByBlock.js"],"names":["Tools","require","cc","Class","extends","Component","properties","lastPos","v2","_collider","_collisionBlocks","_fixDir","_minX","_maxX","_minY","_maxY","_collisionFix","_offset","_wallColliders","onLoad","node","on","fixByBlock","init","detail","arrContains","push","updateGameLogic","dt","block","fixPositionByBlock","reset","x","position","y","radius","parent","scale","worldPos","convertToWorldSpaceAR","relativePos","convertToNodeSpaceAR","fixDir","moveLength","targetRot","normalize","mag","size","width","n","Math","abs","height","anchor","sub","rotate","rotation","add","mul","checkNeedDie","pos","die","emit"],"mappings":"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","file":"HeroMoveFixByBlock.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\move","sourcesContent":["/**\r\n * @fileoverview 玩家移动校正\r\n * @author jinhaitao@gameley.cn (金海涛)\r\n */\r\nconst Tools = require('Tools');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        lastPos: cc.v2(0, 0),\r\n        // _collisionWalls: [],\r\n        _collider: null,\r\n        _collisionBlocks: [],\r\n        _fixDir: null,\r\n        _minX: null,\r\n        _maxX: null,\r\n        _minY: null,\r\n        _maxY: null,\r\n\r\n        _collisionFix: [],\r\n        _offset: 6,\r\n        _wallColliders: [],\r\n    },\r\n\r\n    onLoad: function () {\r\n        // this.node.on('fixByWall', this.fixByWall, this);\r\n        this.node.on('fixByBlock', this.fixByBlock, this);\r\n    },\r\n\r\n    init: function (_collider) {\r\n        this._collider = _collider;\r\n    },\r\n\r\n    fixByBlock: function (detail) {\r\n        if (!Tools.arrContains(this._collisionBlocks, detail)) {\r\n            this._collisionBlocks.push(detail);\r\n        }\r\n    },\r\n\r\n    updateGameLogic: function (dt) {\r\n\r\n        for (var block of this._collisionBlocks) {\r\n            this.fixPositionByBlock(block);\r\n        }\r\n\r\n        // this.checkNeedDie();\r\n        this.reset();\r\n    },\r\n\r\n    fixPositionByBlock: function (block) {\r\n        if (this.lastPos.x === this.node.position.x && this.lastPos.y === this.node.position.y) {\r\n            return;\r\n        }\r\n        this.lastPos = this.node.position;\r\n\r\n        var radius = this._collider.radius * this._collider.node.parent.scale;\r\n        var worldPos = this.node.convertToWorldSpaceAR(this._collider.node.position);\r\n        var relativePos = block.node.convertToNodeSpaceAR(worldPos);\r\n        var fixDir = null;\r\n        var moveLength = 0;\r\n        var targetRot = relativePos.normalize();\r\n        if (block.radius) {\r\n            moveLength = relativePos.mag() - radius - block.radius * block.node.scale;\r\n        } else {\r\n            if (relativePos.x <= block.size.width / 2 && relativePos.x >= -block.size.width / 2) {\r\n                var n = (relativePos.y >= 0 ? 1 : -1);\r\n                fixDir = cc.v2(0, n);\r\n                moveLength = Math.abs(relativePos.y) - (block.size.height / 2 + radius);\r\n            } else if (relativePos.y <= block.size.height / 2 && relativePos.y >= -block.size.height / 2) {\r\n                var n = (relativePos.x >= 0 ? 1 : -1);\r\n                fixDir = cc.v2(n, 0);\r\n                moveLength = Math.abs(relativePos.x) - (block.size.width / 2 + radius);\r\n            } else {\r\n                var anchor = cc.v2((relativePos.x >= 0 ? 1 : -1) * block.size.width / 2, (relativePos.y >= 0 ? 1 : -1) * block.size.height / 2);\r\n                fixDir = relativePos.sub(anchor).normalize();\r\n                moveLength = relativePos.sub(anchor).mag() - radius;\r\n            }\r\n            targetRot = fixDir.rotate(block.node.rotation);\r\n        }\r\n\r\n        if (moveLength > 0) {\r\n            return;\r\n        }\r\n\r\n        moveLength -= this._offset;\r\n        this.node.position = this.node.position.add(targetRot.mul(-moveLength));\r\n    },\r\n\r\n\r\n    checkNeedDie: function () {\r\n        var pos = this.node.position;\r\n        if ((this._minX !== null && pos.x < this._minX) || (this._maxX !== null && pos.x > this._maxX) ||\r\n            (this._minY !== null && pos.y < this._minY) || (this._maxY !== null && pos.y > this._maxY)) {\r\n            this.die();\r\n        }\r\n    },\r\n\r\n    die: function () {\r\n        this.node.emit('die');\r\n    },\r\n\r\n    // 修正后重置\r\n    reset: function () {\r\n        this._collisionBlocks = [];\r\n        this._collisionFix = [];\r\n        this._minX = null;\r\n        this._maxX = null;\r\n        this._minY = null;\r\n        this._maxY = null;\r\n    }\r\n})"]}