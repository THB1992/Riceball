{"version":3,"sources":["ActionMove.js"],"names":["ActionBaseComponent","require","GameData","Tools","MapType","ActionMove","cc","Class","extends","properties","_curPos","_nextPos","_moveDir","_routePos","init","move","getOrAddComponent","node","_Width","instance","mapWidth","_height","mapHeight","_min","v2","_max","on","setMapSize","initWalls","type","wallType","moveMag","getCurSpeed","logicFps","detail","width","height","getReal","fixNextPos","value","ret","Circle","clampf","setNextPos","getNextPos","setRoutePos","updateGameLogic","dt","isActionIng","_checkIfFind","endAction","_CalMoveDir","emit","dPos","actionState","_super","position","sub","magSqr"],"mappings":"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","file":"ActionMove.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\player\\AI","sourcesContent":["/**\n * @fileoverview 移动行为\n * @author meifan@gameley.cn (梅凡)\n */\n\n// const ActionState = require('Types').ActionState;\nconst ActionBaseComponent = require('ActionBaseComponent');\nconst GameData = require('GameData');\nconst Tools = require('Tools');\nconst MapType = require('Types').MapType;\n\nconst ActionMove = cc.Class({\n    extends: ActionBaseComponent,\n\n    properties: {\n        _curPos: null,\n        _nextPos: null,\n        _moveDir: null,\n        _routePos: null,\n    },\n    \n    // CheckIfTrue: function () { },\n\n    // onLoad: function () {\n        // this.node.on('setNextPos', this.setNextPos, this);\n    // },\n\n    init : function () {\n        this.move = Tools.getOrAddComponent(this.node, 'HeroMove');\n\n        // this.moveSpeed = moveSpeed;\n        // this.moveMag = ((moveSpeed / GameData.instance.logicFps) * (moveSpeed / GameData.instance.logicFps)) + 30;\n\n        this._Width = GameData.instance.mapWidth * 0.9;\n        this._height = GameData.instance.mapHeight * 0.9;\n\n        this._min = cc.v2(-this._Width / 2, -this._height / 2);\n        this._max = cc.v2(this._Width / 2, this._height / 2);\n\n        this.node.on('setMapSize', this.setMapSize, this);\n        this.node.on('initWalls', this.initWalls, this);\n    },\n\n    initWalls: function (type) {\n        this.wallType = type;\n        this.setMapSize([this._Width, this._height]);\n    },\n\n    moveMag: function () {\n        if(this.move) {\n           return ((this.move.getCurSpeed() / GameData.instance.logicFps) * (this.move.getCurSpeed() / GameData.instance.logicFps)) + 30;\n        }\n        return 1000;\n    },\n\n    setMapSize: function (detail) {\n        const width = detail[0];\n        const height = detail[1];\n\n        this._Width = this.getReal(width);\n        this._height = this.getReal(height);\n\n        this._min = cc.v2(-this._Width / 2, -this._height / 2);\n        this._max = cc.v2(this._Width / 2, this._height / 2);\n\n\n        this.fixNextPos();\n    },\n\n    getReal: function (value) {\n        var ret = value * 0.9;\n        \n        if(this.wallType) {\n            if(this.wallType === MapType.Circle) {\n                ret = ret / 1.5;\n            }\n        }\n\n        return ret;\n    },\n\n    fixNextPos: function () {\n        this._nextPos = this._nextPos.clampf(this._min, this._max);\n        this._routePos = this._routePos ? this._routePos.clampf(this._min, this._max) : null;\n    },\n\n    // initWithParam: function (speedRate) {\n        // this.moveMag = ((this.moveSpeed * speedRate / GameData.instance.logicFps) * (this.moveSpeed * speedRate / GameData.instance.logicFps)) + 30;\n    // },\n\n    setNextPos: function (detail) {\n        this._nextPos = detail;\n        // cc.log('setNextPos: ' + this._nextPos);\n    },\n\n    getNextPos: function () {\n        // cc.log('getNextPos: ' + this._nextPos);\n        return this._nextPos;\n    },\n\n    setRoutePos: function (detail) {\n        this._routePos = detail;\n    },\n\n    updateGameLogic: function (dt) {\n        if(this.isActionIng()) {\n            if(this._checkIfFind()) {\n                this.endAction();\n            } else {\n                this._CalMoveDir();\n                this.node.emit('onMoveBy', {\n                    dPos: this._moveDir\n                });\n            }\n        }\n\n        return this.actionState;\n    },\n\n    /** overwrite */\n    endAction: function () {\n        this._super();\n        this.node.emit('onStopMoving');\n    },\n\n    _checkIfFind : function () {\n        this._curPos = this.node.position;\n        \n        const dPos =  this._nextPos.sub(this._curPos);\n        // console.log('_curPos: ' + this._curPos + ', _nextPos: ' + this._nextPos + ', dPos is : ' + dPos + ',dPos.magSqr : ' + dPos.magSqr() + ',moveMag: ' + this.moveMag);\n        //TODO 应该得通过HeroMove的speed得出\n        return dPos.magSqr() <= this.moveMag();\n    },\n\n    _CalMoveDir : function () {\n        this._curPos = this.node.position;\n\n        this._moveDir = this._routePos? this._routePos.sub(this._curPos) : this._nextPos.sub(this._curPos);\n        // console.log('_curPos: ' + this._curPos + ', _nextPos: ' + this._nextPos);\n        this._routePos = null;\n    },\n\n    // update: {}\n });"]}