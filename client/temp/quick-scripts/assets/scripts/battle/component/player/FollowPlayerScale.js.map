{"version":3,"sources":["FollowPlayerScale.js"],"names":["cc","Class","extends","Component","properties","onLoad","node","on","changeScaleMultip","multip","newScale","scalePer","scale","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAOLC,UAPK,oBAOI;AACL,aAAKC,IAAL,CAAUC,EAAV,CAAa,mBAAb,EAAkC,KAAKC,iBAAvC,EAA0D,IAA1D;AACA,aAAKA,iBAAL,CAAuB,CAAvB;AACH,KAVI;;;AAYLA,uBAAmB,2BAAUC,MAAV,EAAkB;AACjC,aAAKC,QAAL,GAAgBD,MAAhB;AACA,aAAKE,QAAL,GAAiB,KAAKD,QAAL,GAAgB,KAAKJ,IAAL,CAAUM,KAA3C;AACH,KAfI;;AAiBLC,UAjBK,kBAiBEC,EAjBF,EAiBM;AACP,YAAI,KAAKR,IAAL,CAAUM,KAAV,KAAoB,KAAKF,QAA7B,EAAuC;AACnC,iBAAKJ,IAAL,CAAUM,KAAV,IAAmB,KAAKD,QAAL,GAAgBG,EAAnC;AACA,gBAAI,KAAKH,QAAL,GAAgB,CAApB,EAAuB;AACnB,oBAAI,KAAKL,IAAL,CAAUM,KAAV,GAAkB,KAAKF,QAA3B,EAAqC;AACjC,yBAAKJ,IAAL,CAAUM,KAAV,GAAkB,KAAKF,QAAvB;AACH;AACJ,aAJD,MAIO;AACH,oBAAI,KAAKJ,IAAL,CAAUM,KAAV,GAAkB,KAAKF,QAA3B,EAAqC;AACjC,yBAAKJ,IAAL,CAAUM,KAAV,GAAkB,KAAKF,QAAvB;AACH;AACJ;AACJ;AAIJ;AAjCI,CAAT","file":"FollowPlayerScale.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\player","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    onLoad() {\r\n        this.node.on('changeScaleMultip', this.changeScaleMultip, this);\r\n        this.changeScaleMultip(1);\r\n    },\r\n\r\n    changeScaleMultip: function (multip) {\r\n        this.newScale = multip;\r\n        this.scalePer = (this.newScale - this.node.scale);\r\n    },\r\n\r\n    update(dt) {\r\n        if (this.node.scale !== this.newScale) {\r\n            this.node.scale += this.scalePer * dt;\r\n            if (this.scalePer > 0) {\r\n                if (this.node.scale > this.newScale) {\r\n                    this.node.scale = this.newScale;\r\n                }\r\n            } else {\r\n                if (this.node.scale < this.newScale) {\r\n                    this.node.scale = this.newScale;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    },\r\n});"]}