{"version":3,"sources":["SpeedShadow.js"],"names":["Tools","require","cc","Class","extends","Component","properties","posArr","posArrMaxLength","shadowCount","shadowPool","init","iconUrl","parent","canUpdate","i","node","Node","opacity","position","active","sprite","getOrAddComponent","spriteFrame","loader","loadRes","SpriteFrame","error","resource","close","updateGameLogic","dt","updateShadow","op","pos","sub","v2","scale"],"mappings":"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","file":"SpeedShadow.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\player","sourcesContent":["const Tools = require('Tools');\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        posArr: [],\r\n        posArrMaxLength: 30,\r\n        shadowCount: 4,\r\n        shadowPool: [],\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    init: function (iconUrl, parent) {\r\n        // this.offset = this.node.position.sub(this.node.parent.position);\r\n        this.canUpdate = true;\r\n        for (let i = 0; i < this.shadowCount; i++) {\r\n            let node = this.shadowPool[i]\r\n            if (!node) {\r\n                node = new cc.Node();\r\n                node.parent = parent;\r\n                node.opacity = (i + 1) / this.shadowCount * 255;\r\n                this.shadowPool[i] = node;\r\n                this.posArr[i] = this.node.position;\r\n            }\r\n            node.active = true;\r\n            let sprite = Tools.getOrAddComponent(node, 'cc.Sprite');\r\n            sprite.spriteFrame = null;\r\n            cc.loader.loadRes(iconUrl, cc.SpriteFrame, (error, resource) => {\r\n                if (error) {\r\n                    cc.error(error);\r\n                } else if (resource) {\r\n                    sprite.spriteFrame = resource;\r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n    close: function () {\r\n        this.canUpdate = false;\r\n        for (let i = 0; i < this.shadowCount; i++) {\r\n            let node = this.shadowPool[i]\r\n            node.active = false;\r\n        }\r\n    },\r\n\r\n    updateGameLogic(dt) {\r\n        if (this.canUpdate) {\r\n            this.updateShadow(0.02)\r\n        }\r\n        // this.posArr.push(this.node.position);\r\n        // if (this.posArr.length > this.posArrMaxLength) {\r\n        //     this.posArr.splice(0, 1);\r\n        // }\r\n    },\r\n\r\n\r\n    updateShadow: function (dt) {\r\n        // console.log('-----------------------------')\r\n        for (let i = 0; i < this.shadowCount; i++) {\r\n            var node = this.shadowPool[i];\r\n            var op = node.opacity - 255 * dt * 2\r\n            if (op > 0) {\r\n                node.opacity = op;\r\n                var pos = this.posArr[i].sub(this.node.position);\r\n                node.position = pos;\r\n            } else {\r\n                node.position = cc.v2(0, 0);\r\n                this.posArr[i] = this.node.position;\r\n                node.opacity = 255 + op;\r\n            }\r\n            node.scale = node.opacity / 255 * 0.5 + 0.5;\r\n            // console.log(node.opacity)\r\n\r\n            // node.opacity = (i + 1) / (this.shadowCount + 1) * 255;\r\n            // var index = this.posArrMaxLength / this.shadowCount * (i + 1);\r\n            // var pos = this.posArr[index];\r\n            // if (pos) {\r\n            //     pos = pos.sub(this.node.position);\r\n            //     if (pos !== node.position) {\r\n            //         node.position = pos;\r\n            //     }\r\n            // }\r\n\r\n            // if (node.scale !== this.node.scale) {\r\n            //     node.scale = this.node.scale;\r\n            // }\r\n\r\n        }\r\n    },\r\n\r\n\r\n});"]}