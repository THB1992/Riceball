{"version":3,"sources":["CollisionEventManager.js"],"names":["KnifeColliderState","require","CollisionEventManager","cc","Class","statics","instance","getInstance","init","cleanUp","Tools","properties","_heroCollisionEvent","_knifeCollisionEvent","_pickKnifeCollisionEvent","_pickBuffCollisionEvent","_attackBoxCollisionEvent","clear","mgr","director","getCollisionManager","enabled","addCollisionEvent","other","self","node","groupIndex","push","collState","Attack","Land","addCollisionStayEvent","clearHeroEvent","clearKnifeEvent","clearPickKnifeEvent","clearPickBuffEvent","clearAttackBoxEvent"],"mappings":"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","file":"CollisionEventManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\component\\singleton","sourcesContent":["/**\n * @fileoverview 碰撞事件单例组件\n * @author jinhaitao@gameley.cn (金海涛)\n */\n\nconst KnifeColliderState = require('Types').KnifeColliderState;\n/**\n * 专门存储碰撞事件，在system的update，做成单例便于addEvent\n */\n\nvar CollisionEventManager = cc.Class({\n    statics: {\n        instance: null,\n\n        getInstance: function () {\n            if (CollisionEventManager.instance === null) {\n                CollisionEventManager.instance = new CollisionEventManager();\n                CollisionEventManager.instance.init();\n            }\n            return CollisionEventManager.instance;\n        },\n\n        cleanUp: function () {\n            if (CollisionEventManager.instance) {\n                Tools.cleanUp(CollisionEventManager.instance);\n            }\n            CollisionEventManager.instance = null;\n        }\n    },\n\n    properties: {\n        _heroCollisionEvent: [],\n        _knifeCollisionEvent: [],\n        _pickKnifeCollisionEvent: [],\n        _pickBuffCollisionEvent: [],\n        _attackBoxCollisionEvent: [],\n    },\n\n    init: function () {\n        this.clear();\n        var mgr = cc.director.getCollisionManager();\n        mgr.enabled = true;\n        // mgr.enabledDebugDraw = true;\n    },\n\n    //只对主体为在人身上的刀与玩家进行处理\n    addCollisionEvent: function (other, self) {\n        if (self.node.groupIndex === 1) {\n            this._heroCollisionEvent.push([other, self]);\n        } else if (self.node.groupIndex === 2) {// || self.node.groupIndex === 7) {\n            if(self.collState === KnifeColliderState.Attack) {\n                if(!other.collState || other.collState === KnifeColliderState.Attack) {\n                    this._knifeCollisionEvent.push([other, self]);\n                }\n            } else if (self.collState === KnifeColliderState.Land) {\n                this._pickKnifeCollisionEvent.push([other, self]);\n            }\n        }\n        //  else if (self.node.groupIndex === 6) {\n        //     this._pickKnifeCollisionEvent.push([other, self]);\n        // } \n        else if (self.node.groupIndex === 11) {\n            this._pickBuffCollisionEvent.push([other, self]);\n        } else if (self.node.groupIndex === 12 && other.node.groupIndex !== 3) {\n            this._attackBoxCollisionEvent.push([other, self]);\n        }\n    },\n\n    // \"group-list\": [\n    //  0   \"default\",\n    //  1   \"hero\",\n    //  2  \"knife\",\n    //  3  \"block\",\n    //  4  \"ui\",\n    //  5  \"wall\",\n    //  6  \"landKnife\",\n    //  7  \"otherKnife\",\n    //  8  \"pickKnife\",\n    //  9  \"heroWall\",\n    //  10 \"hideKnife\",\n    //  11 \"buff\",\n    //  12 \"box\",\n    //  13 \"ray\"\n    //   ],\n\n    addCollisionStayEvent: function (other, self) {\n        if ((self.node.groupIndex === 2) && (other.node.groupIndex === 5 || other.node.groupIndex === 3)) {// || self.node.groupIndex === 7) ) {\n            if(self.collState === KnifeColliderState.Attack) {\n                this._knifeCollisionEvent.push([other, self]);\n            }\n        } else if (self.node.groupIndex === 12 && other.node.groupIndex === 3) {\n            this._attackBoxCollisionEvent.push([other, self, true]);\n        }\n    },\n\n    clearHeroEvent: function () {\n        this._heroCollisionEvent = [];\n    },\n\n    clearKnifeEvent: function () {\n        this._knifeCollisionEvent = [];\n    },\n\n    clearPickKnifeEvent: function () {\n        this._pickKnifeCollisionEvent = [];\n    },\n\n    clearPickBuffEvent: function () {\n        this._pickBuffCollisionEvent = [];\n    },\n\n\n    clearAttackBoxEvent: function () {\n        this._attackBoxCollisionEvent = [];\n    },\n\n\n\n    // 清除碰撞事件，每次事件处理完成后清除\n    clear: function () {\n        this._heroCollisionEvent = [];\n        this._knifeCollisionEvent = [];\n        this._pickKnifeCollisionEvent = [];\n        this._pickBuffCollisionEvent = [];\n        this._attackBoxCollisionEvent = [];\n    },\n\n});"]}