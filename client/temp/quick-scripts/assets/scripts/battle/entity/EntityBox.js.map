{"version":3,"sources":["EntityBox.js"],"names":["Tools","require","EntityBase","VibrateUtil","cc","Class","extends","properties","blood","bloodLabel","Label","activeNodes","Node","colliderNode","init","data","string","id","nodeLandCollider","getOrAddComponent","node","active","anim","getComponent","Animation","play","_clips","_name","on","onAttack","onCollByKnife","onCollByBlock","arr","self","other","dir","position","add","parent","sub","normalize","mul","oldOwner","world","isLocal","group","isPlaying","vibrate","once","emit","recycleSelf","setTimeout","onDie","update","dt"],"mappings":"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","file":"EntityBox.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity","sourcesContent":["const Tools = require('Tools');\r\nconst EntityBase = require('EntityBase');\r\nconst VibrateUtil = require('VibrateUtil');\r\ncc.Class({\r\n    extends: EntityBase,\r\n\r\n    properties: {\r\n        blood: 0,\r\n        bloodLabel: cc.Label,\r\n        activeNodes: [cc.Node],\r\n        colliderNode: cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    init(data) {\r\n        this.data = data;\r\n        this.blood = data.blood;\r\n        this.bloodLabel.string = data.blood;\r\n        this.id = data.id;\r\n\r\n        this.nodeLandCollider = Tools.getOrAddComponent(this.colliderNode, 'NodeCollider');\r\n        this.nodeLandCollider.init(this.node, true, true);\r\n\r\n        for (const node of this.activeNodes) {\r\n            node.active = false;\r\n        }\r\n\r\n        this.activeNodes[this.id].active = true;\r\n        this.anim = this.activeNodes[this.id].getComponent(cc.Animation);\r\n        this.anim.play(this.anim._clips[0]._name);\r\n\r\n\r\n        this.node.on('onAttack', this.onAttack, this);\r\n        this.node.on('onCollByKnife', this.onCollByKnife, this);\r\n        this.node.on('onCollByBlock', this.onCollByBlock, this);\r\n    },\r\n\r\n    onCollByBlock(arr) {\r\n        var self = arr[0];\r\n        var other = arr[1];\r\n        if (this.blood > 0) {\r\n            var dir = other.node.position.add(other.node.parent.position).sub(self.node.parent.position).normalize();\r\n            this.node.position = this.node.position.add(dir.mul(-10));\r\n        }\r\n    },\r\n\r\n    onCollByKnife(arr) {\r\n        var self = arr[0];\r\n        var other = arr[1];\r\n        if (this.blood > 0) {\r\n            var dir = other.node.parent.getComponent('KnifeOwnerComponent').oldOwner.position.sub(self.node.parent.position).normalize();\r\n            this.node.position = this.node.position.add(dir.mul(-10));\r\n        }\r\n    },\r\n\r\n    onAttack(arr) {\r\n\r\n        var self = arr[0];\r\n        var other = arr[1];\r\n        var world = arr[2];\r\n        var isLocal = other.node.group === 'knife' ? true : false;\r\n        if (this.blood <= 1) {\r\n            if (!this.isPlaying) {\r\n                this.blood--;\r\n                if (isLocal) VibrateUtil.vibrate(true);\r\n                this.anim.once('finished', () => {\r\n                    this.isPlaying = false;\r\n                    world.emit('onBoxDestroy', {\r\n                        node: this.node,\r\n                        data: this.data,\r\n                        isLocal: isLocal,\r\n                    });\r\n                    this.recycleSelf();\r\n                })\r\n                this.isPlaying = true;\r\n                this.anim.play(this.anim._clips[2]._name);\r\n            }\r\n        } else {\r\n            if (!this.isPlaying) {\r\n                this.blood--;\r\n                if (isLocal) VibrateUtil.vibrate();\r\n                world.emit('throwKnife', [self.node, other.node]);\r\n\r\n                this.isPlaying = true;\r\n                setTimeout(() => {\r\n                    this.isPlaying = false;\r\n                }, 100);\r\n                this.anim.play(this.anim._clips[1]._name);\r\n            }\r\n        }\r\n        this.bloodLabel.string = this.blood;\r\n    },\r\n\r\n    onDie(world) {\r\n\r\n\r\n    },\r\n\r\n    update(dt) {\r\n\r\n    },\r\n});"]}