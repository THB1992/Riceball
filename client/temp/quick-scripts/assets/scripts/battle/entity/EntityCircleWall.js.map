{"version":3,"sources":["EntityCircleWall.js"],"names":["cc","Class","extends","Component","properties","bgNode","Node","wallNode","redBgNode","blackNode","redNode","moveSpeed","init","width","height","rate","setContentSize","reds","children","blacks","setNodes","nodes","position","v2","refreshNodes","dt","move","x","y","setMoveSpeed","speed","startRedBg","active","node","closeRedBg","updateGameLogic"],"mappings":"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","file":"EntityCircleWall.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bgNode: cc.Node,\r\n        wallNode: cc.Node,\r\n        redBgNode: cc.Node,\r\n        blackNode: cc.Node,\r\n        redNode: cc.Node,\r\n        moveSpeed: 0,\r\n    },\r\n\r\n    init: function (width, height) {\r\n        this.rate = 1.39;\r\n        width = this.rate * width;\r\n        height = this.rate * height;\r\n        this.bgNode.setContentSize(width, height);\r\n        this.redBgNode.setContentSize(width, height);\r\n        this.wallNode.setContentSize(width, height);\r\n\r\n        this.reds = this.redNode.children;\r\n        this.blacks = this.blackNode.children;\r\n        this.setNodes(this.reds, width, height);\r\n        this.setNodes(this.blacks, width, height);\r\n    },\r\n\r\n    setNodes: function (nodes, width, height) {\r\n        nodes[0].position = cc.v2(-width / 2, 0);\r\n        nodes[1].position = cc.v2(width / 2, 0);\r\n        nodes[0].setContentSize(width, height * 2);\r\n        nodes[1].setContentSize(width, height * 2);\r\n\r\n        nodes[2].position = cc.v2(0, -height / 2);\r\n        nodes[3].position = cc.v2(0, height / 2);\r\n        nodes[2].setContentSize(width * 2, height);\r\n        nodes[3].setContentSize(width * 2, height);\r\n    },\r\n\r\n    refreshNodes: function (nodes, dt) {\r\n        var move = this.moveSpeed * dt * this.rate;\r\n        nodes[0].x += move\r\n        nodes[1].x -= move\r\n\r\n        nodes[2].y += move\r\n        nodes[3].y -= move\r\n    },\r\n\r\n\r\n    setMoveSpeed: function (speed) {\r\n        this.moveSpeed = speed;\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    startRedBg: function () {\r\n        if (!this.redBgNode.active) {\r\n            this.redBgNode.active = true;\r\n            for (const node of this.reds) {\r\n                node.active = true;\r\n            }\r\n        }\r\n    },\r\n\r\n    closeRedBg: function () {\r\n        if (this.redBgNode.active) {\r\n            this.redBgNode.active = false;\r\n            for (const node of this.reds) {\r\n                node.active = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    updateGameLogic(dt) {\r\n        var width = this.bgNode.width - this.moveSpeed * dt * 2 * this.rate;\r\n        var height = this.bgNode.height - this.moveSpeed * dt * 2 * this.rate;\r\n\r\n        this.bgNode.setContentSize(width, height);\r\n        this.redBgNode.setContentSize(width, height);\r\n        this.wallNode.setContentSize(width, height);\r\n\r\n        this.refreshNodes(this.reds, dt);\r\n        this.refreshNodes(this.blacks, dt);\r\n    },\r\n\r\n    // update (dt) {},\r\n});"]}