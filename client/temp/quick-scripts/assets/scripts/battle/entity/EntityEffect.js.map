{"version":3,"sources":["EntityEffect.js"],"names":["EntityBase","require","Tools","TEAM_COLOR","cc","Class","extends","properties","activeNode","Node","initAsAnim","play","recycleAfterAnim","initAsParticle","playParticle","recycleAfterTime","changeColor","tid","setNodeColor","node","changeColorByHex","hex","Color","fromHEX","active","anim","getComponent","Animation","playOnce","once","stop","open","_clips","_name","closeNode","close","recycleSelf","particle","resetSystem","time","Math","min","life","needUpdate","recycleTime","update","dt"],"mappings":"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","file":"EntityEffect.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity","sourcesContent":["/**\n * @fileoverview 特效实体\n * @author meifan@gameley.cn (梅凡)\n */\n\nconst EntityBase = require('EntityBase');\nconst Tools = require('Tools');\nconst TEAM_COLOR = require('Types').TEAM_COLOR;\n\ncc.Class({\n    extends: EntityBase,\n\n    properties: {\n        activeNode: cc.Node,\n    },\n\n    // onLoad () {}\n\n    // init: function ()\n\n    initAsAnim: function () {\n        this.play();\n        this.recycleAfterAnim();\n    },\n\n    initAsParticle: function () {\n        this.playParticle();\n        this.recycleAfterTime();\n    },\n\n    changeColor: function (tid) {\n        Tools.setNodeColor(this.node, TEAM_COLOR[tid]);\n    },\n\n    changeColorByHex: function (hex) {\n        // console.log(hex)\n        Tools.setNodeColor(this.node, new cc.Color().fromHEX(hex));\n    },\n\n\n    play() {\n        this.activeNode.active = true;\n        var anim = this.activeNode.getComponent(cc.Animation);\n        anim.play()\n    },\n\n    playOnce() {\n        this.activeNode.active = true;\n        var anim = this.activeNode.getComponent(cc.Animation);\n        anim.once('finished', () => {\n            this.activeNode.active = false;\n        })\n        anim.play()\n    },\n\n    stop() {\n        this.activeNode.active = false;\n    },\n\n    open() {\n        this.activeNode.active = true;\n        var anim = this.activeNode.getComponent(cc.Animation);\n        if (anim) {\n            anim.once('finished', () => {\n                anim.play(anim._clips[1]._name);\n            })\n            anim.play(anim._clips[0]._name);\n        }\n    },\n\n    closeNode() {\n        this.activeNode.active = false;\n    },\n    \n    close() {\n        var anim = this.activeNode.getComponent(cc.Animation);\n        if (anim) {\n            // anim.stop();\n            // anim.on('stop', () => {\n            // this.activeNode.active = false;\n            // anim.off('stop')\n            // })\n            anim.play(anim._clips[2]._name);\n        }\n    },\n\n    recycleAfterAnim: function () {\n        var anim = this.activeNode.getComponent(cc.Animation);\n        if (anim) {\n            anim.once('finished', this.recycleSelf, this);\n        }\n    },\n\n    // /** overwrite */\n    // recycleSelf: function () {\n    //     this._super();\n    //     if(this.isLog) {\n    //         console.log(\"recycle: this.node._pool.count: \" + this.node._pool._pool.length);\n    //     }\n    // },\n\n    playParticle: function () {\n        var particle = this.activeNode.getComponent('cc.ParticleSystem');\n        if (particle) {\n            particle.resetSystem();\n        }\n    },\n\n    recycleAfterTime: function (time) {\n        if (!time) {\n            var particle = this.node.getComponent('cc.ParticleSystem');\n            if (particle) {\n                time = Math.min(particle.life, 0.5);\n            }\n        }\n\n        if (time) {\n            this.needUpdate = true;\n            this.recycleTime = time;\n        }\n    },\n\n    update: function (dt) {\n        if (this.needUpdate) {\n            this.recycleTime -= dt;\n            if (this.recycleTime <= 0) {\n                this.needUpdate = false;\n\n                this.recycleSelf();\n            }\n        }\n    }\n});"]}