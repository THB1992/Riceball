{"version":3,"sources":["EntityFollowPlayer.js"],"names":["Tools","require","EntityBase","cc","Class","extends","properties","player","init","moveWithOwnerNode","getOrAddComponent","node","parent","knivesCmp","knifeCollisionSoundCtrl","heroRotate","followPlayerScale","on","addBuff","wallCollision","onAttackBox","emit","detail","isCollisionWall","updateGameLogic","dt","updateLogic","die","emitAllKnivesRelease","stop","buffId","beKilled","changeColliderState","state"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACAE,GAAGC,KAAH,CAAS;AACLC,aAASH,UADJ;;AAGLI,gBAAY;AACR;AACAC,gBAAQ;AAFA,KAHP;;AAQLC,UAAM,cAAUD,MAAV,EAAkB;AACpB,aAAKA,MAAL,GAAcA,MAAd;;AAEA,YAAIE,oBAAoBT,MAAMU,iBAAN,CAAwB,KAAKC,IAA7B,EAAmC,mBAAnC,CAAxB;AACAF,0BAAkBD,IAAlB,CAAuB,KAAKG,IAAL,CAAUC,MAAjC,EAAyC,IAAzC,EAA+C,KAAKL,MAApD;AACA,aAAKM,SAAL,GAAiBb,MAAMU,iBAAN,CAAwB,KAAKC,IAA7B,EAAmC,uBAAnC,CAAjB;AACA,aAAKE,SAAL,CAAeL,IAAf,CAAoBD,MAApB;;AAEA,aAAKO,uBAAL,GAA+Bd,MAAMU,iBAAN,CAAwB,KAAKC,IAA7B,EAAmC,yBAAnC,CAA/B;AACA,aAAKG,uBAAL,CAA6BN,IAA7B;;AAEA,aAAKO,UAAL,GAAkBf,MAAMU,iBAAN,CAAwB,KAAKC,IAA7B,EAAmC,YAAnC,CAAlB;AACAX,cAAMU,iBAAN,CAAwB,KAAKC,IAA7B,EAAmC,2BAAnC;AACA,aAAKK,iBAAL,GAAyBhB,MAAMU,iBAAN,CAAwB,KAAKC,IAA7B,EAAmC,mBAAnC,CAAzB;;AAEA,aAAKA,IAAL,CAAUM,EAAV,CAAa,SAAb,EAAwB,KAAKC,OAA7B,EAAsC,IAAtC;AACA,aAAKP,IAAL,CAAUM,EAAV,CAAa,eAAb,EAA8B,KAAKE,aAAnC,EAAkD,IAAlD;AACA,aAAKR,IAAL,CAAUM,EAAV,CAAa,aAAb,EAA4B,KAAKG,WAAjC,EAA8C,IAA9C;AACH,KA1BI;;AA4BLA,iBAAa,uBAAY;AACrB,aAAKb,MAAL,CAAYI,IAAZ,CAAiBU,IAAjB,CAAsB,aAAtB;AACH,KA9BI;;AAgCLF,mBAAe,uBAAUG,MAAV,EAAkB;AAC7B,aAAKf,MAAL,CAAYgB,eAAZ,GAA8BD,MAA9B;AACH,KAlCI;;AAoCLE,mBApCK,2BAoCWC,EApCX,EAoCe;AAChB,aAAKZ,SAAL,CAAea,WAAf,CAA2BD,EAA3B;AACA,aAAKV,UAAL,CAAgBW,WAAhB,CAA4BD,EAA5B;AACH,KAvCI;;;AAyCLE,SAAK,eAAY;AACb,aAAKd,SAAL,CAAee,oBAAf;AACA,aAAKd,uBAAL,CAA6Be,IAA7B;AACA;AACH,KA7CI;;AA+CLX,aAAS,iBAAUY,MAAV,EAAkB;AACvB,YAAI,KAAKvB,MAAL,CAAYwB,QAAZ,EAAJ,EAA4B;AAC5B,aAAKxB,MAAL,CAAYI,IAAZ,CAAiBU,IAAjB,CAAsB,iBAAtB,EAAyCS,MAAzC;AACH,KAlDI;;AAoDLE,uBApDK,+BAoDeC,KApDf,EAoDsB;AACvB,aAAKpB,SAAL,CAAemB,mBAAf,CAAmCC,KAAnC;AACH;AAtDI,CAAT","file":"EntityFollowPlayer.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\entity","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst Tools = require('Tools');\r\nconst EntityBase = require('EntityBase');\r\ncc.Class({\r\n    extends: EntityBase,\r\n\r\n    properties: {\r\n        //type:entityPlayer\r\n        player: null,\r\n    },\r\n\r\n    init: function (player) {\r\n        this.player = player;\r\n\r\n        var moveWithOwnerNode = Tools.getOrAddComponent(this.node, 'MoveWithOwnerNode');\r\n        moveWithOwnerNode.init(this.node.parent, this, this.player);\r\n        this.knivesCmp = Tools.getOrAddComponent(this.node, 'PlayerKnivesComponent');\r\n        this.knivesCmp.init(player);\r\n\r\n        this.knifeCollisionSoundCtrl = Tools.getOrAddComponent(this.node, 'KnifeCollisionSoundCtrl');\r\n        this.knifeCollisionSoundCtrl.init();\r\n\r\n        this.heroRotate = Tools.getOrAddComponent(this.node, 'HeroRotate');\r\n        Tools.getOrAddComponent(this.node, 'HeroCollisionWallListener');\r\n        this.followPlayerScale = Tools.getOrAddComponent(this.node, 'FollowPlayerScale');\r\n\r\n        this.node.on('addBuff', this.addBuff, this);\r\n        this.node.on('wallCollision', this.wallCollision, this);\r\n        this.node.on('onAttackBox', this.onAttackBox, this);\r\n    },\r\n\r\n    onAttackBox: function () {\r\n        this.player.node.emit('onAttackBox');\r\n    },\r\n\r\n    wallCollision: function (detail) {\r\n        this.player.isCollisionWall = detail;\r\n    },\r\n\r\n    updateGameLogic(dt) {\r\n        this.knivesCmp.updateLogic(dt)\r\n        this.heroRotate.updateLogic(dt)\r\n    },\r\n\r\n    die: function () {\r\n        this.knivesCmp.emitAllKnivesRelease();\r\n        this.knifeCollisionSoundCtrl.stop();\r\n        // this.node.active = false;\r\n    },\r\n\r\n    addBuff: function (buffId) {\r\n        if (this.player.beKilled()) return;\r\n        this.player.node.emit('updateBuffState', buffId);\r\n    },\r\n\r\n    changeColliderState(state) {\r\n        this.knivesCmp.changeColliderState(state);\r\n    },\r\n\r\n});"]}