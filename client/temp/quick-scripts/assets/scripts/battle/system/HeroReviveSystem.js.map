{"version":3,"sources":["HeroReviveSystem.js"],"names":["HeroRebornEffectState","require","HeroReviveSystem","cc","Class","extends","Component","properties","players","cleanUp","init","entityPlayers","reviveFunc","showRebornFunc","player","push","_reviveFunc","_showRebornFunc","updateGameLogic","dt","isLocal","firstDead","canRevive","onRevive","updateReviveLogic","waitToRevive","showRebornEffect","waitToShow","Open","onShowReborn","isRevive"],"mappings":";;;;;;AAAA;;;;;AAKA,IAAMA,wBAAwBC,QAAQ,OAAR,EAAiBD,qBAA/C;;AAEA,IAAME,mBAAmBC,GAAGC,KAAH,CAAS;AAC9BC,aAASF,GAAGG,SADkB;;AAG9BC,gBAAY;AACRC,iBAAS;AADD,KAHkB;;AAO9BC,aAAS,mBAAY;AACjB,aAAKD,OAAL,GAAe,EAAf;AACH,KAT6B;;AAW9BE,UAAM,cAAUC,aAAV,EAAyBC,UAAzB,EAAqCC,cAArC,EAAqD;AAAA;AAAA;AAAA;;AAAA;AACvD,iCAAmBF,aAAnB,8HAAkC;AAAA,oBAAzBG,MAAyB;;AAC9B,qBAAKN,OAAL,CAAaO,IAAb,CAAkBD,MAAlB;AACH;AAHsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIvD,aAAKE,WAAL,GAAmBJ,UAAnB;AACA,aAAKK,eAAL,GAAuBJ,cAAvB;AACH,KAjB6B;;AAmB9BK,qBAAiB,yBAAUC,EAAV,EAAc;AAAA;AAAA;AAAA;;AAAA;;AAE3B,kCAAmB,KAAKX,OAAxB,mIAAiC;AAAA,oBAAxBM,MAAwB;;AAC7B,oBAAIA,OAAOM,OAAX,EAAoB;AAChB;AACA;AACH;AACD,oBAAIN,OAAOO,SAAX,EAAsB;AAClB,wBAAI,CAACP,OAAOQ,SAAP,EAAL,EAAyB;AACrB,6BAAKC,QAAL,CAAcT,MAAd,EAAsB,KAAtB;AACH,qBAFD,MAEO;AACHA,+BAAOU,iBAAP,CAAyBL,EAAzB;;AAEA,4BAAGL,OAAOW,YAAV,EAAwB;AACpB,iCAAKF,QAAL,CAAcT,MAAd,EAAsB,IAAtB;AACH;;AAED,4BAAIA,OAAOY,gBAAP,KAA4B1B,sBAAsB2B,UAAtD,EAAkE;AAC9Db,mCAAOY,gBAAP,GAA0B1B,sBAAsB4B,IAAhD;AACA,iCAAKC,YAAL,CAAkBf,MAAlB;AACH;AACJ;AACJ;AACJ;AAvB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwB9B,KA3C6B;;AA6C9BS,cAAU,kBAAUT,MAAV,EAAkBgB,QAAlB,EAA4B;AAClC,YAAI,KAAKd,WAAT,EAAsB;AAClB,iBAAKA,WAAL,CAAiBF,MAAjB,EAAyBgB,QAAzB;AACA;AACA;AACH;AACJ,KAnD6B;;AAqD9BD,kBAAc,sBAAUf,MAAV,EAAkB;AAC5B,YAAI,KAAKG,eAAT,EAA0B;AACtB,iBAAKA,eAAL,CAAqBH,MAArB;AACH;AACJ;AAzD6B,CAAT,CAAzB","file":"HeroReviveSystem.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\system","sourcesContent":["/**\n * @fileoverview HeroReviveSystem\n * @author meifan@gameley.cn (梅凡)\n */\n\nconst HeroRebornEffectState = require('Types').HeroRebornEffectState;\n\nconst HeroReviveSystem = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        players: [],\n    },\n\n    cleanUp: function () {\n        this.players = [];\n    },\n\n    init: function (entityPlayers, reviveFunc, showRebornFunc) {\n        for (var player of entityPlayers) {\n            this.players.push(player);\n        }\n        this._reviveFunc = reviveFunc;\n        this._showRebornFunc = showRebornFunc;\n    },\n\n    updateGameLogic: function (dt) {\n\n        for (var player of this.players) {\n            if (player.isLocal) {\n                // 排除玩家自己\n                continue;\n            }\n            if (player.firstDead) {\n                if (!player.canRevive()) {\n                    this.onRevive(player, false);\n                } else {\n                    player.updateReviveLogic(dt);\n\n                    if(player.waitToRevive) {\n                        this.onRevive(player, true);   \n                    }\n                    \n                    if (player.showRebornEffect === HeroRebornEffectState.waitToShow) {\n                        player.showRebornEffect = HeroRebornEffectState.Open;\n                        this.onShowReborn(player);\n                    }\n                }\n            }\n        }\n    },\n\n    onRevive: function (player, isRevive) {\n        if (this._reviveFunc) {\n            this._reviveFunc(player, isRevive);\n            // this._reviveFunc = null;\n            // this.isRevive = true;\n        }\n    },\n\n    onShowReborn: function (player) {\n        if (this._showRebornFunc) {\n            this._showRebornFunc(player);\n        }\n    }\n});"]}