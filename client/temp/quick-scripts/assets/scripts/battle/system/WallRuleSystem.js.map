{"version":3,"sources":["WallRuleSystem.js"],"names":["NoticeType","require","ConfigData","cc","Class","extends","Component","properties","wallSpeed","init","world","walls","uiMgr","time","wallTime","wallData","instance","wallTimeStart","wallTimeLimit","wallTimeMove","wallTimeInterval","wallComps","compStr","mapType","wall","comp","getComponent","setMoveSpeed","push","players","player","initWalls","mapWidth","mapHeight","updateGameLogic","dt","startMove","isShow","showImportantNotice","Wall","closeRedBg","startRedBg","reduceMapSize"],"mappings":"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","file":"WallRuleSystem.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\system","sourcesContent":["const NoticeType = require('Types').NoticeType;\r\nconst ConfigData = require('ConfigData');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        wallSpeed: 50,\r\n    },\r\n\r\n    init: function (world) {\r\n        this.world = world;\r\n        this.walls = world.walls;\r\n        this.uiMgr = world.uiMgr;\r\n        this.time = 0;\r\n        this.wallTime = 0;\r\n        var wallData = ConfigData.instance.wallData;\r\n        this.wallTimeStart = wallData.wallTimeStart;\r\n        this.wallTimeLimit = wallData.wallTimeLimit;\r\n        this.wallTimeMove = wallData.wallTimeMove;\r\n        this.wallTimeInterval = wallData.wallTimeInterval;\r\n        this.wallComps = [];\r\n        var compStr = world.mapType === 0 ? 'EntityWall' : 'EntityCircleWall';\r\n        for (var wall of this.walls) {\r\n            var comp = wall.getComponent(compStr);\r\n            comp.setMoveSpeed(this.wallSpeed);\r\n            this.wallComps.push(comp);\r\n        }\r\n\r\n\r\n        for (var player of world.players) {\r\n            player.initWalls(world.mapType, this.walls, world.mapWidth, world.mapHeight);\r\n        }\r\n\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    updateGameLogic(dt) {\r\n        this.time += dt;\r\n        if (this.time > this.wallTimeStart) {\r\n            if (!this.startMove) {\r\n                this.startMove = true;\r\n                this.wallTime = 0;\r\n            }\r\n        }\r\n\r\n        if (!this.startMove) return;\r\n        this.wallTime += dt;\r\n\r\n        if (!this.isShow) {\r\n            this.isShow = true;\r\n            this.uiMgr.showImportantNotice(NoticeType.Wall);\r\n        }\r\n\r\n        if (this.wallTime > (this.wallTimeLimit + this.wallTimeMove + this.wallTimeInterval)) {\r\n            this.wallTime = 0;\r\n            this.isShow = false;\r\n        } else if (this.wallTime > (this.wallTimeLimit + this.wallTimeMove)) {\r\n            for (var comp of this.wallComps) {\r\n                comp.closeRedBg();\r\n            }\r\n        } else if (this.wallTime > this.wallTimeLimit) {\r\n            for (var comp of this.wallComps) {\r\n                comp.startRedBg();\r\n                comp.updateGameLogic(dt);\r\n            }\r\n            this.world.reduceMapSize(this.wallSpeed * dt * 2);\r\n        }\r\n    } // update (dt) {},\r\n});"]}