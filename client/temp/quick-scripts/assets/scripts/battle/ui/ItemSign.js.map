{"version":3,"sources":["ItemSign.js"],"names":["ListItemBase","require","Tools","ConfigData","days","cc","Class","extends","properties","iconGold","Node","iconKnife","iconHero","iconFinalKnife","iconFinalGold","dayLabel","Label","dayBgNode","countLabel","checkNode","getNode","bgNode","getBgNode","init","data","item","index","string","getStringByFormat","instance","getUITipStr","type","active","width","height","num","refresh","isGet","isCheck"],"mappings":";;;;;;AAAA,IAAMA,eAAeC,QAAQ,cAAR,CAArB;AACA,IAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,IAAME,aAAaF,QAAQ,YAAR,CAAnB;AACA,IAAMG,OAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAAb;AACAC,GAAGC,KAAH,CAAS;AACLC,aAASP,YADJ;;AAGLQ,gBAAY;;AAERC,kBAAUJ,GAAGK,IAFL;AAGRC,mBAAWN,GAAGK,IAHN;AAIRE,kBAAUP,GAAGK,IAJL;AAKRG,wBAAgBR,GAAGK,IALX;AAMRI,uBAAeT,GAAGK,IANV;;AAQRK,kBAAUV,GAAGW,KARL;AASRC,mBAAWZ,GAAGK,IATN;AAURQ,oBAAYb,GAAGW,KAVP;AAWRG,mBAAWd,GAAGK,IAXN;AAYRU,iBAASf,GAAGK,IAZJ;AAaRW,gBAAQhB,GAAGK,IAbH;AAcRY,mBAAWjB,GAAGK;AAdN,KAHP;;AAoBLa,QApBK,gBAoBAC,IApBA,EAoBMC,IApBN,EAoBYC,KApBZ,EAoBmB;AACpB,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA;AACA,aAAKX,QAAL,CAAcY,MAAd,GAAuBzB,MAAM0B,iBAAN,CAAwBzB,WAAW0B,QAAX,CAAoBC,WAApB,CAAgC,EAAhC,CAAxB,EAA6D1B,KAAKsB,KAAL,CAA7D,CAAvB;AACA,YAAID,KAAKM,IAAL,KAAc,CAAlB,EAAqB;AACjB,gBAAIL,UAAU,CAAd,EAAiB;AACb,qBAAKZ,aAAL,CAAmBkB,MAAnB,GAA4B,IAA5B;AACA,qBAAKV,SAAL,CAAeW,KAAf,GAAuB,GAAvB;AACA,qBAAKX,SAAL,CAAeY,MAAf,GAAwB,GAAxB;AACA,qBAAKf,SAAL,CAAec,KAAf,GAAuB,GAAvB;AACA,qBAAKZ,MAAL,CAAYY,KAAZ,GAAoB,GAApB;AACA;AACH,aAPD,MAOO;AACH,qBAAKxB,QAAL,CAAcuB,MAAd,GAAuB,IAAvB;AACH;AACD,iBAAKd,UAAL,CAAgBS,MAAhB,GAAyBF,KAAKU,GAA9B;AACH,SAZD,MAYO;AACH,gBAAIT,UAAU,CAAd,EAAiB;AACb,qBAAKf,SAAL,CAAeqB,MAAf,GAAwB,IAAxB;AACH,aAFD,MAEO,IAAIN,UAAU,CAAd,EAAiB;AACpB,qBAAKd,QAAL,CAAcoB,MAAd,GAAuB,IAAvB;AACH,aAFM,MAEA,IAAIN,UAAU,CAAd,EAAiB;AACpB,qBAAKb,cAAL,CAAoBmB,MAApB,GAA6B,IAA7B;AACA,qBAAKV,SAAL,CAAeW,KAAf,GAAuB,GAAvB;AACA,qBAAKX,SAAL,CAAeY,MAAf,GAAwB,GAAxB;AACA,qBAAKf,SAAL,CAAec,KAAf,GAAuB,GAAvB;AACA,qBAAKZ,MAAL,CAAYY,KAAZ,GAAoB,GAApB;AACA;AACH;AACD,iBAAKf,UAAL,CAAgBS,MAAhB,GAAyB,EAAzB;AACH;AACD;AACH,KAtDI;AAwDLS,WAxDK,mBAwDGC,KAxDH,EAwDUC,OAxDV,EAwDmB;AACpB,aAAKlB,OAAL,CAAaY,MAAb,GAAsBK,KAAtB;AACA,aAAKlB,SAAL,CAAea,MAAf,GAAwBM,OAAxB;AACH;AA3DI;AA4DL;AA5DJ","file":"ItemSign.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["const ListItemBase = require('ListItemBase')\r\nconst Tools = require('Tools');\r\nconst ConfigData = require('ConfigData');\r\nconst days = ['1', '2', '3', '4', '5', '6', '7']\r\ncc.Class({\r\n    extends: ListItemBase,\r\n\r\n    properties: {\r\n\r\n        iconGold: cc.Node,\r\n        iconKnife: cc.Node,\r\n        iconHero: cc.Node,\r\n        iconFinalKnife: cc.Node,\r\n        iconFinalGold: cc.Node,\r\n\r\n        dayLabel: cc.Label,\r\n        dayBgNode: cc.Node,\r\n        countLabel: cc.Label,\r\n        checkNode: cc.Node,\r\n        getNode: cc.Node,\r\n        bgNode: cc.Node,\r\n        getBgNode: cc.Node,\r\n    },\r\n\r\n    init(data, item, index) {\r\n        this.data = data;\r\n        this.item = item;\r\n        this.index = index;\r\n        // this.dayLabel.string = 'Day' + days[index];\r\n        this.dayLabel.string = Tools.getStringByFormat(ConfigData.instance.getUITipStr(10), days[index]);\r\n        if (item.type === 0) {\r\n            if (index === 6) {\r\n                this.iconFinalGold.active = true;\r\n                this.getBgNode.width = 690;\r\n                this.getBgNode.height = 230;\r\n                this.checkNode.width = 690;\r\n                this.bgNode.width = 690;\r\n                // this.dayBgNode.width = 200;\r\n            } else {\r\n                this.iconGold.active = true;\r\n            }\r\n            this.countLabel.string = item.num;\r\n        } else {\r\n            if (index === 1) {\r\n                this.iconKnife.active = true;\r\n            } else if (index === 2) {\r\n                this.iconHero.active = true;\r\n            } else if (index === 6) {\r\n                this.iconFinalKnife.active = true;\r\n                this.getBgNode.width = 690;\r\n                this.getBgNode.height = 230;\r\n                this.checkNode.width = 690;\r\n                this.bgNode.width = 690;\r\n                // this.dayBgNode.width = 200;\r\n            }\r\n            this.countLabel.string = '';\r\n        }\r\n        // UIUtil.loadResSprite(iconSprite, data.url);\r\n    },\r\n\r\n    refresh(isGet, isCheck) {\r\n        this.getNode.active = isGet;\r\n        this.checkNode.active = isCheck;\r\n    },\r\n    // update (dt) {},\r\n});"]}