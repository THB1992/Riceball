{"version":3,"sources":["ListItemBase.js"],"names":["Tools","require","ListItemBase","cc","Class","extends","Component","properties","button","Button","checkFlag","default","visible","createItemClickHander","target","component","handlerFuncName","customEventData","handler","EventHandler","setOnItemClick","handlerComponent","setOnBtnClick","btn","node","js","getClassName","clickEvents","setVisible","isVisible","setNodeVisible"],"mappings":";;;;;;AAAA;;;;;AAKA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEA;;;AAGA,IAAMC,eAAeC,GAAGC,KAAH,CAAS;AAC1BC,aAASF,GAAGG,SADc;;AAG1BC,gBAAY;AACR;AACAC,gBAAQL,GAAGM,MAFH;AAGR;AACAC,mBAAW;AACPC,qBAAS,KADF;AAEPC,qBAAS;AAFF;AAJH,KAHc;;AAa1B;;;;;;;AAOAC,2BAAuB,+BAAUC,MAAV,EAAkBC,SAAlB,EAA6BC,eAA7B,EAA8CC,eAA9C,EAA+D;AAClF,YAAMC,UAAU,IAAIf,GAAGG,SAAH,CAAaa,YAAjB,EAAhB;AACAD,gBAAQJ,MAAR,GAAiBA,MAAjB;AACAI,gBAAQH,SAAR,GAAoBA,SAApB;AACAG,gBAAQA,OAAR,GAAkBF,eAAlB;AACAE,gBAAQD,eAAR,GAA0BA,eAA1B;AACA,eAAOC,OAAP;AACH,KA3ByB;;AA6B1B;;;;;;AAMAE,oBAAgB,wBAAUC,gBAAV,EAA4BJ,eAA5B,EAA8E;AAAA,YAAjCD,eAAiC,uEAAf,aAAe;;AAC1F,aAAKM,aAAL,CAAmB,KAAKd,MAAxB,EAAgCa,gBAAhC,EAAkDJ,eAAlD,EAAmED,eAAnE;AACH,KArCyB;;AAuC1B;;;;;;;AAOAM,mBAAe,uBAAUC,GAAV,EAAeF,gBAAf,EAAiCJ,eAAjC,EAAmF;AAAA,YAAjCD,eAAiC,uEAAf,aAAe;;AAC9F,YAAIO,GAAJ,EAAS;AACL,gBAAML,UAAU,KAAKL,qBAAL,CAA2BQ,iBAAiBG,IAA5C,EAAkDrB,GAAGsB,EAAH,CAAMC,YAAN,CAAmBL,gBAAnB,CAAlD,EAAwFL,eAAxF,EAAyGC,eAAzG,CAAhB;AACAM,gBAAII,WAAJ,GAAkB,CAACT,OAAD,CAAlB;AACH;AACJ,KAnDyB;;AAqD1B;;;;AAIAU,gBAAY,oBAAUC,SAAV,EAAqB;AAC7B,YAAI,KAAKL,IAAT,EAAe;AACXxB,kBAAM8B,cAAN,CAAqB,KAAKN,IAA1B,EAAgCK,SAAhC;AACH;AACJ;AA7DyB,CAAT,CAArB","file":"ListItemBase.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["/**\r\n * @fileoverview ListItemBase\r\n * @author <liqing@gameley.cn> (李清)\r\n */\r\n\r\nconst Tools = require('Tools');\r\n\r\n/**\r\n * ListItemBase 列表项基类\r\n */\r\nconst ListItemBase = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        /** 列表项按钮，可为null */\r\n        button: cc.Button,\r\n        /** 用于添加删除等检查的flag */\r\n        checkFlag: {\r\n            default: false,\r\n            visible: false,\r\n        },\r\n    },\r\n\r\n    /**\r\n     * 创建按钮点击handler\r\n     * @param  {cc.Node} target 目标节点\r\n     * @param  {String} component 目标组件名\r\n     * @param  {String} handlerFuncName 响应事件函数名\r\n     * @param  {String} customEventData 自定义事件数据\r\n     */\r\n    createItemClickHander: function (target, component, handlerFuncName, customEventData) {\r\n        const handler = new cc.Component.EventHandler();\r\n        handler.target = target;\r\n        handler.component = component;\r\n        handler.handler = handlerFuncName;\r\n        handler.customEventData = customEventData;\r\n        return handler;\r\n    },\r\n\r\n    /**\r\n     * 设置列表项点击handler\r\n     * @param  {cc.Component} handlerComponent 目标组件\r\n     * @param  {String} customEventData 自定义事件数据\r\n     * @param  {String} [handlerFuncName] 响应事件函数名，默认为onItemClick\r\n     */\r\n    setOnItemClick: function (handlerComponent, customEventData, handlerFuncName = 'onItemClick') {\r\n        this.setOnBtnClick(this.button, handlerComponent, customEventData, handlerFuncName);\r\n    },\r\n\r\n    /**\r\n     * 设置按钮点击handler\r\n     * @param  {cc.Button} btn 按钮\r\n     * @param  {cc.Component} handlerComponent 目标组件\r\n     * @param  {String} customEventData 自定义事件数据\r\n     * @param  {String} [handlerFuncName] 响应事件函数名，默认为onItemClick\r\n     */\r\n    setOnBtnClick: function (btn, handlerComponent, customEventData, handlerFuncName = 'onItemClick') {\r\n        if (btn) {\r\n            const handler = this.createItemClickHander(handlerComponent.node, cc.js.getClassName(handlerComponent), handlerFuncName, customEventData);\r\n            btn.clickEvents = [handler];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 设置列表项是否可见，用于ScrollView裁剪\r\n     * @param {boolean} isVisible \r\n     */\r\n    setVisible: function (isVisible) {\r\n        if (this.node) {\r\n            Tools.setNodeVisible(this.node, isVisible);\r\n        }\r\n    },\r\n});"]}