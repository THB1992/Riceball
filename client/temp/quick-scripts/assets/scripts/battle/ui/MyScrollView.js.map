{"version":3,"sources":["MyScrollView.js"],"names":["cc","Class","extends","Component","properties","lastLine","itemPool","compPool","itemPrefab","Prefab","perLine","gapX","gapY","init","datas","params","callback","datasLength","length","className","srollview","getComponent","ScrollView","item","instantiate","startX","width","startY","height","itemWidth","itemHeight","itemLine","Math","ceil","node","itemCount","maxLine","content","isInit","onScrollView","event","curScrollHeight","getScrollOffset","y","startLine","floor","endLine","offset","finalLine","finalIndex","line","i","active","parent","rank","x","scrollToRank","time","scrollToOffset","v2","refresh"],"mappings":"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","file":"MyScrollView.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        lastLine: -1,\r\n        itemPool: [],\r\n        compPool: [],\r\n        itemPrefab: cc.Prefab,\r\n        perLine: 1,\r\n        gapX: 0,\r\n        gapY: 0,\r\n    },\r\n\r\n\r\n    // onLoad() {\r\n    //     this.init({\r\n    //         length: 100\r\n    //     }, (line) => {\r\n    //         console.log(line);\r\n    //     }, {\r\n    //         itemPrefab: this.itemPrefab,\r\n    //         className: cc.Label,\r\n    //         gapX: 10,\r\n    //         gapY: 10,\r\n    //         perLine: 1,\r\n    //     })\r\n    // },\r\n    /**\r\n     * @param  {Array} datas//需要展示的数据\r\n     * @param  {function} callback //滑动时的回调函数，把当前最底行的行数传进去\r\n     * @param  {object} params //ui布局的各种参数\r\n     */\r\n    init(datas, params, callback) {\r\n        this.datas = datas;\r\n        this.datasLength = datas.length;\r\n        this.callback = callback;\r\n        this.itemPrefab = params.itemPrefab;\r\n        this.className = params.className;\r\n        // this.target = params.target;\r\n        this.gapX = params.gapX ? params.gapX : 0;\r\n        this.gapY = params.gapY ? params.gapY : 0;\r\n        this.perLine = params.perLine ? params.perLine : 1;\r\n        this.srollview = this.getComponent(cc.ScrollView);\r\n        // this.node.children[0].getComponent(cc.Mask).enabled = false;\r\n\r\n        //生成可在mask内循环滚动的prefab\r\n        var item = cc.instantiate(this.itemPrefab);\r\n\r\n        this.startX = params.startX || params.startX === 0 ? params.startX : -item.width / 2;\r\n        this.startY = params.startY || params.startY === 0 ? params.startY : item.height / 2;\r\n        // this.itemPool[0] = item;\r\n        this.itemWidth = item.width + this.gapX;\r\n        this.itemHeight = item.height + this.gapY;\r\n        this.itemLine = Math.ceil(this.srollview.node.height / this.itemHeight) + 1;\r\n        this.itemCount = this.itemLine * this.perLine;\r\n        this.maxLine = Math.ceil(this.datasLength / this.perLine);\r\n        this.srollview.content.height = this.itemHeight * this.maxLine;\r\n        this.compPool = [];\r\n        this.lastLine = -1;\r\n        // var length = this.itemPool.length > this.datasLength ? this.itemPool.length : this.datasLength;\r\n        // for (let i = 0; i < length; i++) {\r\n        //     if (!this.datas[i]) {\r\n        //         if (this.itemPool[i]) this.itemPool[i].active = false;\r\n        //         continue;\r\n        //     }\r\n\r\n        //     if (!this.itemPool[i]) {\r\n        //         this.itemPool[i] = cc.instantiate(this.itemPrefab);\r\n        //     }\r\n\r\n        //     item = this.itemPool[i];\r\n        //     item.active = true;\r\n        //     item.parent = this.srollview.content;\r\n        //     var line = Math.floor(i / this.perLine);\r\n        //     var rank = i % this.perLine;\r\n        //     // item.line = line;\r\n        //     item.x = rank * this.itemWidth + this.startX;\r\n        //     item.y = -((this.itemHeight * line) + this.startY);\r\n\r\n        //     this.compPool[i] = this.itemPool[i].getComponent(this.className);\r\n        //     this.compPool[i].init(datas[i]);\r\n        //     // this.compPool[i].setOnItemClick(this.target, this.compPool[i]);\r\n        // }\r\n        this.isInit = true;\r\n        this.onScrollView(false);\r\n        return this.itemPool;\r\n    },\r\n\r\n    onScrollView(event) {\r\n\r\n        var curScrollHeight = event ? this.srollview.getScrollOffset().y : 0;\r\n        var startLine = Math.floor(curScrollHeight / this.itemHeight);\r\n        if (startLine < 0) {\r\n            startLine = 0;\r\n        }\r\n        if (startLine === this.lastLine) return;\r\n        this.lastLine = startLine;\r\n        var endLine = startLine + this.itemLine - 1;\r\n\r\n\r\n\r\n        // console.log('startLine', startLine)\r\n        var offset, finalLine, finalIndex, line;\r\n        var length = this.itemPool.length > this.datasLength ? this.itemPool.length : this.datasLength;\r\n        for (let i = 0; i < length; i++) {\r\n            let item = this.itemPool[i];\r\n            line = Math.floor(i / this.perLine);\r\n            if (line < startLine) {\r\n                if (item) item.active = false;\r\n            } else if (line > endLine) {\r\n                if (item) item.active = false;\r\n            } else {\r\n                if (!item) {\r\n                    item = cc.instantiate(this.itemPrefab);\r\n                    this.itemPool[i] = item;\r\n                    item.active = true;\r\n                    item.parent = this.srollview.content;\r\n                    var line = Math.floor(i / this.perLine);\r\n                    var rank = i % this.perLine;\r\n                    item.x = rank * this.itemWidth + this.startX;\r\n                    item.y = -((this.itemHeight * line) + this.startY);\r\n                }\r\n\r\n                if (!this.compPool[i]) {\r\n                    this.compPool[i] = item.getComponent(this.className);\r\n                    if (this.datas[i]) this.compPool[i].init(this.datas[i]);\r\n                }\r\n\r\n                item.active = this.datas[i] ? true : false;\r\n\r\n                // if (this.callback && this.isInit) this.callback(line - startLine, item);\r\n            }\r\n\r\n            // if (finalIndex < this.datasLength) {\r\n            // this.itemPool[finalIndex] = this.itemPool[i];\r\n            // this.compPool[finalIndex] = this.compPool[i];\r\n            // this.itemPool[i] = null;\r\n            // this.compPool[i] = null;\r\n            // this.itemPool[finalIndex].y = -(this.itemHeight * finalLine + this.startY);\r\n            // this.compPool[finalIndex].init(this.datas[finalIndex]);\r\n            // this.target.refreshItem(this.compPool[i]);\r\n            // }\r\n\r\n\r\n        }\r\n        this.isInit = false;\r\n    },\r\n\r\n    scrollToRank(rank, time) {\r\n        this.lastLine = -1;\r\n        var offset = (rank - Math.floor(this.itemCount / 2)) * this.itemHeight\r\n        this.srollview.scrollToOffset(cc.v2(0, offset), time)\r\n        // setTimeout(() => {\r\n        //     this.srollview.scrollToOffset(cc.v2(0, offset + 10), time)\r\n        // }, (time + 0.1) * 1000)\r\n    },\r\n\r\n\r\n    refresh(datas) {\r\n        this.datas = datas;\r\n        this.datasLength = datas.length;\r\n        this.maxLine = Math.ceil(this.datasLength / this.perLine);\r\n        this.srollview.content.height = this.itemHeight * this.maxLine;\r\n        for (let i = 0; i < this.datasLength; i++) {\r\n            if (this.compPool[i] && this.datas[i]) {\r\n                this.compPool[i].init(this.datas[i]);\r\n            }\r\n        }\r\n\r\n    }\r\n});"]}