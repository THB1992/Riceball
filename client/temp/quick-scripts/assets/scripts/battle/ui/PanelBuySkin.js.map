{"version":3,"sources":["PanelBuySkin.js"],"names":["GameData","require","ConfigData","PlayerData","PlatformMgr","ShareType","AdvertMgr","AdverType","Tools","UIUtil","ItemType","StageType","cc","Class","extends","Component","properties","rootAnim","Animation","iconSprite","Sprite","buyKnifeTitleNode","Node","buyHeroTitleNode","adverKnifeTitleNode","adverHeroTitleNode","nameLabel","Label","goldLabel","unlockCountLabel","buyBtn","adverBtn","parctialPool","ParticleSystem","valueLabel","init","callback","world","play","p","resetSystem","skinData","instance","finalGetSkin","string","name","price","isKnifeSkin","heroSkinDatas","indexOf","loadResSprite","url","node","rotation","curTime","getCurTime","knifeSkinDatas","slice","ownKnifeSkins","filterDataByTime","clientData","hideSpecialSkin","isIOS","isApp","ownHeroSkins","getLanguageStr","length","active","isGetByAdver","openAdver","BuySkin","onClose","onBuyBtnClick","gold","updateGold","addKnifeSkin","id","onEquipKnifeSkin","addHeroSkin","onEquipHeroSkin","uiMgr","showReward","showTips","adverBtnClick","closeFunc","success","errFunc","showAdver","onBtnClose","updateRefuseAdverPool","updateRefuseBuyPool"],"mappings":"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","file":"PanelBuySkin.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["const GameData = require('GameData');\r\nconst ConfigData = require('ConfigData');\r\nconst PlayerData = require('PlayerData');\r\nconst PlatformMgr = require('PlatformMgr');\r\nconst ShareType = require('Types').ShareType;\r\nconst AdvertMgr = require('AdvertMgr');\r\nconst AdverType = require('Types').AdverType;\r\nconst Tools = require('Tools');\r\nconst UIUtil = require('UIUtil');\r\nconst ItemType = require('Types').ItemType;\r\nconst StageType = require('Types').StageType;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        rootAnim: cc.Animation,\r\n\r\n        iconSprite: cc.Sprite,\r\n\r\n        buyKnifeTitleNode: cc.Node,\r\n        buyHeroTitleNode: cc.Node,\r\n        adverKnifeTitleNode: cc.Node,\r\n        adverHeroTitleNode: cc.Node,\r\n\r\n        nameLabel: cc.Label,\r\n        goldLabel: cc.Label,\r\n        unlockCountLabel: cc.Label,\r\n\r\n        buyBtn: cc.Node,\r\n        adverBtn: cc.Node,\r\n        parctialPool: [cc.ParticleSystem],\r\n        valueLabel: cc.Label,\r\n    },\r\n\r\n\r\n    init(callback, world) {\r\n        this.rootAnim.play();\r\n        for (let p of this.parctialPool) {\r\n            p.resetSystem();\r\n        }\r\n\r\n        this.world = world;\r\n        this.callback = callback;\r\n        this.skinData = PlayerData.instance.finalGetSkin;\r\n        if (this.skinData) {\r\n\r\n            this.nameLabel.string = this.skinData.name;\r\n            this.goldLabel.string = this.skinData.price;\r\n            this.isKnifeSkin = ConfigData.instance.heroSkinDatas.indexOf(this.skinData) === -1\r\n\r\n            UIUtil.loadResSprite(this.iconSprite, this.skinData.url);\r\n            this.iconSprite.node.rotation = this.isKnifeSkin ? 90 : 0;\r\n\r\n            var curTime = PlayerData.instance.getCurTime();\r\n            var knifeSkinDatas = ConfigData.instance.knifeSkinDatas.slice();\r\n            var ownKnifeSkins = PlayerData.instance.ownKnifeSkins;\r\n            Tools.filterDataByTime(knifeSkinDatas, ownKnifeSkins, curTime, GameData.instance, ConfigData.instance.clientData.hideSpecialSkin, PlatformMgr.isIOS(), PlatformMgr.isApp());\r\n\r\n            var heroSkinDatas = ConfigData.instance.heroSkinDatas.slice();\r\n            var ownHeroSkins = PlayerData.instance.ownHeroSkins;\r\n            Tools.filterDataByTime(heroSkinDatas, ownHeroSkins, curTime, GameData.instance, ConfigData.instance.clientData.hideSpecialSkin, PlatformMgr.isIOS(), PlatformMgr.isApp());\r\n\r\n\r\n            this.valueLabel.string = 'Value';\r\n            this.unlockCountLabel.string = this.isKnifeSkin ? (ConfigData.instance.getLanguageStr('Unlocked weapon') + ':' + ownKnifeSkins.length + '/' + knifeSkinDatas.length) :\r\n                (ConfigData.instance.getLanguageStr('Unlocked hero') + ':' + ownHeroSkins.length + '/' + heroSkinDatas.length);\r\n\r\n\r\n            this.buyKnifeTitleNode.active = !this.skinData.isGetByAdver && this.isKnifeSkin;\r\n            this.buyHeroTitleNode.active = !this.skinData.isGetByAdver && !this.isKnifeSkin;\r\n            this.adverKnifeTitleNode.active = this.skinData.isGetByAdver && this.isKnifeSkin;\r\n            this.adverHeroTitleNode.active = this.skinData.isGetByAdver && !this.isKnifeSkin;\r\n\r\n            this.buyBtn.active = !this.skinData.isGetByAdver;\r\n            this.adverBtn.active = this.skinData.isGetByAdver;\r\n\r\n            if (this.skinData.isGetByAdver) AdvertMgr.instance.openAdver(AdverType.BuySkin);\r\n        } else {\r\n            this.onClose();\r\n        }\r\n        // skinData.isGetByAdver;\r\n\r\n\r\n    },\r\n\r\n    onBuyBtnClick() {\r\n        if (PlayerData.instance.gold >= this.skinData.price) {\r\n            PlayerData.instance.updateGold(-(this.skinData.price));\r\n            if (this.isKnifeSkin) {\r\n                PlayerData.instance.addKnifeSkin(this.skinData.id);\r\n                this.world.onEquipKnifeSkin(this.skinData, true);\r\n            } else {\r\n                PlayerData.instance.addHeroSkin(this.skinData.id);\r\n                this.world.onEquipHeroSkin(this.skinData, true);\r\n            }\r\n            this.world.uiMgr.showReward(this.skinData);\r\n        } else {\r\n            this.world.uiMgr.showTips(7)\r\n        }\r\n        this.onClose();\r\n    },\r\n\r\n    adverBtnClick: function () {\r\n        // 关闭广告时回调\r\n        var closeFunc = (success) => {\r\n            if (success) {\r\n                if (this.isKnifeSkin) {\r\n                    PlayerData.instance.addKnifeSkin(this.skinData.id);\r\n                    this.world.onEquipKnifeSkin(this.skinData, true);\r\n                } else {\r\n                    PlayerData.instance.addHeroSkin(this.skinData.id);\r\n                    this.world.onEquipHeroSkin(this.skinData, true);\r\n                }\r\n                this.world.uiMgr.showReward(this.skinData);\r\n                this.onClose();\r\n            }\r\n        }\r\n        var errFunc = () => {\r\n            this.world.uiMgr.showTips(4);\r\n        }\r\n\r\n        AdvertMgr.instance.showAdver(AdverType.BuySkin, closeFunc, errFunc);\r\n    },\r\n\r\n    onClose() {\r\n        this.node.active = false;\r\n        if (this.callback) this.callback();\r\n    },\r\n\r\n    onBtnClose() {\r\n        this.node.active = false;\r\n\r\n        var id = this.isKnifeSkin ? this.skinData.id + 1000 : this.skinData.id + 2000;\r\n        if (this.skinData.isGetByAdver) {\r\n            PlayerData.instance.updateRefuseAdverPool(id);\r\n        } else {\r\n            PlayerData.instance.updateRefuseBuyPool(id);\r\n        }\r\n        if (this.callback) this.callback();\r\n    },\r\n});"]}