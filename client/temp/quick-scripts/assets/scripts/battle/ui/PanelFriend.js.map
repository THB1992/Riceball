{"version":3,"sources":["PanelFriend.js"],"names":["ShareMgr","require","AdvertMgr","PlatformMgr","ShareType","PlatformType","PanelFriend","cc","Class","extends","Component","properties","wxSubContextView","Node","world","_texture","subDomainSprite","Sprite","_delayRefreshCanvasTime","_refreshCanvasElapsed","_pollInterval","_pollSubDomain","_pollCount","_curPollCount","_clickInterval","init","showOpenDataContext","instance","showBanner","console","log","platformType","WECHAT","Texture2D","size","view","getVisibleSize","openDataContext","wx","getOpenDataContext","sharedCanvas","canvas","width","height","node","active","resetPollState","onShareBtnClick","self","share","Friend","isSuccess","uiMgr","showTips","onCloseBtnClick","closeOpenDataContext","onLeftBtnClick","leftOpenDataContext","onRightBtnClick","rightOpenDataContext","update","dt","_updateSubDomainCanvas","isPollSubDomain","initWithElement","handleLoadedTexture","spriteFrame","SpriteFrame"],"mappings":"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","file":"PanelFriend.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["/**\n * @fileoverview PanelFriend\n * @author meifan@gameley.cn (梅凡)\n */\n\nconst ShareMgr = require('ShareMgr');\nconst AdvertMgr = require('AdvertMgr');\nconst PlatformMgr = require('PlatformMgr');\nconst ShareType = require('Types').ShareType;\nconst PlatformType = require('Types').PlatformType;\n\nconst PanelFriend = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        wxSubContextView: cc.Node,\n        world: null,\n        _texture: null,\n        subDomainSprite: cc.Sprite,\n        _delayRefreshCanvasTime: 0.2,\n        _refreshCanvasElapsed: 0,\n        _pollInterval: 0.3,\n        _pollSubDomain: false,\n        _pollCount: 10,\n        _curPollCount: 0,\n        _clickInterval: 0.2,\n    },\n\n    init: function (world) {\n        this.world = world;\n        this._clickInterval = 0;\n        PlatformMgr.showOpenDataContext();\n        this.showOpenDataContext();\n        AdvertMgr.instance.showBanner();\n        console.log(\"showBanner PanelFriend init \")\n    },\n\n    showOpenDataContext: function () {\n        switch (PlatformMgr.platformType) {\n            // 微信使用子域进行绘制\n            case PlatformType.WECHAT: {\n                this._texture = new cc.Texture2D();\n                const size = cc.view.getVisibleSize();\n                const openDataContext = wx.getOpenDataContext()\n                this.sharedCanvas = openDataContext.canvas;\n                this.sharedCanvas.width = size.width;\n                this.sharedCanvas.height = size.height;\n\n                this.subDomainSprite.node.active = true;\n\n                this._delayRefreshCanvasTime = 0.2;\n                this._refreshCanvasElapsed = 0;\n\n                this.resetPollState();\n                break;\n            }\n            default: {\n                this.subDomainSprite.node.active = false;\n                break;\n            }\n        }\n    },\n\n    onShareBtnClick: function () {\n        const self = this;\n        ShareMgr.share(ShareType.Friend, (isSuccess) => {\n            if (isSuccess) {\n                self.world.uiMgr.showTips(1);\n            }\n        });\n    },\n\n    onCloseBtnClick: function () {\n        this.node.active = false;\n        PlatformMgr.closeOpenDataContext();\n        // AdvertMgr.instance.destoryBanner();\n    },\n\n    onLeftBtnClick: function () {\n        if(this._clickInterval > 0) {\n            return;\n        }\n        this._clickInterval = 0.2;\n\n        PlatformMgr.leftOpenDataContext();\n        this.resetPollState();\n    },\n\n    onRightBtnClick: function () {\n        if(this._clickInterval > 0) {\n            return;\n        }\n        this._clickInterval = 0.2;\n\n        PlatformMgr.rightOpenDataContext();\n        this.resetPollState();\n    },\n\n    // update (dt) {},\n    /** \n     * 定时刷新子域显示\n     * @override \n     * */\n    update: function (dt) {\n        if(this._clickInterval > 0) {\n            this._clickInterval -= dt;\n        }\n\n        if (PlatformMgr.platformType == PlatformType.WECHAT) {\n\n            if (this._delayRefreshCanvasTime > 0) {\n                this._delayRefreshCanvasTime -= dt;\n            } else {\n                if (this._refreshCanvasElapsed > 0) {\n                    this._refreshCanvasElapsed -= dt;\n                } else {\n                    this._refreshCanvasElapsed = this._pollInterval;\n                    this._updateSubDomainCanvas();\n                }\n            }\n        }\n    },\n\n    // 刷新子域的纹理\n    _updateSubDomainCanvas: function () {\n        if (!this.isPollSubDomain()) {\n            return;\n        }\n        if (PlatformMgr.platformType == PlatformType.WECHAT && this._texture) {\n            this._texture.initWithElement(this.sharedCanvas);\n            this._texture.handleLoadedTexture();\n            this.subDomainSprite.spriteFrame = new cc.SpriteFrame(this._texture);\n        }\n    },\n\n    /**\n     * 是否去轮询子域\n     */\n    isPollSubDomain: function () {\n        if (!this._pollSubDomain) return false;\n        this._curPollCount++;\n        if (this._curPollCount > this._pollCount) {\n            this._curPollCount = 0;\n            this._pollSubDomain = false;\n            return false;\n        }\n        return true;\n    },\n\n    resetPollState: function () {\n        this._pollSubDomain = true;\n        this._curPollCount = 0;\n    },\n\n});"]}