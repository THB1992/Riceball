{"version":3,"sources":["PanelOfflineGold.js"],"names":["PlayerData","require","ConfigData","ShareMgr","ShareType","AdvertMgr","AdverType","GrowType","Tools","PlatformMgr","StageType","cc","Class","extends","Component","properties","goldCountLabel","Label","goldCountSprite","Sprite","multipNode","Node","normalLabel","multipLabel","timeLabel","freeIcon","shareIcon","adverIcon","init","world","offlineGoldNormalCount","instance","clientData","offlineGoldInterval","offlineGoldMultipLimit","maxCount","self","reveiveCallF","success","k6_userDate","count","getFinalOfflineGold","updateGold","showGold","param","isMore","isLucky","uiMgr","showGetMoneyEffect","updateGetOfflineGoldTime","refreshData","canUpdate","stage","getCurStageByPrizeCount","func","hasAdver","active","Free","Share","Adver","loadAdver","OfflineGold","time","getOfflineTime","goldCount","receiveTime","getReceiveOfflineGoldTime","offlineGoldCount","data","getGrowLevelDataByType","Gold","rate","realOfflineParam","string","onReceiveBtnClick","showTips","showMultipNode","callback","close","onNormalBtnClick","onMultipBtnClick","closeFunc","showShare","showAdver","errFunc","share","update","dt","fillRange","newCount","Math","floor","finalGold","getGoldStr","remainTime","minute","hour","hourStr","minuteStr","str"],"mappings":"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","file":"PanelOfflineGold.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["const PlayerData = require('PlayerData');\r\nconst ConfigData = require('ConfigData');\r\nconst ShareMgr = require('ShareMgr');\r\nconst ShareType = require('Types').ShareType;\r\nconst AdvertMgr = require('AdvertMgr');\r\nconst AdverType = require('Types').AdverType;\r\nconst GrowType = require('Types').GrowType;\r\nconst Tools = require('Tools');\r\nconst PlatformMgr = require('PlatformMgr');\r\nconst StageType = require('Types').StageType;\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        goldCountLabel: cc.Label,\r\n        goldCountSprite: cc.Sprite,\r\n\r\n        multipNode: cc.Node,\r\n        normalLabel: cc.Label,\r\n        multipLabel: cc.Label,\r\n        timeLabel: cc.Label,\r\n\r\n        freeIcon: cc.Node,\r\n        shareIcon: cc.Node,\r\n        adverIcon: cc.Node,\r\n    },\r\n\r\n    init(world) {\r\n        this.world = world;\r\n        //根据上次领取的时间和当前时间初始化金币数量\r\n\r\n        this.offlineGoldNormalCount = ConfigData.instance.clientData.offlineGoldNormalCount;\r\n        this.offlineGoldInterval = ConfigData.instance.clientData.offlineGoldInterval * 1000;\r\n        this.offlineGoldMultipLimit = ConfigData.instance.clientData.offlineGoldMultipLimit * 1000;\r\n        this.maxCount = 86400 / ConfigData.instance.clientData.offlineGoldInterval;\r\n        // var  = Math.floor(time / 5) * 100 + PlayerData.instance.newOfflineGoldCount;\r\n        // PlayerData.instance.updateOfflineGoldCount(this.goldCount);\r\n\r\n        var self = this;\r\n        // console.log(time, this.goldCount)\r\n        this.reveiveCallF = (success) => {\r\n\r\n\r\n            PlatformMgr.k6_userDate(() => {\r\n                var count = PlayerData.instance.getFinalOfflineGold();\r\n                if (success) count = count * 3;\r\n                PlayerData.instance.updateGold(count);\r\n                PlayerData.instance.showGold -= count;\r\n                var param = {\r\n                    count: count,\r\n                    isMore: success,\r\n                    isLucky: false,\r\n                }\r\n                self.world.uiMgr.showGetMoneyEffect(param);\r\n                PlayerData.instance.updateGetOfflineGoldTime();\r\n                self.refreshData();\r\n            });\r\n        }\r\n\r\n        this.refreshData();\r\n        this.canUpdate = true;\r\n\r\n        // this.stage = ConfigData.instance.getCurStage(PlayerData.instance.playCount, ConfigData.instance.clientData.multipGoldLimit);\r\n        this.stage = ConfigData.instance.getCurStageByPrizeCount(PlayerData.instance);\r\n        var func = (hasAdver) => {\r\n            this.adverIcon.active = hasAdver;\r\n            this.shareIcon.active = !hasAdver;\r\n        }\r\n        switch (this.stage) {\r\n            case StageType.Free:\r\n            case StageType.Share:\r\n                func(false);\r\n                break;\r\n            case StageType.Adver:\r\n                AdvertMgr.instance.loadAdver(AdverType.OfflineGold, func);\r\n                break;\r\n        }\r\n    },\r\n\r\n    refreshData() {\r\n        this.time = PlayerData.instance.getOfflineTime();\r\n        this.goldCount = PlayerData.instance.getFinalOfflineGold();\r\n        this.receiveTime = PlayerData.instance.getReceiveOfflineGoldTime();\r\n        this.offlineGoldCount = PlayerData.instance.offlineGoldCount;\r\n        var data = PlayerData.instance.getGrowLevelDataByType(GrowType.Gold);\r\n        this.rate = data.realOfflineParam / 100 + 1;\r\n        this.goldCountLabel.string = 0;\r\n        this.normalLabel.string = 0;\r\n        this.multipLabel.string = 0;\r\n    },\r\n\r\n    onReceiveBtnClick: function () {\r\n        var time = PlayerData.instance.getReceiveOfflineGoldTime()\r\n        if (time < this.offlineGoldInterval) {\r\n            this.world.uiMgr.showTips(8)\r\n            return;\r\n        }\r\n        //领取当前金币并重置领取时间\r\n\r\n        if (time < this.offlineGoldMultipLimit) {\r\n            this.reveiveCallF(false);\r\n        } else {\r\n            this.showMultipNode()\r\n        }\r\n    },\r\n\r\n    showMultipNode: function (callback) {\r\n        this.callback = callback;\r\n        this.multipNode.active = true;\r\n    },\r\n\r\n    close: function () {\r\n        this.multipNode.active = false;\r\n        if (this.callback) {\r\n            this.callback();\r\n            this.callback = null;\r\n        }\r\n    },\r\n\r\n    onNormalBtnClick: function () {\r\n        this.reveiveCallF(false);\r\n        this.close()\r\n    },\r\n\r\n    onMultipBtnClick: function () {\r\n        var self = this;\r\n        // 关闭广告时回调\r\n        var closeFunc = (success) => {\r\n            if (success) {\r\n                self.reveiveCallF(true);\r\n                self.close();\r\n            }\r\n        }\r\n\r\n        if (this.shareIcon.active) {\r\n            this.showShare(closeFunc)\r\n        } else if (this.adverIcon.active) {\r\n            this.showAdver(closeFunc)\r\n        } else {\r\n            closeFunc(true);\r\n        }\r\n    },\r\n\r\n    showAdver: function (closeFunc) {\r\n        var self = this;\r\n        var errFunc = () => {\r\n            self.showShare(closeFunc);\r\n        }\r\n        AdvertMgr.instance.showAdver(AdverType.OfflineGold, closeFunc, errFunc);\r\n    },\r\n\r\n    showShare: function (closeFunc) {\r\n        ShareMgr.share(ShareType.OfflineGold, closeFunc)\r\n    },\r\n\r\n\r\n    //根据时间不断刷新金币数量\r\n    update(dt) {\r\n        //金币\r\n        if (this.canUpdate) {\r\n            this.time += dt * 1000\r\n            this.goldCountSprite.fillRange = -this.time % this.offlineGoldInterval / this.offlineGoldInterval;\r\n            var newCount = Math.floor(this.time / this.offlineGoldInterval);\r\n\r\n            if (newCount !== this.goldCount && newCount <= this.maxCount) {\r\n                this.goldCount = newCount;\r\n                var finalGold = Math.floor((this.offlineGoldCount + newCount * this.offlineGoldNormalCount * this.rate) * 10) / 10;\r\n\r\n                this.goldCountLabel.string = Tools.getGoldStr(finalGold);\r\n                this.normalLabel.string = Tools.getGoldStr(finalGold);\r\n                this.multipLabel.string = Tools.getGoldStr(finalGold * 3);\r\n            }\r\n\r\n\r\n            //剩余时间\r\n            this.receiveTime += dt * 1000;\r\n            var remainTime = (86400000 - this.receiveTime) / 1000;\r\n            remainTime = remainTime < 0 ? 0 : remainTime;\r\n\r\n            var minute = Math.floor(remainTime % 3600 / 60);\r\n            if (minute !== this.minute) {\r\n                this.minute = minute\r\n                var minute = Math.floor(remainTime % 3600 / 60);\r\n                var hour = Math.floor(remainTime / 3600);\r\n                var hourStr = hour >= 10 ? hour : '0' + hour;\r\n                var minuteStr = minute >= 10 ? minute : '0' + minute;\r\n                var str = hourStr + ':' + minuteStr;\r\n                this.timeLabel.string = str;\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        //时间\r\n\r\n\r\n    },\r\n});"]}