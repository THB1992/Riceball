{"version":3,"sources":["PanelTreasureBox.js"],"names":["UIUtil","require","ConfigData","PlayerData","GameData","ShareType","AdvertMgr","AdverType","Tools","BagItem","ItemType","StageType","cc","Class","extends","Component","properties","bgNode","Node","getKey","keyNode","keyPanel","keyParent","boxNode","boxPrefab","Prefab","boxParent","otherKeyParent","bestRewardAnimation","Animation","bestRewardSprite","Sprite","bestRewardDiamond","adverBtn","closeBtn","adverBtnAnim","init","world","keyCount","turn","refreshTurn","data","instance","getTreasureBigDataByTurn","bestReward","reward","getTimes","times","clearKeyCount","hasGetBest","unlockBoxCount","active","rotation","scale","position","v2","keyPool","children","i","length","initKey","initBox","item","createItemWithString","type","ZONG_ZI","node","loadResSprite","itemData","url","playRewardAnim","height","screenHeight","isPad","play","treasureTurn","datas","treasureBigData","needBreak","HERO_SKIN","isOwnHeroSkin","id","updateTreasureTurn","KNIFE_SKIN","isOwnKnifeSkin","anim","stopUse","setTimeout","runAction","scaleTo","easing","easeBackInOut","j","box","instantiate","parent","boxComp","getComponent","setOnItemClick","onItemClick","event","comp","hasGet","useKey","index","key","initPos","x","y","sequence","moveTo","callFunc","getReward","close","showAdverBtn","func","hasAdver","openAdver","TreasurBox","loadAdver","getSmallReward","isInTimes","percent","Math","random","getBigReward","getRandomItemByWeight","treasureSmallData","rate","rankData","goldMultiRate","ceil","getRandomInt","range","onAdverBtnClick","closeFunc","success","fireBaseEvent","getAdvertUnitId","showAdver","playKeyAnim","pos","spawn","rotateTo","okBtnClick","uiMgr","openPanelKeyCount","update","dt"],"mappings":"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","file":"PanelTreasureBox.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\battle\\ui","sourcesContent":["const UIUtil = require('UIUtil');\r\nconst ConfigData = require('ConfigData');\r\nconst PlayerData = require('PlayerData');\r\nconst GameData = require('GameData');\r\nconst ShareType = require('Types').ShareType;\r\nconst AdvertMgr = require('AdvertMgr');\r\nconst AdverType = require('Types').AdverType;\r\nconst Tools = require('Tools');\r\nconst BagItem = require('BagItem');\r\nconst ItemType = require('Types').ItemType;\r\nconst StageType = require('Types').StageType;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        bgNode: cc.Node,\r\n        getKey: cc.Node,\r\n\r\n\r\n        keyNode: cc.Node,\r\n        keyPanel: cc.Node,\r\n        keyParent: cc.Node,\r\n\r\n        boxNode: cc.Node,\r\n        boxPrefab: cc.Prefab,\r\n        boxParent: cc.Node,\r\n        otherKeyParent: cc.Node,\r\n        bestRewardAnimation: cc.Animation,\r\n        bestRewardSprite: cc.Sprite,\r\n        bestRewardDiamond: cc.Node,\r\n\r\n        adverBtn: cc.Node,\r\n        closeBtn: cc.Node,\r\n        adverBtnAnim: cc.Animation,\r\n    },\r\n\r\n    init(world) {\r\n        this.world = world;\r\n        this.keyCount = 3;\r\n        this.turn = this.refreshTurn()\r\n\r\n\r\n        var data = ConfigData.instance.getTreasureBigDataByTurn(this.turn);\r\n        this.bestReward = data.reward;\r\n        this.getTimes = data.times;\r\n        PlayerData.instance.clearKeyCount();\r\n\r\n        this.hasGetBest = false;\r\n        this.unlockBoxCount = 0;\r\n        this.keyPanel.active = false;\r\n        this.boxNode.active = true;\r\n        this.closeBtn.active = false;\r\n        this.getKey.active = true;\r\n        this.getKey.rotation = 0;\r\n        this.getKey.scale = 1;\r\n        this.getKey.position = cc.v2(0, 0)\r\n\r\n        var keyPool = this.keyParent.children;\r\n        for (let i = 0; i < keyPool.length; i++) {\r\n            keyPool[i].active = i + 1 < this.keyCount;\r\n        }\r\n\r\n\r\n\r\n        this.initKey();\r\n        this.initBox();\r\n        var item = BagItem.createItemWithString(this.bestReward);\r\n        this.bestRewardDiamond.active = item.type === ItemType.ZONG_ZI;\r\n        this.bestRewardSprite.node.active = !this.bestRewardDiamond.active;\r\n        if (this.bestRewardSprite.node.active) {\r\n            UIUtil.loadResSprite(this.bestRewardSprite, item.itemData.url);\r\n        }\r\n        this.playRewardAnim();\r\n        // this.bestReward.node.runAction(cc.sequence(cc.sca))\r\n\r\n        this.bgNode.height = GameData.instance.screenHeight;\r\n        this.boxNode.scale = GameData.instance.isPad() ? 0.8 : 1;\r\n    },\r\n\r\n    playRewardAnim() {\r\n        this.bestRewardAnimation.play();\r\n    },\r\n\r\n    refreshTurn() {\r\n        //如果已拥有某些皮肤则跳过\r\n        var turn = PlayerData.instance.treasureTurn;\r\n        var datas = ConfigData.instance.treasureBigData;\r\n        for (let i = turn; i < datas.length; i++) {\r\n            var item = BagItem.createItemWithString(datas[i].reward);\r\n            var needBreak = false;\r\n            switch (item.type) {\r\n                case ItemType.HERO_SKIN:\r\n                    if (PlayerData.instance.isOwnHeroSkin(item.id)) {\r\n                        PlayerData.instance.updateTreasureTurn();\r\n                    }\r\n                    break;\r\n                case ItemType.KNIFE_SKIN:\r\n                    if (PlayerData.instance.isOwnKnifeSkin(item.id)) {\r\n                        PlayerData.instance.updateTreasureTurn();\r\n                    }\r\n                    break;\r\n                default:\r\n                    needBreak = true;\r\n                    break;\r\n            }\r\n            if (needBreak) break;\r\n        }\r\n        return PlayerData.instance.treasureTurn;\r\n    },\r\n\r\n    initKey(anim) {\r\n\r\n        for (let i = 0; i < this.otherKeyParent.children.length; i++) {\r\n            if (anim) {\r\n                this.stopUse = true;\r\n                if (i < this.keyCount) {\r\n                    let node = this.otherKeyParent.children[i]\r\n                   \r\n                    // node.opacity = 0;\r\n                    node.scale = 1.8;\r\n                    setTimeout(() => {\r\n                        node.active = true;\r\n                        node.runAction(cc.scaleTo(0.3, 1).easing(cc.easeBackInOut(3.0)));\r\n                        // node.runAction(cc.fadeIn(1.0));\r\n                    }, i * 200);\r\n\r\n                }\r\n                setTimeout(() => {\r\n                    this.stopUse = false;\r\n                }, 900)\r\n            } else {\r\n                this.otherKeyParent.children[i].active = i < this.keyCount;\r\n            }\r\n\r\n        }\r\n        this.adverBtn.active = false;\r\n        this.keyNode.active = true;\r\n        this.closeBtn.active = false;\r\n    },\r\n\r\n    initBox() {\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                var box = this.boxParent.children[i * 3 + j];\r\n                if (!box) {\r\n                    var box = cc.instantiate(this.boxPrefab);\r\n                    box.parent = this.boxParent;\r\n                    box.position = cc.v2(i * 220, j * -220);\r\n                }\r\n                var boxComp = box.getComponent('ItemTreasureBox');\r\n                boxComp.init()\r\n                boxComp.setOnItemClick(this, boxComp)\r\n            }\r\n        }\r\n    },\r\n\r\n    onItemClick(event, comp) {\r\n        if (this.stopUse) return;\r\n        if (this.keyCount > 0) {\r\n            if (!comp.hasGet) {\r\n                this.useKey(comp);\r\n            }\r\n        } else {\r\n            this.adverBtnAnim.play('ani-btn-dance')\r\n        }\r\n    },\r\n\r\n    useKey(comp) {\r\n        // this.isUse = true;\r\n        let index = this.keyCount - 1\r\n        var key = this.otherKeyParent.children[index]\r\n        this.keyCount--;\r\n        comp.hasGet = true;\r\n        let initPos = cc.v2(key.x, key.y);\r\n        key.runAction(\r\n            cc.sequence(\r\n                cc.moveTo(0.5, comp.node.position),\r\n                cc.callFunc(() => {\r\n                    key.active = false;\r\n                    key.position = initPos;\r\n                    var reward = this.getReward();\r\n                    var item = BagItem.createItemWithString(reward);\r\n                    comp.getReward(item);\r\n                    setTimeout(() => {\r\n                        this.world.getReward(item);\r\n                    }, 800);\r\n                    if (index === 0) {\r\n                        if (this.unlockBoxCount === 9) {\r\n                            setTimeout(() => {\r\n                                this.close()\r\n                            }, 2000)\r\n                        } else {\r\n                            setTimeout(() => {\r\n                                this.showAdverBtn();\r\n                            }, 1000)\r\n                        }\r\n                    }\r\n                    // this.isUse = false;\r\n                })\r\n            )\r\n        )\r\n    },\r\n\r\n    showAdverBtn: function () {\r\n        this.keyNode.active = false;\r\n        this.adverBtn.active = true;\r\n        setTimeout(() => {\r\n            this.closeBtn.active = true;\r\n        }, 1000);\r\n\r\n        this.adverBtnAnim.play('ani-btn-active');\r\n\r\n        var func = (hasAdver) => {\r\n            if (hasAdver) {\r\n                AdvertMgr.instance.openAdver(AdverType.TreasurBox);\r\n            }\r\n        }\r\n        AdvertMgr.instance.loadAdver(AdverType.TreasurBox, func);\r\n    },\r\n    //\r\n    getReward() {\r\n        this.unlockBoxCount++\r\n        if (this.hasGetBest) return this.getSmallReward();\r\n        if (this.getTimes) {\r\n            if (this.isInTimes()) {\r\n                var percent = (this.unlockBoxCount - (this.getTimes - 1) * 3) === 3 ? 1 : 0\r\n                if (Math.random() < percent) {\r\n                    return this.getBigReward();\r\n                } else {\r\n                    return this.getSmallReward();\r\n                }\r\n            } else {\r\n                return this.getSmallReward();\r\n            }\r\n        } else {\r\n            var percent = this.unlockBoxCount / 9;\r\n            if (Math.random() < percent) {\r\n                return this.getBigReward();\r\n            } else {\r\n                return this.getSmallReward();\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    getSmallReward() {\r\n        var data = Tools.getRandomItemByWeight(ConfigData.instance.treasureSmallData)\r\n        var rate = data.type === ItemType.ZONG_ZI ? 1 : (1 + PlayerData.instance.rankData.goldMultiRate);\r\n        return data.type + ',0,' + Math.ceil(Tools.getRandomInt(data.range[0], data.range[1]) * rate);\r\n    },\r\n\r\n    getBigReward() {\r\n        this.hasGetBest = true;\r\n        PlayerData.instance.updateTreasureTurn();\r\n        return this.bestReward;\r\n    },\r\n\r\n    isInTimes() {\r\n        return this.unlockBoxCount > (this.getTimes - 1) * 3 && this.unlockBoxCount <= this.getTimes * 3\r\n    },\r\n\r\n\r\n    onAdverBtnClick() {\r\n        // 关闭广告时回调\r\n        var closeFunc = (success) => {\r\n            if (success) {\r\n                this.keyCount = 3;\r\n                this.initKey(true);\r\n            }\r\n        }\r\n        //点击获取特殊武器按钮\r\n        AdvertMgr.instance.fireBaseEvent(\"click_adv_btn\",\"position_id\",ConfigData.instance.getAdvertUnitId(AdverType.TreasurBox));\r\n\r\n        AdvertMgr.instance.showAdver(AdverType.TreasurBox, closeFunc);\r\n\r\n    },\r\n\r\n    playKeyAnim: function () {\r\n        var pos = cc.v2(this.keyCount * 100 - 200, 110);\r\n        this.getKey.runAction(cc.sequence(cc.scaleTo(0.5, 2), cc.callFunc(() => {\r\n            this.keyPanel.active = true;\r\n        }), cc.spawn(cc.moveTo(0.5, pos), cc.scaleTo(0.5, 0.5), cc.rotateTo(0.5, -30)), cc.callFunc(() => {\r\n            this.keyParent.children[this.keyCount - 1].active = true;\r\n            this.getKey.active = false;\r\n        })))\r\n    },\r\n\r\n\r\n    okBtnClick() {\r\n        if (this.keyCount === 3) {\r\n            this.boxNode.active = true;\r\n            PlayerData.instance.clearKeyCount();\r\n        } else {\r\n            this.close();\r\n        }\r\n    },\r\n\r\n    close() {\r\n        this.node.active = false;\r\n        this.world.uiMgr.openPanelKeyCount(true);\r\n    },\r\n\r\n    update(dt) {\r\n\r\n    },\r\n});"]}