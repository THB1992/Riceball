{"version":3,"sources":["ScrollViewCulling.js"],"names":["ListItemBase","require","ScrollViewCulling","cc","Class","extends","Component","properties","scrollView","ScrollView","mask","Mask","layout","Layout","listItems","listParam","startLine","endLine","init","getComponentInChildren","content","getComponent","node","on","onScrolling","listItemSize","undefined","listItem","length","size","width","height","gapSize","spacingX","spacingY","listSize","getContentSize","countPerLine","lineCount","Math","ceil","isHorizon","getLayout","isForce","offset","getScrollOffset","y","cellHeight","floor","showIndex","index","active","line","setVisible","x","cellWidth"],"mappings":"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","file":"ScrollViewCulling.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\common","sourcesContent":["/**\r\n * @fileoverview ScrollViewCulling\r\n * @author <liqing@gameley.cn> (李清)\r\n */\r\n\r\nconst ListItemBase = require('ListItemBase');\r\n\r\n/**\r\n * ScrollViewCulling ScrollView裁剪类\r\n */\r\nconst ScrollViewCulling = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        scrollView: cc.ScrollView,\r\n        mask: cc.Mask,\r\n        layout: cc.Layout,\r\n        listItems: [ListItemBase],\r\n        listParam: null,\r\n        startLine: -1,\r\n        endLine: -1,\r\n    },\r\n\r\n    init: function (scrollView, listItems, listParam = null, mask = null, layout = null) {\r\n        this.scrollView = scrollView;\r\n        this.listItems = listItems ? listItems : [];\r\n\r\n        if (mask) {\r\n            this.mask = mask;\r\n        } else if (this.scrollView) {\r\n            this.mask = this.scrollView.getComponentInChildren(cc.Mask);\r\n        }\r\n        if (layout) {\r\n            this.layout = layout;\r\n        } else if (this.scrollView && this.scrollView.content) {\r\n            this.layout = this.scrollView.content.getComponent(cc.Layout);\r\n        }\r\n        if (this.scrollView) {\r\n            this.scrollView.node.on('scrolling', this.onScrolling, this);\r\n        }\r\n        if (listParam) {\r\n            this.listParam = listParam;\r\n        } else {\r\n            this.listParam = {};\r\n        }\r\n        if (this.listParam.listItemSize == undefined) {\r\n            var listItem = this.listItems && this.listItems.length > 0 ? this.listItems[0] : null;\r\n            this.listParam.listItemSize = listItem ? cc.size(listItem.node.width, listItem.node.height) : cc.size();\r\n        }\r\n        if (this.listParam.gapSize == undefined) {\r\n            this.listParam.gapSize = this.layout ? cc.size(this.layout.spacingX, this.layout.spacingY) : cc.size();\r\n        }\r\n        if (this.listParam.listSize == undefined) {\r\n            this.listParam.listSize = this.mask ? this.mask.node.getContentSize() :\r\n                this.scrollView && this.scrollView.content ? this.scrollView.content.getContentSize() :\r\n                this.scrollView.node.getContentSize();\r\n        }\r\n        if (this.listParam.countPerLine == undefined) {\r\n            this.listParam.countPerLine = 1;\r\n        }\r\n        this.listParam.lineCount = Math.ceil(this.listItems.length / this.listParam.countPerLine);\r\n        // console.log('scrollView:', this.scrollView);\r\n        // console.log('listItems:', this.listItems);\r\n        // console.log('mask:', this.mask);\r\n\r\n        if (this.listParam.isHorizon) {\r\n            this.isHorizon = true;\r\n        }\r\n        \r\n        this.onScrolling(this.scrollView);\r\n    },\r\n\r\n    getLayout(layout) {\r\n        if (layout) {\r\n            return layout;\r\n        } else if (this.scrollView && this.scrollView.content) {\r\n            return this.scrollView.getComponent(cc.Layout);\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    // 添加强制刷新功能，在顺序替换时使用\r\n    onScrolling: function (scrollView, isForce) {\r\n        // console.log('onScrolling, offset:', scrollView.getScrollOffset());\r\n        var offset = scrollView.getScrollOffset();\r\n        if (!this.isHorizon) {\r\n            var y = offset.y;\r\n            var cellHeight = this.listParam.listItemSize.height + this.listParam.gapSize.height;\r\n            var startLine = Math.floor(y / cellHeight);\r\n            var endLine = Math.floor((y + this.listParam.listSize.height) / cellHeight);\r\n            if (isForce || this.startLine !== startLine || this.endLine !== endLine) {\r\n                this.startLine = startLine;\r\n                this.endLine = endLine;\r\n                var showIndex = 0;\r\n                for (let index = 0; index < this.listItems.length; index++) {\r\n                    const listItem = this.listItems[index];\r\n                    if(listItem.node.active) {\r\n                        const line = Math.floor(showIndex / this.listParam.countPerLine);\r\n                        listItem.setVisible(line >= this.startLine && line <= this.endLine);\r\n                        showIndex++;\r\n                    }\r\n                    \r\n                }\r\n                // console.log('visible line:' + startLine + ' - ' + endLine);\r\n            }\r\n        } else {\r\n            var x = -offset.x;\r\n            var cellWidth = this.listParam.listItemSize.width + this.listParam.gapSize.width;\r\n            var startLine = Math.floor(x / cellWidth);\r\n            var endLine = Math.floor((x + this.listParam.listSize.width) / cellWidth);\r\n            if (isForce || this.startLine !== startLine || this.endLine !== endLine) {\r\n                this.startLine = startLine;\r\n                this.endLine = endLine;\r\n                var showIndex = 0;\r\n                for (let index = 0; index < this.listItems.length; index++) {\r\n                    const listItem = this.listItems[index];\r\n                    if(listItem.node.active) {\r\n                        const line = Math.floor(showIndex / this.listParam.countPerLine);\r\n                        listItem.setVisible(line >= this.startLine && line <= this.endLine);\r\n                        showIndex++;\r\n                    }\r\n                }\r\n                // console.log('visible line:' + startLine + ' - ' + endLine);\r\n            }\r\n        }\r\n\r\n    },\r\n});"]}